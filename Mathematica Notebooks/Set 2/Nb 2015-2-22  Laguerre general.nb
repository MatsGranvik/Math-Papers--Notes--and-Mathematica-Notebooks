(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    390446,      10454]
NotebookOptionsPosition[    367145,       9662]
NotebookOutlinePosition[    367488,       9677]
CellTagsIndexPosition[    367445,       9674]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "@", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"k", "!"}], ")"}]}], " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "^", "k"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]}], " ", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"BernoulliB", "[", "k", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"k", "!"}], ")"}]}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], "^", "k"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632407178205497*^9, 3.6324071826067486`*^9}, {
  3.6324074887262573`*^9, 3.6324075380710797`*^9}, {3.6324075763812714`*^9, 
  3.632407582982649*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "n"}]], "Output",
 CellChangeTimes->{{3.632407498224801*^9, 3.632407538308093*^9}, 
   3.632407583248664*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "@", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"k", "!"}], ")"}]}], " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"n", "-", "1"}], ")"}], "^", 
       RowBox[{"(", "k", ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]}], " ", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"BernoulliB", "[", "k", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"k", "!"}], ")"}]}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"k", "+", "a"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6324076580149403`*^9, 3.632407700044344*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}], ")"}], 
  RowBox[{"1", "+", "a"}]]], "Output",
 CellChangeTimes->{{3.6324076603730755`*^9, 3.6324077003163595`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"k", "!"}], ")"}]}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], "^", 
      RowBox[{"(", "k", ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6324077574616284`*^9, 3.632407774714615*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  SuperscriptBox["\[ExponentialE]", 
   RowBox[{
    RowBox[{"-", "1"}], "+", "n"}]]}]], "Output",
 CellChangeTimes->{{3.63240776011578*^9, 3.6324077749586287`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "@", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"BernoulliB", "[", "k", "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"k", "!"}], ")"}]}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"n", "-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"k", "+", "a"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632407781356995*^9, 3.6324077883703957`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}], ")"}], 
   RowBox[{"1", "+", "a"}]], 
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "n"}]]}]]], "Output",
 CellChangeTimes->{{3.6324077815970087`*^9, 3.6324077885454063`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"gg", "[", 
   RowBox[{"n_", ",", " ", "rr_"}], "]"}], " ", ":=", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", 
    RowBox[{"(", "rr", ")"}]}], " ", 
   RowBox[{
    RowBox[{"Gamma", "[", " ", 
     RowBox[{"rr", ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "/", 
    RowBox[{"Gamma", "[", "rr", "]"}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"aa", "[", 
   RowBox[{"n_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"k", "+", "1"}], ")"}]}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"k", "-", "1"}], ")"}], "!"}]}], " ", 
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"t", "^", 
       RowBox[{"(", 
        RowBox[{"k", "-", "1"}], ")"}]}], 
      RowBox[{"E", "^", 
       RowBox[{"-", "t"}]}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}], ",", "0"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6324078076975017`*^9, 3.6324078573023386`*^9}, {
  3.632407887862087*^9, 3.6324078953015127`*^9}, {3.632408522832405*^9, 
  3.63240852588858*^9}, {3.6324085850579643`*^9, 3.6324086033510103`*^9}, {
  3.632408646213462*^9, 3.6324086479365606`*^9}, {3.632408891965518*^9, 
  3.6324088996679587`*^9}, {3.632408988786056*^9, 3.632409040943039*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"k", "!"}], ")"}]}], " ", 
      RowBox[{"gg", "[", 
       RowBox[{"20", ",", "k"}], "]"}]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "100"}], "}"}]}], "]"}], 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BernoulliB", "[", "k", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"k", "!"}], ")"}]}], 
      RowBox[{"gg", "[", 
       RowBox[{"20", ",", "k"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "120"}], "}"}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324079107063932`*^9, 3.6324079233311157`*^9}, {
  3.632407963469411*^9, 3.6324079758521194`*^9}, {3.6324081610057096`*^9, 
  3.6324081688991613`*^9}, {3.6324084714894686`*^9, 3.6324084759387226`*^9}, {
  3.6324086283664412`*^9, 3.632408628471447*^9}, {3.6324086615203376`*^9, 
  3.632408667021652*^9}}],

Cell[BoxData[
 RowBox[{"-", "254.93876442131182`"}]], "Output",
 CellChangeTimes->{{3.6324086235111637`*^9, 3.632408667702691*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.632407897046612*^9, 3.6324079056891065`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "@", 
  RowBox[{"N", "@", 
   RowBox[{"gg", "[", 
    RowBox[{"10", ",", "10"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6324079050800714`*^9, 3.6324079050940723`*^9}, {
  3.6324085036613083`*^9, 3.6324085178611207`*^9}}],

Cell[BoxData["0.009521609165032086`"], "Output",
 CellChangeTimes->{{3.632408507236513*^9, 3.6324085180041285`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"(", 
       RowBox[{"k", "!"}], ")"}]}], " ", 
     RowBox[{"gg", "[", 
      RowBox[{"20", ",", "k"}], "]"}]}], " ", ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "100"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.632408565349837*^9, 3.632408577910555*^9}, 
   3.6324086117744923`*^9}],

Cell[BoxData["49.53501306531949`"], "Output",
 CellChangeTimes->{{3.632408565652854*^9, 3.63240857816557*^9}, {
  3.632408609221346*^9, 3.632408615947731*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"k", "!"}], ")"}]}], " ", 
    RowBox[{"aa", "[", 
     RowBox[{"n", ",", "k"}], "]"}]}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632408907468405*^9, 3.6324089122046757`*^9}, {
  3.632409065827462*^9, 3.6324090663154907`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6324089278885727`*^9, 3.6324091243298087`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"aa", "[", 
   RowBox[{"30", ",", "4"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6324090233330317`*^9, 3.6324090492255125`*^9}}],

Cell[BoxData["96.24146612314854`"], "Output",
 CellChangeTimes->{{3.6324090254501534`*^9, 3.6324090495985346`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "@", 
  RowBox[{"N", "[", 
   RowBox[{"gg", "[", 
    RowBox[{"30", ",", "4"}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6324090273742633`*^9, 3.6324090506815963`*^9}}],

Cell[BoxData["96.24146612314854`"], "Output",
 CellChangeTimes->{{3.632409028593333*^9, 3.632409050874607*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"k", "+", "1"}], ")"}]}], "/", 
       RowBox[{"(", "k", ")"}]}], "  ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"k", "+", "1"}], ")"}]}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "!"}]}], "  ", 
        RowBox[{"t", "^", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}], 
        RowBox[{"E", "^", 
         RowBox[{"-", "t"}]}]}], ")"}]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "n", "]"}]}], ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632409097145254*^9, 3.6324091171783996`*^9}, {
  3.632409622226287*^9, 3.63240963259888*^9}, {3.632409701751835*^9, 
  3.632409706275094*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "EulerGamma"}], "+", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{"Log", "[", "n", "]"}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"Log", "[", "n", "]"}], "]"}]}], ",", 
   RowBox[{
    RowBox[{"Log", "[", "n", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.6324091274749885`*^9, {3.632409622718315*^9, 3.6324096351760273`*^9}, 
   3.632409707089141*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"BernoulliB", "[", "k", "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"k", "!"}], ")"}]}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", 
          RowBox[{"(", 
           RowBox[{"k", "+", "1"}], ")"}]}], "/", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"k", "-", "1"}], ")"}], "!"}]}], "  ", 
        RowBox[{"t", "^", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}], 
        RowBox[{"E", "^", 
         RowBox[{"-", "t"}]}]}], ")"}]}], " ", ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "n", "]"}]}], ",", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632409147802151*^9, 3.6324091607218904`*^9}, {
  3.632409269955138*^9, 3.632409275531457*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", 
   RowBox[{"-", 
    RowBox[{"Log", "[", "n", "]"}]}], "0"], 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     UnderoverscriptBox["\[Sum]", 
      RowBox[{"k", "=", "0"}], "\[Infinity]"], 
     FractionBox[
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], 
        RowBox[{"1", "+", "k"}]], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "t"}]], " ", 
       SuperscriptBox["t", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "k"}]], " ", 
       RowBox[{"BernoulliB", "[", "k", "]"}]}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "1"}], "+", "k"}], ")"}], "!"}], " ", 
       RowBox[{"k", "!"}]}]]}], ")"}], 
   RowBox[{"\[DifferentialD]", "t"}]}]}]], "Output",
 CellChangeTimes->{3.632409141795808*^9, 3.6324091912936387`*^9, 
  3.632409335625894*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"aa", "[", 
   RowBox[{"n_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"k", "+", "1"}], ")"}]}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"k", "-", "1"}], ")"}], "!"}]}], " ", 
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"t", "^", 
       RowBox[{"(", 
        RowBox[{"k", "-", "1"}], ")"}]}], 
      RowBox[{"E", "^", 
       RowBox[{"-", "t"}]}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}], ",", "0"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ab", "[", 
   RowBox[{"n_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"k", "+", "1"}], ")"}]}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"k", "-", "1"}], ")"}], "!"}]}], " ", 
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "t"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"k", "-", "1"}], ")"}]}], 
      RowBox[{"E", "^", "t"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", " ", 
       RowBox[{"Log", "[", "n", "]"}]}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ac", "[", 
   RowBox[{"n_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"k", "-", "1"}], ")"}], "!"}]}], " ", 
   RowBox[{"Integrate", "[", "  ", 
    RowBox[{
     RowBox[{
      RowBox[{"t", "^", 
       RowBox[{"(", 
        RowBox[{"k", "-", "1"}], ")"}]}], 
      RowBox[{"E", "^", "t"}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", " ", 
       RowBox[{"Log", "[", "n", "]"}]}], "}"}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.6324176414779615`*^9, 3.632417689928733*^9}, {
   3.6324177893094172`*^9, 3.632417825255473*^9}, 3.632417856782276*^9, {
   3.632417931888572*^9, 3.632417939625015*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", " ", 
  RowBox[{
   RowBox[{"N", "@", 
    RowBox[{"aa", "[", 
     RowBox[{"79", ",", "k"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324176125083046`*^9, 3.6324176366626863`*^9}, {
  3.6324178676808996`*^9, 3.632417868180928*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "78.`", ",", "267.1863803448947`", ",", "486.9505638045375`", ",", 
   "611.4367865553888`", ",", "588.3997757463916`"}], "}"}]], "Output",
 CellChangeTimes->{{3.632417617203573*^9, 3.632417637005706*^9}, 
   3.6324178304467697`*^9, 3.6324178686409545`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", " ", 
  RowBox[{
   RowBox[{"N", "@", 
    RowBox[{"ac", "[", 
     RowBox[{"79", ",", "k"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324176666464014`*^9, 3.6324176666854033`*^9}, {
  3.632417794870735*^9, 3.632417794939739*^9}, {3.6324178702280455`*^9, 
  3.6324178708050785`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "78.`", ",", "267.1863803448947`", ",", "486.9505638045375`", ",", 
   "611.4367865553887`", ",", "588.3997757463917`"}], "}"}]], "Output",
 CellChangeTimes->{{3.6324176671234283`*^9, 3.632417692252866*^9}, {
  3.632417795257757*^9, 3.632417831002802*^9}, {3.6324178638446803`*^9, 
  3.632417871138098*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Simplify", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "k"}]}], " ", 
    RowBox[{
     RowBox[{"(", "t", ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"k", "-", "1"}], ")"}]}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"t", "\[Rule]", "3.3"}], ",", 
    RowBox[{"k", "\[Rule]", "3"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6324177037765245`*^9, 3.6324177810559454`*^9}}],

Cell[BoxData["10.889999999999999`"], "Output",
 CellChangeTimes->{{3.6324177314411073`*^9, 3.632417782133007*^9}, 
   3.632417859851452*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"z", ",", "k"}], "]"}], " ", 
       RowBox[{"1", "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}], "!"}]}], "  ", 
       RowBox[{"t", "^", 
        RowBox[{"(", 
         RowBox[{"k", "-", "1"}], ")"}]}], 
       RowBox[{"E", "^", "t"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "-", "s"}], ")"}], 
       RowBox[{"Log", "[", "n", "]"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.6324179181717873`*^9, {3.6324179604282045`*^9, 3.632418013094217*^9}, {
   3.6324181826089125`*^9, 3.6324181839199877`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    RowBox[{"LaguerreL", "[", 
     RowBox[{
      RowBox[{"-", "z"}], ",", 
      RowBox[{
       RowBox[{"Log", "[", "n", "]"}], "-", 
       RowBox[{"s", " ", 
        RowBox[{"Log", "[", "n", "]"}]}]}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "\[LessEqual]", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"Log", "[", "n", "]"}], "-", 
       RowBox[{"s", " ", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "\[LessEqual]", "1"}], "||", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", 
      RowBox[{"Log", "[", "n", "]"}]}], "\[NotElement]", "Reals"}]}]}], 
  "]"}]], "Output",
 CellChangeTimes->{{3.6324179986793923`*^9, 3.6324180153193445`*^9}, 
   3.632418190746378*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"k", "+", "1"}], ")"}]}], "/", "k"}], "  ", 
      RowBox[{"1", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"k", "-", "1"}], ")"}], "!"}]}], "  ", 
      RowBox[{"t", "^", 
       RowBox[{"(", 
        RowBox[{"k", "-", "1"}], ")"}]}], 
      RowBox[{"E", "^", "t"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"t", ",", "0", ",", " ", 
     RowBox[{"Log", "[", "n", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324179175537524`*^9, 3.6324179175757537`*^9}, {
  3.6324180673713217`*^9, 3.6324180773348913`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "EulerGamma"}], "+", 
  RowBox[{"ExpIntegralEi", "[", 
   RowBox[{"Log", "[", "n", "]"}], "]"}], "-", 
  RowBox[{"Log", "[", 
   RowBox[{"Log", "[", "n", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.632418078440954*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"N", "@", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Binomial", "[", 
        RowBox[{"3", ",", "k"}], "]"}], " ", 
       RowBox[{"1", "/", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"3", "-", "1"}], ")"}], "^", "k"}]}], " ", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"k", ",", "0", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"3", "-", "1"}], ")"}], 
           RowBox[{"Log", "[", "100", "]"}]}]}], "]"}], "/", 
        RowBox[{"Gamma", "[", "k", "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "1", ",", "40"}], "}"}]}], "]"}]}], "+", 
   "1"}]}]], "Input",
 CellChangeTimes->{{3.632417841303391*^9, 3.6324178458616514`*^9}, 
   3.6324179060280933`*^9, {3.6324182039531336`*^9, 3.6324182706109457`*^9}, {
   3.6324183091811523`*^9, 3.6324183364647126`*^9}, {3.6324195775717*^9, 
   3.632419586000182*^9}}],

Cell[BoxData["3.3734264054064043`"], "Output",
 CellChangeTimes->{{3.6324182391101446`*^9, 3.6324182689558516`*^9}, {
   3.6324183075220575`*^9, 3.632418342246043*^9}, 3.6324195864282064`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"LaguerreL", "[", 
   RowBox[{
    RowBox[{"-", "3"}], ",", 
    RowBox[{"-", "1"}], ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"3", "-", "1"}], ")"}], 
     RowBox[{"Log", "[", "100.", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632417905378056*^9, 3.632417905397057*^9}, {
  3.6324182750722013`*^9, 3.632418281741583*^9}, {3.632418344915196*^9, 
  3.632418345816248*^9}, {3.6324195908044567`*^9, 3.6324196343529477`*^9}}],

Cell[BoxData[
 RowBox[{"-", "2.242601400464133`*^6"}]], "Output",
 CellChangeTimes->{{3.632418316154551*^9, 3.6324183461362658`*^9}, {
  3.632419591948522*^9, 3.6324196347409697`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{"t", 
        RowBox[{"(", 
         RowBox[{"1", "-", "0"}], ")"}]}], ")"}]}], " ", "z", " ", 
     RowBox[{"Hypergeometric1F1", "[", " ", 
      RowBox[{
       RowBox[{"1", "-", "z"}], ",", " ", "2", ",", " ", "t"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}], ",", "0"}], "}"}]}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"n", "\[Rule]", "100"}], ",", 
    RowBox[{"z", "\[Rule]", "3"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.632417880604639*^9, 3.6324179040199785`*^9}, {
  3.6324183801162095`*^9, 3.6324185932423997`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "200"], " ", 
  RowBox[{"(", 
   RowBox[{"1386", "-", 
    RowBox[{"8", " ", 
     RowBox[{"Log", "[", "100", "]"}]}], "-", 
    SuperscriptBox[
     RowBox[{"Log", "[", "100", "]"}], "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.63241841859241*^9, 3.632418428175958*^9}, {
  3.6324184589067163`*^9, 3.6324185941434507`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", 
   FractionBox["1", "200"]}], " ", 
  RowBox[{"(", 
   RowBox[{"1386", "-", 
    RowBox[{"8", " ", 
     RowBox[{"Log", "[", "100", "]"}]}], "-", 
    SuperscriptBox[
     RowBox[{"Log", "[", "100", "]"}], "2"]}], ")"}]}]], "Input",
 CellChangeTimes->{{3.6324185964285817`*^9, 3.6324185965455885`*^9}}],

Cell[BoxData["6.639755230350907`"], "Output",
 CellChangeTimes->{3.632418596677596*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"LaguerreL", "[", 
   RowBox[{
    RowBox[{"-", "3"}], ",", 
    RowBox[{"Log", "[", "100.", "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6324186003068037`*^9, 3.632418608391266*^9}}],

Cell[BoxData["2081.413659293299`"], "Output",
 CellChangeTimes->{3.632418608888294*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.632417903249934*^9, 3.632417903268935*^9}}],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"LaguerreL", "[", 
    RowBox[{
     RowBox[{"-", "z"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"1", "-", "s"}], ")"}], 
      RowBox[{"Log", "[", "100", "]"}]}]}], "]"}], ",", "s"}], "]"}]], "Input",
 CellChangeTimes->{{3.6324187607089777`*^9, 3.6324189651016684`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", " ", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"LaguerreL", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "-", "z"}], ",", "1", ",", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "-", "s"}], ")"}], " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], " ", 
        RowBox[{"Log", "[", "n", "]"}]}], ",", "z"}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"s", "\[Rule]", "0"}], ",", 
       RowBox[{"z", "\[Rule]", "0"}]}], "}"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632418970874999*^9, 3.632419019421776*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.24720000000000014`, 0.24, 0.6], {
     {Opacity[0.2], 
      LineBox[{{{1., 0.}, {1., 0}}, {{2., -0.9999999999999998}, {2., 0}}, {{
         3., -1.9999999999999984`}, {3., 0}}, {{4., -2.9999999999999964`}, {
         4., 0}}, {{5., -3.9999999999999996`}, {5., 0}}, {{
         6., -4.999999999999996}, {6., 0}}, {{7., -5.999999999999994}, {
         7., 0}}, {{8., -7.000000000000001}, {8., 0}}, {{
         9., -7.999999999999993}, {9., 0}}, {{10., -8.999999999999996}, {
         10., 0}}, {{11., -9.999999999999995}, {11., 0}}, {{12., -11.}, {
         12., 0}}, {{13., -11.999999999999996`}, {13., 0}}, {{
         14., -12.99999999999999}, {14., 0}}, {{15., -14.000000000000004`}, {
         15., 0}}, {{16., -14.999999999999979`}, {16., 0}}, {{17., -16.}, {
         17., 0}}, {{18., -16.999999999999993`}, {18., 0}}, {{
         19., -17.999999999999996`}, {19., 0}}, {{
         20., -19.000000000000004`}, {20., 0}}, {{21., -20.}, {21., 0}}, {{
         22., -21.000000000000007`}, {22., 0}}, {{
         23., -22.000000000000004`}, {23., 0}}, {{
         24., -22.999999999999986`}, {24., 0}}, {{25., -23.99999999999999}, {
         25., 0}}, {{26., -24.99999999999999}, {26., 0}}, {{
         27., -25.99999999999997}, {27., 0}}, {{28., -26.999999999999968`}, {
         28., 0}}, {{29., -27.99999999999999}, {29., 0}}, {{30., -29.}, {
         30., 0}}, {{31., -29.99999999999998}, {31., 0}}, {{
         32., -31.000000000000004`}, {32., 0}}, {{33., -32.}, {33., 0}}, {{
         34., -33.000000000000014`}, {34., 0}}, {{
         35., -33.999999999999964`}, {35., 0}}, {{
         36., -35.000000000000014`}, {36., 0}}, {{
         37., -35.999999999999964`}, {37., 0}}, {{
         38., -36.999999999999964`}, {38., 0}}, {{39., -37.99999999999999}, {
         39., 0}}, {{40., -38.99999999999997}, {40., 0}}, {{
         41., -39.99999999999998}, {41., 0}}, {{42., -41.00000000000002}, {
         42., 0}}, {{43., -41.999999999999964`}, {43., 0}}, {{
         44., -42.99999999999999}, {44., 0}}, {{45., -44.}, {45., 0}}, {{
         46., -44.999999999999986`}, {46., 0}}, {{47., -45.99999999999996}, {
         47., 0}}, {{48., -46.999999999999986`}, {48., 0}}, {{
         49., -47.99999999999995}, {49., 0}}, {{50., -48.999999999999986`}, {
         50., 0}}, {{51., -50.00000000000001}, {51., 0}}, {{
         52., -50.99999999999997}, {52., 0}}, {{53., -51.99999999999995}, {
         53., 0}}, {{54., -52.999999999999986`}, {54., 0}}, {{
         55., -53.99999999999999}, {55., 0}}, {{56., -55.00000000000001}, {
         56., 0}}, {{57., -55.99999999999998}, {57., 0}}, {{
         58., -57.000000000000036`}, {58., 0}}, {{59., -57.99999999999998}, {
         59., 0}}, {{60., -58.999999999999986`}, {60., 0}}, {{
         61., -60.00000000000002}, {61., 0}}, {{62., -60.99999999999992}, {
         62., 0}}, {{63., -61.99999999999998}, {63., 0}}, {{
         64., -62.999999999999986`}, {64., 0}}, {{65., -63.99999999999993}, {
         65., 0}}, {{66., -64.99999999999991}, {66., 0}}, {{
         67., -65.99999999999997}, {67., 0}}, {{68., -66.99999999999997}, {
         68., 0}}, {{69., -67.99999999999999}, {69., 0}}, {{
         70., -69.00000000000003}, {70., 0}}, {{71., -69.99999999999991}, {
         71., 0}}, {{72., -70.99999999999989}, {72., 0}}, {{
         73., -72.00000000000001}, {73., 0}}, {{74., -72.99999999999994}, {
         74., 0}}, {{75., -73.99999999999989}, {75., 0}}, {{
         76., -75.00000000000004}, {76., 0}}, {{77., -75.99999999999996}, {
         77., 0}}, {{78., -77.}, {78., 0}}, {{79., -78.00000000000003}, {
         79., 0}}, {{80., -78.99999999999997}, {80., 0}}, {{
         81., -79.99999999999991}, {81., 0}}, {{82., -81.}, {82., 0}}, {{
         83., -81.99999999999991}, {83., 0}}, {{84., -82.9999999999999}, {
         84., 0}}, {{85., -83.99999999999997}, {85., 0}}, {{
         86., -84.99999999999997}, {86., 0}}, {{87., -85.99999999999997}, {
         87., 0}}, {{88., -86.99999999999994}, {88., 0}}, {{
         89., -87.9999999999999}, {89., 0}}, {{90., -88.99999999999999}, {
         90., 0}}, {{91., -89.99999999999994}, {91., 0}}, {{
         92., -91.00000000000001}, {92., 0}}, {{93., -91.99999999999997}, {
         93., 0}}, {{94., -92.99999999999997}, {94., 0}}, {{
         95., -93.99999999999991}, {95., 0}}, {{96., -94.99999999999993}, {
         96., 0}}, {{97., -95.99999999999997}, {97., 0}}, {{
         98., -96.99999999999991}, {98., 0}}, {{99., -97.99999999999996}, {
         99., 0}}, {{100., -99.00000000000003}, {100., 0}}},
       VertexColors->None]}, 
     {Opacity[0.2], LineBox[{},
       VertexColors->None]}}}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, PointBox[CompressedData["
1:eJxV1MtOFEEUxvGjhuAOE0lgYSKgETVgQO4g9pkZ5s5cuufWbg2ufYSqN+t+
I1yAdwWp86+FnRDyq69OddXpgtWPn7NP90Xk4t/P3W97viTy/6N/b+6ey8L4
UH8E3+BH+j1wvjQvqsULeFl/BT/GT6hfwit6z8bxGus9xc95/yp+oX+Cn+GX
yjh+zfx1vKE/g1/hN2pn3cBbehXyTbzNelv4LetF73C+bbzL/nfwHvW7eJ/3
7eED5u/jQ/0d1os+4nwH+Bgf4hP6c4Tf6bfgY3zK/BP8nv2c4oR+RCv7Scxe
ma/kFdu/x77C94x5lbxCXiXHUjO7KnmN/mE5s/O7GvkZ+8dS1wc2Tl5nfSwN
W8/VyRvsv0HetO/nsG9y/pi3yJvkLe4nljZ5i7xNv9rkHfaPfYf6mHep75B3
OT+Wc1vPd8nPOT+Wns7ZOHmPHEuf9XvkfeuX9MkHeh1y7AfUx3xI/cCsQ/0a
cuyH1q9kaC7jfCypucCacj7sU7sfmlKf2noOS2b3ucCa0d+M+sz6m+CS+Q7L
yM5bYh1xvlg/UsapH3FfsYzZP9Yx9wP7MfVj6skdlol97wLrhP8X2ONkQj12
WKZ2vgLrlPuD/dT6mUypZ77DMrN+lVhnvB97nMyon7F/LLn9PRVYc+qxz/n+
OfW59ddh+WD9LPPyFjH4VaY=
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  Method->{"MessagesHead" -> DiscretePlot},
  PlotRange->{{1, 100}, {-99.00000000000003, 0}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}}]], "Output",
 CellChangeTimes->{{3.6324189726691017`*^9, 3.63241902002381*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "x", ")"}], "^", 
     RowBox[{"-", "s"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.632419102815545*^9, 3.632419173795605*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["n", 
      RowBox[{"-", "s"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "n"}], "+", 
       SuperscriptBox["n", "s"]}], ")"}]}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}]], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.632419114700225*^9, 3.6324191746146517`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Gamma", "[", 
   RowBox[{"1", ",", "0", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"s", "-", "1"}], ")"}], 
     RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "/", 
  RowBox[{"Gamma", "[", "1", "]"}]}]], "Input",
 CellChangeTimes->{{3.63241913768254*^9, 3.632419162010931*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  SuperscriptBox["n", 
   RowBox[{"1", "-", "s"}]]}]], "Output",
 CellChangeTimes->{{3.63241914800813*^9, 3.6324191622489448`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
     RowBox[{"(", 
      RowBox[{"k", "!"}], ")"}]}], " ", 
    RowBox[{"Binomial", "[", " ", 
     RowBox[{
      RowBox[{"-", "z"}], ",", "k"}], "]"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Log", "[", "x", "]"}], ")"}], "^", "k"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324197515216494`*^9, 3.6324197756320286`*^9}}],

Cell[BoxData[
 RowBox[{"Hypergeometric1F1", "[", 
  RowBox[{"z", ",", "1", ",", 
   RowBox[{"Log", "[", "x", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6324197757920375`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hypergeometric1F1", "[", 
  RowBox[{"3", ",", "1", ",", 
   RowBox[{"Log", "[", "100.", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324197884477615`*^9, 3.6324197904418755`*^9}}],

Cell[BoxData["2081.413659293299`"], "Output",
 CellChangeTimes->{3.6324197906938896`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LaguerreL", "[", 
  RowBox[{
   RowBox[{"-", "3"}], ",", 
   RowBox[{"Log", "[", "100.", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324197916169424`*^9, 3.6324197977562933`*^9}}],

Cell[BoxData["2081.413659293299`"], "Output",
 CellChangeTimes->{3.632419798088313*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Expand", "[", " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", "x", "]"}], "+", 
        RowBox[{"Log", "[", "y", "]"}]}], ")"}], "^", "k"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "6"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.632419869495397*^9, 3.632419888729497*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "+", 
       RowBox[{"Log", "[", "y", "]"}]}]},
     {
      RowBox[{
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"], "+", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "x", "]"}], " ", 
        RowBox[{"Log", "[", "y", "]"}]}], "+", 
       SuperscriptBox[
        RowBox[{"Log", "[", "y", "]"}], "2"]}]},
     {
      RowBox[{
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"], "+", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"], " ", 
        RowBox[{"Log", "[", "y", "]"}]}], "+", 
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "y", "]"}], "2"]}], "+", 
       SuperscriptBox[
        RowBox[{"Log", "[", "y", "]"}], "3"]}]},
     {
      RowBox[{
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "4"], "+", 
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"], " ", 
        RowBox[{"Log", "[", "y", "]"}]}], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "y", "]"}], "2"]}], "+", 
       RowBox[{"4", " ", 
        RowBox[{"Log", "[", "x", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "y", "]"}], "3"]}], "+", 
       SuperscriptBox[
        RowBox[{"Log", "[", "y", "]"}], "4"]}]},
     {
      RowBox[{
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "5"], "+", 
       RowBox[{"5", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "4"], " ", 
        RowBox[{"Log", "[", "y", "]"}]}], "+", 
       RowBox[{"10", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "y", "]"}], "2"]}], "+", 
       RowBox[{"10", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "y", "]"}], "3"]}], "+", 
       RowBox[{"5", " ", 
        RowBox[{"Log", "[", "x", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "y", "]"}], "4"]}], "+", 
       SuperscriptBox[
        RowBox[{"Log", "[", "y", "]"}], "5"]}]},
     {
      RowBox[{
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "6"], "+", 
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "5"], " ", 
        RowBox[{"Log", "[", "y", "]"}]}], "+", 
       RowBox[{"15", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "4"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "y", "]"}], "2"]}], "+", 
       RowBox[{"20", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "y", "]"}], "3"]}], "+", 
       RowBox[{"15", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "y", "]"}], "4"]}], "+", 
       RowBox[{"6", " ", 
        RowBox[{"Log", "[", "x", "]"}], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "y", "]"}], "5"]}], "+", 
       SuperscriptBox[
        RowBox[{"Log", "[", "y", "]"}], "6"]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6324198816230907`*^9, 3.6324198889495096`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", "/", " ", 
      RowBox[{"(", 
       RowBox[{"k", "!"}], ")"}]}], " ", 
     RowBox[{"bins", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "k"}], "]"}], " ", 
     RowBox[{
      RowBox[{"Log", "[", "x", "]"}], "^", "j"}], " ", 
     RowBox[{
      RowBox[{"Log", "[", "y", "]"}], "^", 
      RowBox[{"(", 
       RowBox[{"k", "-", "j"}], ")"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "0", ",", "k"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632420079459406*^9, 3.63242013111036*^9}, {
  3.6324201798961506`*^9, 3.6324201803191752`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"bins", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "0"}], "]"}], "", "", "", "", ""},
    {
     RowBox[{
      RowBox[{"-", 
       RowBox[{"bins", "[", 
        RowBox[{
         RowBox[{"-", "z"}], ",", "1"}], "]"}]}], " ", 
      RowBox[{"Log", "[", "y", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"bins", "[", 
        RowBox[{
         RowBox[{"-", "z"}], ",", "1"}], "]"}]}], " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "", "", "", ""},
    {
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "2"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "y", "]"}], "2"]}], 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "2"}], "]"}], " ", 
      RowBox[{"Log", "[", "x", "]"}], " ", 
      RowBox[{"Log", "[", "y", "]"}]}], 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "2"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"]}], "", "", ""},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "6"]}], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "3"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "y", "]"}], "3"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "6"]}], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "3"}], "]"}], " ", 
      RowBox[{"Log", "[", "x", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "y", "]"}], "2"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "6"]}], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "3"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], " ", 
      RowBox[{"Log", "[", "y", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "6"]}], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "3"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "3"]}], "", ""},
    {
     RowBox[{
      FractionBox["1", "24"], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "4"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "y", "]"}], "4"]}], 
     RowBox[{
      FractionBox["1", "24"], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "4"}], "]"}], " ", 
      RowBox[{"Log", "[", "x", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "y", "]"}], "3"]}], 
     RowBox[{
      FractionBox["1", "24"], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "4"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "y", "]"}], "2"]}], 
     RowBox[{
      FractionBox["1", "24"], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "4"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "3"], " ", 
      RowBox[{"Log", "[", "y", "]"}]}], 
     RowBox[{
      FractionBox["1", "24"], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "4"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "4"]}], ""},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "120"]}], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "5"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "y", "]"}], "5"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "120"]}], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "5"}], "]"}], " ", 
      RowBox[{"Log", "[", "x", "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "y", "]"}], "4"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "120"]}], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "5"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "y", "]"}], "3"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "120"]}], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "5"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "3"], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "y", "]"}], "2"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "120"]}], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "5"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "4"], " ", 
      RowBox[{"Log", "[", "y", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "120"]}], " ", 
      RowBox[{"bins", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "5"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "5"]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6324200958053412`*^9, 3.6324201314743814`*^9}, 
   3.6324201807672005`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
     RowBox[{"(", 
      RowBox[{"k", "!"}], ")"}]}], 
    RowBox[{"2", "^", "k"}], "  ", 
    RowBox[{"Binomial", "[", " ", 
     RowBox[{
      RowBox[{"-", "z"}], ",", "k"}], "]"}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Log", "[", "x", "]"}], ")"}], "^", "k"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324202965758247`*^9, 3.6324202981239133`*^9}}],

Cell[BoxData[
 RowBox[{"Hypergeometric1F1", "[", 
  RowBox[{"z", ",", "1", ",", 
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "x", "]"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.632420298563938*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Log", "[", "n", "]"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"2", " ", "k"}], ")"}]}], " ", "/", " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"2", " ", "k"}], ")"}], "!"}], " ", 
      RowBox[{"(", 
       RowBox[{"2", " ", "k"}], ")"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632420533204359*^9, 3.6324205591638436`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "EulerGamma"}], "+", 
  RowBox[{"CoshIntegral", "[", 
   RowBox[{"Log", "[", "n", "]"}], "]"}], "-", 
  RowBox[{"Log", "[", 
   RowBox[{"Log", "[", "n", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{3.632420559430859*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{"LogIntegral", "[", " ", "33.", "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"Log", "[", "33.", "]"}], "]"}], "-", "EulerGamma"}], ")"}], "-", 
  RowBox[{"2", 
   RowBox[{"SinhIntegral", "[", 
    RowBox[{"Log", "[", "33.", "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.632420855568797*^9, 3.632420897663205*^9}, {
  3.632420950811245*^9, 3.632420972095462*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.8359806354017696`"}]], "Output",
 CellChangeTimes->{
  3.6324208626502023`*^9, {3.632420893018939*^9, 3.6324208980822287`*^9}, {
   3.6324209533283887`*^9, 3.6324209725714893`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6324208636332583`*^9, 3.6324209569265947`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6324209562445555`*^9, 3.6324209562825575`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Re", "[", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"LogIntegral", "[", 
     RowBox[{"1", "/", "33."}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"Log", "[", 
      RowBox[{"1", "/", "33."}], "]"}], "]"}], "-", "EulerGamma"}], ")"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.632420977938796*^9, 3.6324209795548887`*^9}}],

Cell[BoxData[
 RowBox[{"-", "1.8359806354017696`"}]], "Output",
 CellChangeTimes->{3.6324209415127125`*^9, 3.6324209798479056`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", 
   RowBox[{"LogIntegral", "[", " ", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"33", " ", 
       RowBox[{"Log", "[", "33", "]"}]}], ")"}]}], "]"}]}], "-", 
  RowBox[{"Log", "[", 
   RowBox[{"Log", "[", " ", 
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"33", " ", 
       RowBox[{"Log", "[", "33", "]"}]}], ")"}]}], "]"}], "]"}], "-", 
  "EulerGamma"}]], "Input",
 CellChangeTimes->{{3.632421056813308*^9, 3.632421109545324*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2.136540982810715`"}], "-", 
  RowBox[{"3.141592653589793`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.632421068057951*^9, 3.6324211098703423`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LogIntegral", "[", "33.", "]"}], "-", 
  RowBox[{"Log", "[", 
   RowBox[{"Log", "[", "33.", "]"}], "]"}], "-", "EulerGamma"}]], "Input",
 CellChangeTimes->{{3.6324210745313215`*^9, 3.6324210985816965`*^9}}],

Cell[BoxData["12.06337096672569`"], "Output",
 CellChangeTimes->{{3.632421078293536*^9, 3.632421098871713*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"1", "/", "n"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632421217546501*^9, 3.6324212283031163`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", "n"}], 
  RowBox[{"n", " ", 
   RowBox[{"Log", "[", "n", "]"}]}]]], "Output",
 CellChangeTimes->{{3.6324212240168715`*^9, 3.63242122854113*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"n", "-", "1"}], "]"}], "-", 
   RowBox[{"Log", "[", "n", "]"}], "-", 
   RowBox[{"Log", "[", 
    RowBox[{"Log", "[", "n", "]"}], "]"}]}], "/.", 
  RowBox[{"n", "\[Rule]", "12"}]}]], "Input",
 CellChangeTimes->{{3.6324213176412263`*^9, 3.6324213460268497`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Log", "[", "11", "]"}], "-", 
  RowBox[{"Log", "[", "12", "]"}], "-", 
  RowBox[{"Log", "[", 
   RowBox[{"Log", "[", "12", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6324213240525928`*^9, 3.6324213463568687`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"ss", "[", 
   RowBox[{"n_", ",", " ", "x_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "k"}], "-", "1"}], ")"}], "/", "k"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"Log", "[", 
       RowBox[{"x", ",", "n"}], "]"}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ss2a", "[", 
   RowBox[{"n_", ",", " ", "x_"}], "]"}], " ", ":=", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "k"}], "-", "1"}], ")"}], "/", "k"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"2", 
       RowBox[{"Log", "[", 
        RowBox[{"x", ",", "n"}], "]"}]}]}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ss2", "[", 
   RowBox[{"n_", ",", " ", "x_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "k"}], "-", "1"}], ")"}], "/", "k"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"Floor", "[", 
       RowBox[{"Log", "[", 
        RowBox[{"x", ",", "n"}], "]"}], "]"}], ",", 
      RowBox[{"2", 
       RowBox[{"Log", "[", 
        RowBox[{"x", ",", "n"}], "]"}]}]}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6324393709515743`*^9, 3.632439394873942*^9}, {
  3.6324394326661034`*^9, 3.6324394865121837`*^9}, {3.6324399604162893`*^9, 
  3.632439985814742*^9}, {3.6324400344285226`*^9, 3.6324400373146877`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ss", "[", 
   RowBox[{"100", ",", "1.00001"}], "]"}], "+", 
  RowBox[{"ss2", "[", 
   RowBox[{"100", ",", "1.00001"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6324393966310425`*^9, 3.6324394264977508`*^9}, {
  3.6324394704492645`*^9, 3.632439476328601*^9}}],

Cell[BoxData["1243.338337959651`"], "Output",
 CellChangeTimes->{{3.632439399415202*^9, 3.6324394880492716`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LogIntegral", "[", "100.", "]"}], "-", 
  RowBox[{"Log", "@", 
   RowBox[{"Log", "@", "100."}]}], "-", "EulerGamma"}]], "Input",
 CellChangeTimes->{{3.6324394123749433`*^9, 3.632439423064554*^9}}],

Cell[BoxData["28.02174629337021`"], "Output",
 CellChangeTimes->{3.6324394233785725`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ss", "[", 
  RowBox[{"100", ",", "1.00001"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ss2", "[", 
  RowBox[{"100", ",", "1.00001"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6324394909354362`*^9, 3.632439513472726*^9}, {
  3.632439548184711*^9, 3.6324396053829823`*^9}}],

Cell[BoxData["28.021779735682617`"], "Output",
 CellChangeTimes->{{3.6324394976328197`*^9, 3.632439513771743*^9}, {
  3.632439548604735*^9, 3.6324396058540096`*^9}}],

Cell[BoxData["1215.3165582239683`"], "Output",
 CellChangeTimes->{{3.6324394976328197`*^9, 3.632439513771743*^9}, {
  3.632439548604735*^9, 3.632439605932014*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"LogIntegral", "[", "10000.", "]"}], "-", 
  RowBox[{"Log", "@", 
   RowBox[{"Log", "@", "10000."}]}], "-", "EulerGamma"}]], "Input",
 CellChangeTimes->{{3.632439525175395*^9, 3.6324395278235464`*^9}}],

Cell[BoxData["1243.3396734281193`"], "Output",
 CellChangeTimes->{3.632439528024558*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"x", "^", "k"}], " ", "+", " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "+", "c"}], ")"}], "^", "k"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632439804408366*^9, 3.6324398160440316`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["x", "k"], "+", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"c", "+", "x"}], ")"}], "k"]}]], "Output",
 CellChangeTimes->{{3.6324398079155664`*^9, 3.632439816431054*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ss2", "[", 
  RowBox[{"100", ",", "1.001"}], "]"}]], "Input",
 CellChangeTimes->{{3.6324399657585945`*^9, 3.6324400007005935`*^9}}],

Cell[BoxData["1214.8562498986337`"], "Output",
 CellChangeTimes->{{3.632439969819827*^9, 3.632440001317629*^9}, 
   3.6324400400728455`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Binomial", "[", 
       RowBox[{"z", ",", "k"}], "]"}], " ", 
      RowBox[{"1", "/", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{"s", "-", "1"}], ")"}], "^", "k"}]}], " ", 
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{"k", ",", "0", ",", 
         RowBox[{
          RowBox[{"(", 
           RowBox[{"s", "-", "1"}], ")"}], 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "/", 
       RowBox[{"Gamma", "[", "k", "]"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], ",", "n"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6324415707553954`*^9, 3.6324415884964104`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox["n", 
    RowBox[{"-", "s"}]], " ", "z", " ", 
   RowBox[{"Hypergeometric1F1", "[", 
    RowBox[{
     RowBox[{"1", "-", "z"}], ",", "2", ",", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], "/.", 
  RowBox[{"s", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.6324416986137085`*^9, 3.632441705481101*^9}, {
  3.632441736601881*^9, 3.632441737263919*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{"z", " ", 
    RowBox[{"Hypergeometric1F1", "[", 
     RowBox[{
      RowBox[{"1", "-", "z"}], ",", "2", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "x"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324417393660393`*^9, 3.632441745928415*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"LaguerreL", "[", 
    RowBox[{
     RowBox[{"-", "z"}], ",", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "z", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6324417587391477`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"n", " ", "z", " ", 
    RowBox[{"Hypergeometric1F1", "[", 
     RowBox[{
      RowBox[{"1", "-", "z"}], ",", "2", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "x"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632441709510332*^9, 3.632441728120396*^9}, {
  3.6324418428169565`*^9, 3.6324418461901493`*^9}, {3.6324418816351767`*^9, 
  3.6324419005832605`*^9}}],

Cell[BoxData[
 RowBox[{
  SubsuperscriptBox["\[Integral]", "0", "x"], 
  RowBox[{
   RowBox[{"n", " ", "z", " ", 
    RowBox[{"Hypergeometric1F1", "[", 
     RowBox[{
      RowBox[{"1", "-", "z"}], ",", "2", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
   RowBox[{"\[DifferentialD]", "n"}]}]}]], "Output",
 CellChangeTimes->{{3.6324417267993207`*^9, 3.6324417354708166`*^9}, 
   3.6324418614180202`*^9, {3.63244189445191*^9, 3.6324419098707914`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"a", "-", "1"}], ")"}], "^", "s"}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "s"}], " ", 
     RowBox[{"Sum", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"a", "^", "k"}], " ", 
        RowBox[{"k", "^", 
         RowBox[{"(", 
          RowBox[{"s", "-", "1"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "1", ",", 
         RowBox[{"Log", "[", 
          RowBox[{"a", ",", "n"}], "]"}]}], "}"}]}], "]"}]}], "/.", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"n", "\[Rule]", "100"}], ",", 
      RowBox[{"s", "\[Rule]", 
       RowBox[{"7", "/", "2"}]}]}], "}"}]}], ",", 
   RowBox[{"a", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324428570949697`*^9, 3.632443044359681*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "\[ImaginaryI]"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "a"}], ")"}], 
     RowBox[{"7", "/", "2"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "100"}], " ", "a", " ", 
       RowBox[{"LerchPhi", "[", 
        RowBox[{"a", ",", 
         RowBox[{"-", 
          FractionBox["5", "2"]}], ",", 
         RowBox[{"1", "+", 
          FractionBox[
           RowBox[{"Log", "[", "100", "]"}], 
           RowBox[{"Log", "[", "a", "]"}]]}]}], "]"}]}], "+", 
      RowBox[{"PolyLog", "[", 
       RowBox[{
        RowBox[{"-", 
         FractionBox["5", "2"]}], ",", "a"}], "]"}]}], ")"}]}], "/.", 
   RowBox[{"a", "\[Rule]", "1.000001"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632443069381112*^9, 3.6324430991948175`*^9}}],

Cell[BoxData[
 RowBox[{"2.6025289310906453`*^-10", "-", 
  RowBox[{"2782.568596792429`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.6324430724892893`*^9, 3.632443102883028*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"6", "-", 
    RowBox[{"6", " ", "n"}], "+", 
    RowBox[{"6", " ", "n", " ", 
     RowBox[{"Log", "[", "n", "]"}]}], "-", 
    RowBox[{"3", " ", "n", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "2"]}], "+", 
    RowBox[{"n", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "3"]}]}], "/.", 
   RowBox[{"n", "\[Rule]", "100"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324429515563726`*^9, 3.6324429543975353`*^9}, {
  3.6324429924697127`*^9, 3.6324429999121385`*^9}}],

Cell[BoxData["5573.281622027466`"], "Output",
 CellChangeTimes->{{3.6324429972529864`*^9, 3.6324430001391516`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "@", 
  RowBox[{"Gamma", "[", 
   RowBox[{"3.5", ",", "0", ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "100.", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632443001929254*^9, 3.632443011151781*^9}, {
  3.6324431074312887`*^9, 3.6324431078383117`*^9}}],

Cell[BoxData[
 RowBox[{"0.`", "\[VeryThinSpace]", "-", 
  RowBox[{"2782.5614518589964`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.632443008601636*^9, 3.6324430112977896`*^9}, 
   3.632443108405344*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"n", "^", "k"}], "/", 
       RowBox[{"(", " ", 
        RowBox[{
         RowBox[{"k", "!"}], " ", "k"}], ")"}]}], "]"}], "/.", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"n", "\[Rule]", 
        RowBox[{"Log", "[", "12000", "]"}]}], ",", 
       RowBox[{"z", "\[Rule]", "5.5"}]}], "}"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "25"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632444350079364*^9, 3.6324443559507*^9}, {
  3.6324444377883806`*^9, 3.632444482343929*^9}, {3.6324447472830825`*^9, 
  3.6324448741793404`*^9}, {3.632444907963273*^9, 3.632444913872611*^9}, {
  3.6324449483495827`*^9, 3.6324450073159556`*^9}, {3.6324450712516127`*^9, 
  3.6324450717146387`*^9}, {3.6324451861771855`*^9, 3.632445207616412*^9}, {
  3.632445239959262*^9, 3.632445243330455*^9}}],

Cell[BoxData["1458.2792269288775`"], "Output",
 CellChangeTimes->{{3.632444457034481*^9, 3.632444482450935*^9}, {
   3.632444749223193*^9, 3.632444874454356*^9}, {3.6324449083242936`*^9, 
   3.632444914166628*^9}, {3.632444950140685*^9, 3.6324450077049775`*^9}, 
   3.632445071856647*^9, {3.632445199417943*^9, 3.632445207808423*^9}, {
   3.632445240861314*^9, 3.632445243480463*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6324445371140614`*^9, 3.6324445381381197`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"gg", "[", 
   RowBox[{"n_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
  RowBox[{"If", "[", " ", 
   RowBox[{
    RowBox[{"k", "\[Equal]", "0"}], ",", " ", 
    RowBox[{"Limit", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{"kk", ",", "0", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "/", 
       RowBox[{"Gamma", "[", "kk", "]"}]}], ",", 
      RowBox[{"kk", "\[Rule]", "k"}]}], "]"}], ",", " ", 
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{"k", ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "/", 
     RowBox[{"Gamma", "[", "k", "]"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"N", "@", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "k"}], 
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", 
         RowBox[{"(", 
          RowBox[{"k", "+", "1"}], ")"}]}], "/", "k"}], " ", 
       RowBox[{"gg", "[", 
        RowBox[{"n", ",", "k"}], "]"}]}], "/.", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"n", "\[Rule]", "12000"}], ",", 
        RowBox[{"z", "\[Rule]", "5"}]}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "40"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.632444485110087*^9, 3.6324446343416224`*^9}, {
  3.632444752499381*^9, 3.632444753847458*^9}, {3.632444790060529*^9, 
  3.632444791068587*^9}, {3.6324448502609725`*^9, 3.632444942059223*^9}, {
  3.6324449732050047`*^9, 3.6324450656912947`*^9}, {3.63244512296357*^9, 
  3.632445166010032*^9}, {3.632445232650844*^9, 3.632445249610814*^9}}],

Cell[BoxData["1458.2820167836012`"], "Output",
 CellChangeTimes->{{3.6324445203931055`*^9, 3.6324445419603386`*^9}, {
   3.6324445795794907`*^9, 3.632444634739645*^9}, 3.632444754161476*^9, 
   3.6324447912555976`*^9, {3.632444859508501*^9, 3.6324449425712523`*^9}, {
   3.632444973776037*^9, 3.6324450660273137`*^9}, {3.632445133067148*^9, 
   3.632445166583065*^9}, {3.632445233216876*^9, 3.6324452498608284`*^9}, 
   3.632453176526208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"k", "!"}], ")"}]}], " ", 
      RowBox[{"Binomial", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "k"}], "]"}]}], ",", "z"}], "]"}], 
   RowBox[{"n", "^", "k"}]}], " ", "]"}]], "Input",
 CellChangeTimes->{{3.6324462978117676`*^9, 3.632446356199107*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "k"], " ", 
   SuperscriptBox["n", "k"], " ", 
   RowBox[{"Binomial", "[", 
    RowBox[{
     RowBox[{"-", "z"}], ",", "k"}], "]"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"HarmonicNumber", "[", 
      RowBox[{
       RowBox[{"-", "k"}], "-", "z"}], "]"}], "-", 
     RowBox[{"HarmonicNumber", "[", 
      RowBox[{"-", "z"}], "]"}]}], ")"}]}], 
  RowBox[{"k", "!"}]]], "Output",
 CellChangeTimes->{{3.6324463025800405`*^9, 3.6324463563871183`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "kk"}], " ", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"kk", ",", "0", ",", 
          RowBox[{"-", 
           RowBox[{"Log", "[", "100", "]"}]}]}], "]"}], "/", 
        RowBox[{"Gamma", "[", "kk", "]"}]}]}], "-", "1"}], ")"}], "/", "kk"}],
    ",", 
   RowBox[{"kk", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632453187317825*^9, 3.632453213696334*^9}, {
  3.6324533907744617`*^9, 3.632453410815608*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
  RowBox[{"Gamma", "[", 
   RowBox[{"0", ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "100", "]"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6324531875008354`*^9, 3.632453213945348*^9}, {
  3.6324533075207*^9, 3.632453311989956*^9}, {3.63245339511271*^9, 
  3.632453411169628*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pp", "[", " ", 
   RowBox[{"n_", ",", " ", "z_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "z"}], "  ", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"z", ",", "0", ",", 
          RowBox[{"-", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "/", 
        RowBox[{"Gamma", "[", "z", "]"}]}]}], ")"}], "-", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", 
        RowBox[{"-", "z"}]}], "  ", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "z"}], ",", "0", ",", 
          RowBox[{"-", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "/", 
        RowBox[{"Gamma", "[", 
         RowBox[{"-", "z"}], "]"}]}]}], ")"}]}], ")"}], "/", 
   RowBox[{"(", 
    RowBox[{"2", "z"}], ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp2", "[", " ", 
   RowBox[{"n_", ",", " ", "z_"}], "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "z"}], "  ", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"z", ",", "0", ",", 
          RowBox[{"-", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "/", 
        RowBox[{"Gamma", "[", "z", "]"}]}]}], ")"}], "-", "1"}], ")"}], "/", 
   "z"}]}]}], "Input",
 CellChangeTimes->{{3.6324532389897804`*^9, 3.632453255509725*^9}, {
  3.6324532880665874`*^9, 3.6324533090647883`*^9}, {3.6324533489910717`*^9, 
  3.632453381349923*^9}, {3.632453430969761*^9, 3.6324535267482395`*^9}, {
  3.632502110358353*^9, 3.6325021651184855`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.632453373856494*^9, 3.6324533745515337`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"pp", "[", 
  RowBox[{"100", ",", ".000001"}], "]"}]], "Input",
 CellChangeTimes->{{3.6324535296524053`*^9, 3.6324535468213873`*^9}, {
  3.632502168334669*^9, 3.632502178743265*^9}}],

Cell[BoxData[
 RowBox[{"30.126141583486366`", "\[VeryThinSpace]", "+", 
  RowBox[{"6.2831853073770745`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.632453531204494*^9, 3.632453547112404*^9}, 
   3.632502122936073*^9, {3.6325021687606936`*^9, 3.632502179153288*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"LogIntegral", "[", "n", "]"}], "-", 
    RowBox[{"Log", "@", 
     RowBox[{"Log", "@", "n"}]}], "-", "EulerGamma"}], ",", "n"}], "]"}]], \
"Input",
 CellChangeTimes->{{3.632453309916837*^9, 3.6324533099418383`*^9}, {
  3.632453587093691*^9, 3.632453598243328*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"Log", "[", "n", "]"}]], "-", 
  FractionBox["1", 
   RowBox[{"n", " ", 
    RowBox[{"Log", "[", "n", "]"}]}]]}]], "Output",
 CellChangeTimes->{3.632453598461341*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"D", "[", " ", 
    RowBox[{
     RowBox[{"LaguerreL", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", 
       RowBox[{"Log", "[", "n", "]"}]}], "]"}], ",", "n"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "100"}], ",", 
     RowBox[{"z", "\[Rule]", "3"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6324536148742795`*^9, 3.6324537000861535`*^9}, {
   3.632453820647049*^9, 3.632453837054988*^9}, {3.632453883878666*^9, 
   3.632453924621996*^9}, 3.6324540530993447`*^9}],

Cell[BoxData["27.41930677892109`"], "Output",
 CellChangeTimes->{{3.6324536366605253`*^9, 3.6324537003061657`*^9}, {
  3.6324538223441463`*^9, 3.632453837344004*^9}, {3.632453884536703*^9, 
  3.632453925157027*^9}, {3.6324540511952357`*^9, 3.632454053335358*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    RowBox[{"N", "@", 
     RowBox[{"Sum", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "i"}], " ", 
        RowBox[{"Binomial", "[", " ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "z"}], "-", "1", "+", "1"}], ",", " ", 
          RowBox[{
           RowBox[{"-", "z"}], "-", "1", "-", "i"}]}], "]"}], 
        RowBox[{
         RowBox[{
          RowBox[{"Log", "[", " ", "n", "]"}], "^", "i"}], " ", "/", " ", 
         RowBox[{"i", "!"}]}]}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"i", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "z"}], "-", "1"}]}], "}"}]}], "]"}]}]}], "/", "n"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"z", "\[Rule]", "3"}], ",", 
    RowBox[{"n", "\[Rule]", "100"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6324538451884527`*^9, 3.6324539208627815`*^9}, {
  3.632453959213975*^9, 3.632454055497482*^9}}],

Cell[BoxData["27.41930677892109`"], "Output",
 CellChangeTimes->{{3.6324539083340645`*^9, 3.6324539211817994`*^9}, {
  3.632453965389328*^9, 3.632453989288695*^9}, {3.6324540270808563`*^9, 
  3.632454055692493*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", " ", 
  RowBox[{
   RowBox[{"LaguerreL", "[", 
    RowBox[{
     RowBox[{"-", "z"}], ",", 
     RowBox[{"Log", "[", "n", "]"}]}], "]"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.6324539410829377`*^9, 3.6324539448201513`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"LaguerreL", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "-", "z"}], ",", "1", ",", 
     RowBox[{"Log", "[", "n", "]"}]}], "]"}], "n"]}]], "Output",
 CellChangeTimes->{3.6324539451581707`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "i"}], " ", 
     RowBox[{"Binomial", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"-", "z"}], "-", "1", "+", "1"}], ",", " ", 
       RowBox[{
        RowBox[{"-", "z"}], "-", "1", "-", "i"}]}], "]"}], 
     RowBox[{
      RowBox[{
       RowBox[{"Log", "[", " ", "n", "]"}], "^", "i"}], " ", "/", " ", 
      RowBox[{"i", "!"}]}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"i", ",", "0", ",", 
      RowBox[{
       RowBox[{"-", "z"}], "-", "1"}]}], "}"}]}], "]"}], "/", "n"}]], "Input"],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"z", " ", 
    RowBox[{"Hypergeometric1F1", "[", 
     RowBox[{
      RowBox[{"1", "+", "z"}], ",", "2", ",", 
      RowBox[{"Log", "[", "n", "]"}]}], "]"}]}], "n"]}]], "Output",
 CellChangeTimes->{3.6324540899044495`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", "z"}], ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.632502376070551*^9, 3.632502381237847*^9}, {
  3.632502499396605*^9, 3.6325025025857873`*^9}}],

Cell[BoxData[
 RowBox[{"\[ImaginaryI]", " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], "z"], " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.6325023815588655`*^9, 3.632502502790799*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "z"}], " ", 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"z", ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}]}], ",", "z"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6325024500207806`*^9, 3.63250245262593*^9}, {
  3.6325025050109262`*^9, 3.6325025360287004`*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{
  3.6325024528469424`*^9, {3.6325025124753532`*^9, 3.632502529360319*^9}, 
   3.632502568097534*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"N", "@", 
   RowBox[{"Gamma", "[", 
    RowBox[{"0", ",", " ", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "100", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.632502514393463*^9, 3.632502517123619*^9}, {
  3.6325025696906257`*^9, 3.63250258603656*^9}}],

Cell[BoxData[
 RowBox[{"30.126141584079644`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.141592653589793`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.632502517365633*^9, {3.632502574001872*^9, 3.6325025862065706`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"LogIntegral", "[", "n", "]"}], "-", 
    RowBox[{"Log", "@", 
     RowBox[{"Log", "@", "n"}]}], " ", "-", " ", "EulerGamma"}], ",", "n"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6325026355133905`*^9, 3.632502648489133*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"Log", "[", "n", "]"}]], "-", 
  FractionBox["1", 
   RowBox[{"n", " ", 
    RowBox[{"Log", "[", "n", "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.632502646146999*^9, 3.632502648746147*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"LogIntegral", "[", "n", "]"}], "-", 
     RowBox[{"Log", "@", 
      RowBox[{"Log", "@", "n"}]}], " ", "-", " ", "EulerGamma"}], ",", "n"}], 
   "]"}], "/.", 
  RowBox[{"n", "\[Rule]", "20"}]}]], "Input",
 CellChangeTimes->{
  3.632502663624998*^9, {3.6325026948357835`*^9, 3.6325026997210627`*^9}}],

Cell[BoxData[
 FractionBox["19", 
  RowBox[{"20", " ", 
   RowBox[{"Log", "[", "20", "]"}]}]]], "Output",
 CellChangeTimes->{3.632502663867012*^9, 3.6325026999410753`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullSimplify", "@", 
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Log", "[", "n", "]"}]}], ")"}]}], 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"1", "/", "n"}]}], ")"}]}], "/.", 
  RowBox[{"n", "\[Rule]", "20"}]}]], "Input",
 CellChangeTimes->{{3.632502676835754*^9, 3.632502702535224*^9}}],

Cell[BoxData[
 FractionBox["19", 
  RowBox[{"20", " ", 
   RowBox[{"Log", "[", "20", "]"}]}]]], "Output",
 CellChangeTimes->{{3.632502682438074*^9, 3.6325027027722373`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "/", 
      RowBox[{"Log", "[", "x", "]"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", "x"}]}], ")"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325028019619107`*^9, 3.632502820047945*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{{3.6325028160697174`*^9, 3.6325028203149605`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Log", "[", "x", "]"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325028233891363`*^9, 3.632502830985571*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.6325028312055836`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", 
     RowBox[{"Log", "[", "x", "]"}]}], ")"}], 
   RowBox[{"(", 
    RowBox[{"1", "-", 
     RowBox[{"1", "/", "x"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632502863583435*^9, 3.632502887425799*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"Log", "[", "x", "]"}]], "-", 
  FractionBox["1", 
   RowBox[{"x", " ", 
    RowBox[{"Log", "[", "x", "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.632502884050606*^9, 3.6325028877018147`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Log", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6325028771892138`*^9, 3.6325028772142153`*^9}, {
  3.632502978371001*^9, 3.6325029811041574`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox["1", 
   RowBox[{"x", " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "x", "]"}], "2"]}]]}]], "Output",
 CellChangeTimes->{3.63250298132817*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", " ", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"1", "/", "x"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6325029841193295`*^9, 3.632502987487522*^9}}],

Cell[BoxData[
 FractionBox["1", 
  SuperscriptBox["x", "2"]]], "Output",
 CellChangeTimes->{3.6325029878025403`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LogIntegral", "[", "1", "]"}]], "Input",
 CellChangeTimes->{{3.632503501381915*^9, 3.632503503122015*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[Infinity]"}]], "Output",
 CellChangeTimes->{3.6325035033420277`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"LogIntegral", "[", " ", 
     RowBox[{"1", "+", "x"}], "]"}], "/", "x"}], ",", " ", 
   RowBox[{"x", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325035868438034`*^9, 3.6325035985934753`*^9}}],

Cell[BoxData[
 RowBox[{"-", "\[Infinity]"}]], "Output",
 CellChangeTimes->{3.6325035991315064`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"x", "-", "1"}], ")"}], "/", 
    RowBox[{"(", " ", 
     RowBox[{"Log", "[", "x", "]"}], ")"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6325036505984497`*^9, 3.6325037140690804`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpIntegralEi", "[", 
   RowBox[{"2", " ", 
    RowBox[{"Log", "[", "x", "]"}]}], "]"}], "-", 
  RowBox[{"LogIntegral", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.632503664026218*^9, 3.6325037159951906`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"N", "@", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{"2", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
   RowBox[{"LogIntegral", "[", "x", "]"}]}], "/.", 
  RowBox[{"x", "\[Rule]", "10"}]}]], "Input",
 CellChangeTimes->{{3.6325037261877737`*^9, 3.632503729986991*^9}}],

Cell[BoxData["23.96054207929235`"], "Output",
 CellChangeTimes->{{3.632503728188888*^9, 3.6325037301550007`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", 
   RowBox[{"LogIntegral", "[", " ", "100", "]"}]}], "-", 
  RowBox[{"LogIntegral", "[", "10", "]"}]}]], "Input",
 CellChangeTimes->{{3.6325037327661495`*^9, 3.632503747777008*^9}}],

Cell[BoxData["23.96054207929235`"], "Output",
 CellChangeTimes->{{3.6325037465079355`*^9, 3.6325037478830147`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", "x"}]}], ")"}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"x", "^", 
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}]}], ")"}], "/", 
     RowBox[{"(", " ", 
      RowBox[{"Log", "[", "x", "]"}], ")"}]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6325037687562084`*^9, 3.632503796468793*^9}, {
  3.632503882931739*^9, 3.632503883162752*^9}, {3.6325039234990587`*^9, 
  3.6325039283873386`*^9}, {3.632504010325025*^9, 3.6325040472271357`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"ExpIntegralEi", "[", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "+", 
  RowBox[{"Log", "[", 
   RowBox[{"Log", "[", "x", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.63250376913723*^9, 3.632503796691806*^9}, 
   3.6325038835357733`*^9, 3.6325039292253866`*^9, {3.632504011539095*^9, 
   3.632504047493151*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", 
   RowBox[{"ExpIntegralEi", "[", 
    RowBox[{"3", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "/.", 
  RowBox[{"x", "\[Rule]", "30"}]}]], "Input",
 CellChangeTimes->{{3.632503853441052*^9, 3.632503876993399*^9}}],

Cell[BoxData["2984.418999726891`"], "Output",
 CellChangeTimes->{{3.6325038554851685`*^9, 3.632503877291416*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", 
   RowBox[{"Log", "@", 
    RowBox[{"Log", "@", "30"}]}]}], " ", "-", " ", 
  RowBox[{"N", "@", 
   RowBox[{"LogIntegral", "[", " ", 
    RowBox[{"30", "^", 
     RowBox[{"-", "1"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6325038588913636`*^9, 3.632503878656494*^9}, {
  3.632504058562784*^9, 3.632504066952264*^9}}],

Cell[BoxData["1.2320067702077597`"], "Output",
 CellChangeTimes->{{3.632503869506971*^9, 3.632503879001514*^9}, 
   3.6325040673532867`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"1", "/", "x"}]}], ")"}], 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", "z"}], "/", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], ")"}]}], ",", "x"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.632504081509097*^9, 3.63250413192098*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1.`"}], " ", 
   RowBox[{"ExpIntegralEi", "[", 
    RowBox[{"z", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "+", 
  RowBox[{"ExpIntegralEi", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1.`", "\[VeryThinSpace]", "+", "z"}], ")"}], " ", 
    RowBox[{"Log", "[", "x", "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.632504085219309*^9, 3.6325041322199974`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "z"}], "/", 
    RowBox[{"Log", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.632504134680138*^9, 3.6325041407524853`*^9}}],

Cell[BoxData[
 RowBox[{"ExpIntegralEi", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "+", "z"}], ")"}], " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.632504141274515*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{"1", "-", 
    RowBox[{"1", "/", "x"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.632504143426638*^9, 3.632504148628936*^9}}],

Cell[BoxData[
 RowBox[{"x", "-", 
  RowBox[{"Log", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.6325041492099686`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", " ", 
     RowBox[{"1", "-", 
      RowBox[{"1", "/", "x"}]}], ")"}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"x", "^", "z"}], "/", 
      RowBox[{"Log", "[", "x", "]"}]}], ")"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6325041886102223`*^9, 3.6325041991858273`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox[
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "z"}]], 
    RowBox[{"Log", "[", "x", "]"}]]}], "+", 
  FractionBox[
   SuperscriptBox["x", "z"], 
   RowBox[{"Log", "[", "x", "]"}]]}]], "Output",
 CellChangeTimes->{3.6325041997128572`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "5"}], "]"}], "-", 
    RowBox[{"Log", "[", 
     RowBox[{"Log", "[", "x", "]"}], "]"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632511601667225*^9, 3.6325116323889823`*^9}}],

Cell[BoxData[
 RowBox[{"EulerGamma", "+", 
  RowBox[{"Log", "[", "5", "]"}]}]], "Output",
 CellChangeTimes->{{3.6325116096126795`*^9, 3.6325116327250013`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "2"}], "]"}], "-", 
    RowBox[{"LogIntegral", "[", "x", "]"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325116380773077`*^9, 3.6325116425845656`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", "2", "]"}]], "Output",
 CellChangeTimes->{3.632511642985588*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "2"}], "]"}], "-", 
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", 
      RowBox[{"-", "2"}]}], "]"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632511653946215*^9, 3.6325116580264487`*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{{3.632511655017277*^9, 3.6325116584964757`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "5"}], "]"}], "-", 
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", 
      RowBox[{"-", "2"}]}], "]"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632511663597767*^9, 3.6325116688090653`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  FractionBox["5", "2"], "]"}]], "Output",
 CellChangeTimes->{{3.632511664625826*^9, 3.632511669170086*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "5"}], "]"}], "-", 
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "3"}], "]"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632511815729469*^9, 3.632511820208725*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  FractionBox["5", "3"], "]"}]], "Output",
 CellChangeTimes->{{3.632511816194495*^9, 3.632511820666751*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "6"}], "]"}], "-", 
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"1", "/", "10"}], ")"}]}], "]"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632511834871564*^9, 3.6325118451271505`*^9}, {
  3.63251196016273*^9, 3.6325119698962865`*^9}, {3.6325354222407937`*^9, 
  3.632535422682819*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", "60", "]"}]], "Output",
 CellChangeTimes->{{3.632511835054574*^9, 3.63251184529916*^9}, {
   3.6325119626348715`*^9, 3.632511970368314*^9}, 3.632535423092842*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Limit", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"LogIntegral", "[", 
      RowBox[{"x", "^", "2"}], "]"}], "-", 
     RowBox[{"Log", "[", 
      RowBox[{"Log", "[", "x", "]"}], "]"}]}], ",", 
    RowBox[{"x", "\[Rule]", "1"}]}], "]"}]}]], "Input",
 CellChangeTimes->{
  3.632512012799741*^9, {3.6325354421469316`*^9, 3.6325354700255265`*^9}, 
   3.6325355089567533`*^9}],

Cell[BoxData[
 RowBox[{"EulerGamma", "+", 
  RowBox[{"Log", "[", "2", "]"}]}]], "Output",
 CellChangeTimes->{{3.6325354445210676`*^9, 3.6325354744137774`*^9}, 
   3.632535509265771*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"-", "1"}]}], "/", 
    RowBox[{"Log", "[", "x", "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6325355108968644`*^9, 3.6325355356062775`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Log", "[", "x", "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.632535517886264*^9, 3.6325355358382907`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "@", " ", 
      RowBox[{"LogIntegral", "[", 
       RowBox[{"x", "^", "3"}], "]"}]}], ",", 
     RowBox[{"Re", "@", " ", 
      RowBox[{"LogIntegral", "[", 
       RowBox[{"x", "^", "2"}], "]"}]}], ",", 
     RowBox[{"Re", "@", " ", 
      RowBox[{"LogIntegral", "[", "x", "]"}]}], ",", " ", 
     RowBox[{"Re", "@", " ", 
      RowBox[{"Log", "[", 
       RowBox[{"Log", "[", "x", "]"}], "]"}]}], ",", 
     RowBox[{"Re", "@", " ", 
      RowBox[{"LogIntegral", "[", 
       RowBox[{"x", "^", 
        RowBox[{"-", "1"}]}], "]"}]}], ",", " ", 
     RowBox[{"Re", "@", " ", 
      RowBox[{"LogIntegral", "[", 
       RowBox[{"x", "^", 
        RowBox[{"-", "2"}]}], "]"}]}], ",", " ", 
     RowBox[{"Re", "@", " ", 
      RowBox[{"LogIntegral", "[", 
       RowBox[{"x", "^", 
        RowBox[{"-", "3"}]}], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632535549913096*^9, 3.632535588286291*^9}, {
  3.6325356209061565`*^9, 3.632535744039199*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1:eJwBkQNu/CFib1JlAgAAADgAAAACAAAAX5oWos4E8D9Hj8YQ7C8UwDgNICiG
CvA/8ackFpwgEcDmedo8CRfwP4HEcyUh7QvAlOaUUYwj8D+dPn/f7WQIwEJT
T2YPMPA/KZ78GI/rBcDwvwl7kjzwPzQlRGjjAQTAnizEjxVJ8D/Nj6dCfHEC
wEyZfqSYVfA/+sS4/fcdAcD5BTm5G2LwPyIOYW9M7f+/pnLzzZ5u8D+ciAPj
wOH9v1TfreIhe/A/z0dCyt8K/L8CTGj3pIfwP5X0BBZvXvq/sLgiDCiU8D+T
E59Z69T4v14l3SCroPA/yoWm5aVo978Lkpc1Lq3wP0gA/Ng3Ffa/ZmsMXzTG
8D+uKqKFpavzvxTYxnO30vA/zpNSYmyQ8r/CRIGIOt/wPxGTpbmXg/G/HR72
sUD48D+0rvWZEx7vv9TQ3wRNKvE/eNKZY1026L+CPZoZ0DbxP58G+eeWo+a/
MKpULlND8T+KBFwS8x3lv4uDyVdZXPE/kb3NJyY24r9CNrOqZY7xP665EubB
vNm/8KJtv+ia8T8B9tyaVjvXv54PKNRrp/E/ZGITENDI1L/56Jz9ccDxP+wL
PJH5DNC/sJuGUH7y8T9TdYiKn5a8v8sThucPAPI/tx8dBk9js7/mi4V+oQ3y
P6CEEcspuaS/HHyErMQo8j+Xu4G2UNGcP4hcgggLX/I/j+k1K81NxD9gHX7A
l8vyP0NB8mtTdtk/e5V9VynZ8j9DxsrNvUTbP5YNfe665vI/lSmdx9kN3T/M
/Xsc3gHzP8pDW0Z7SOA/ON55eCQ48z9+uGF/8K/jPxCfdTCxpPM/VgJmPTsh
6j8rF3XHQrLzP83A8ZzZ5+o/Ro90XtS/8z+aVz2++KzrP3x/c4z32vM/3erJ
a+ky7T/oX3HoPRH0PwIAA2dlF/A/wCBtoMp99D96mLM9d/fyP2+iZBDkVvU/
JA5jTAhi+D+OeZmcjmP1P3qa4s4jsPg/rlDOKDlw9T8vi+qX/P34P+7+N0GO
ifU/tkuEcOyY+T9sWwtyOLz1P0+5ugvwy/o/ahSy04wh9j8rjUofvif9P2aG
/5Y17PY/N5X5MUvfAEBeapodh4H4P5YcNpQ6TAVAiVF2OTOc+z9eAFs2i8IN
QAQUleZ/+v4/mrtzosaNE0DXy4XwhA8BQGbP3LyyIhhAVXtiNprDAkBhK/NK
h28dQIjw+K66OgNAYSGW8un9HkCP9s+T
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVxXk8VAkcAPDBNGUwZcQ6ss5qGzQdilW8145cMVvOfOQuSah2KkdJF5Vs
CC1t2Q4pw4Zdx0fL/J6PI9n9jFIRZkQYIbw3M2aGodndP76fr0XUCd8j6iQS
6cB//r/6lnlGfq8OFmlxRzy5/C3Kvh1g/rVYG1PtjMrhuZii7veb2R5fqFio
qN+ZM2GMlr1M6eWEaGKD1/4J9uMZomFXC/S7n63E4gJMGm8fN0AvRGg819Kj
YDPfGx7bz1qLkuzMgJVBxqxjaJsTNtDRgZvF1yreq2MbiVWpwurV6DpqbLn0
BzWsW50/ke2nhR7fwVgxuE4FnV7txZ0cChrtMPSstVUJH4R7v0qj1dCYZw6B
bg1K8C2pcfHYr4bGGeVpvOIqwSb+kGPBbjX0pJIVxs9TQk5Iv6aBvhp6Hsr1
+sOVMBASqOC1k9AC9zMXZpWLYDdc0pS/noR2BGn7G9kvQuFh3Uh28zLCSHZS
JZYq4JfZTuRQhALBhGzG6B0FzJLPvFUyFUggKzog6IYCDE5ZLSWp5MhlWnYF
kqgAx03huuQSOdJfKgxa46iAxu11Y4f6Zcj1Nxera/6Ww76Zl16FHvOIiPEy
UiqWgcAzM/c+WYyczx3Mjh2XQerifdUjPoHQZXMNgj4ZxC/LLU8UEYhLiyGt
vUkGCY+Dfw+yIZDCoLgXhZkyWC72L/Bh44jrVR09B2MZmDbS2NzVM8hDoV9b
yp55wK2c8t+ljyPbxrYtvrOfh4bmrNIdmuNI25Tuli3fzUNRVlrfSN4YIpJ3
/yqizQMpjK2h83AUYdC9OX4CKYzn1s3uqR9B/nBztbRLkkLiOb5bzclBhOVj
dfB6nBQmIULxOXYAeeenfms0VApDeQlCq/B+RBaBLRS7SoGb4mLJ2duH7Dq3
+w2FLoWjya43aYoepK3K/uJwpQSibRsP3n7digTU69XveiABJdn4o/HpFkTU
JJ6+ky+Bny4vFoVa8ZBVXdVBPqkSoHgHC/JP1yI+Y7bMF+4SGNiepE3XDkN6
DdcP5X8SA1218ug+ZjscNSOvnXsvhkfKW27O5E5QrB/19HolBtsYaxpptAuM
tz+sI1WLodJGUlsb/hrCfEx/TkgTgyMnJedaei9MXNLf7W4oBk7qpOqu+ieg
plXN5VPFwJoezGCojcLmZM/Hw0sEBNwoT/BdMQZnE9OoqSMEPGWf6680E8Hd
Y9/wOt4SYE2WJeTtnADe4ZpTeh0E0O65ME77fwZKyPiHSi4B/Fr8T3nZFDAC
07MX7hHQOEbrKRRMA/uAEeqWQ0B6GFbFNJmBQnefpx85BFx1vhQwUzcH1vZ1
Z+jOBLgts5h6TWLwYP64KZxJAOdJpmIhQwLxjElBhQUB9l5vyhwPSqHW3NR1
L4WAkCLHZBMjGXwwaZDnKXCo7ZsqbtOUw5LBgYqhKRwaHgltP1IUwNLJoCd3
4zAtqDeusV2EmFVmHW0tOAyYb9AMDlZClkZjim4tDgY6pZ5X7i7B86++dmFl
ONgb7Qg9KVmGnoUvw9wiHMy6vHgOsSqQSTML5Fk4zJXtO6udTsKMcXMP1zQc
vFuaA5WhapjL9Atl7gkctlptXM4OUMeiRP5Vwkgcnph6lznFa2CZI7NRDH8c
uFp4eWIFGeMKrhskueGQy1/B/c2CgvH7LLtaHXHQb3iPNYpWYuKeprQ1Njgw
eJ9K/tpAxQz4gVtDTXGgjjN8XffoYE6v8LHy1TjUaz0geW3SxcjT7keqqDi4
53Ss+cJci/0L0eC2Eg==
     "]], LineBox[CompressedData["
1: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
g7hwWYqX7zjNUdH//0//BzTMi+U=
     "]], LineBox[CompressedData["
1:eJwBcQSO+yFib1JlAgAAAEYAAAACAAAAJno9DdoH8D9Hj8YQ7C8UwDgNICiG
CvA/M21lK3HCEsDmedo8CRfwP2oewbQWNw/AlOaUUYwj8D8gcxIwNrULwEJT
T2YPMPA/jiJ+ijFCCcDwvwl7kjzwP28bil3nXgfAnizEjxVJ8D9hCrUh6dQF
wEyZfqSYVfA/pwu9L9WHBMD5BTm5G2LwPyZcBin7ZgPApnLzzZ5u8D//qq6R
tGcCwFTfreIhe/A/RKfUpsqCAcACTGj3pIfwPy11FWQgswDAsLgiDCiU8D//
3oYs6On/v14l3SCroPA/RNGi0dyK/r8Lkpc1Lq3wP4TOrdy3RP2/ZmsMXzTG
8D9cV9TN5PX6vxTYxnO30vA/QUHl4yHo+b/CRIGIOt/wPx8RZYzS6Pi/HR72
sUD48D+825SifA/3v8qKsMbDBPE/7OZXnv0y9r9492rbRhHxP8qUXHnrX/W/
1NDfBE0q8T8kGZa+x9Lzv4I9mhnQNvE/zQEJKFQX878wqlQuU0PxP+FhXi6B
YvK/i4PJV1lc8T9nFfGRxgrxv0I2s6pljvE/Mp+lY+gv7b/wom2/6JrxPxE5
PQcIDOy/ng8o1Gun8T8kikgCue/qv/nonP1xwPE//1MCWxPM6L+wm4ZQfvLx
P951W2trzuS/yxOG5w8A8j8VI1GPVcjjv+aLhX6hDfI/Eq/yX/fH4r8cfISs
xCjyP1fNT0Y71+C/iFyCCAtf8j82/KaNo13av2AdfsCXy/I/v5tkhnFcyr97
lX1XKdnyP9kdBfJCSse/lg197rrm8j/Lw76USEPEv8z9exzeAfM/oixhyKKq
vL843nl4JDjzPxiXllMleZe/EJ91MLGk8z92c9Eq8knCPysXdcdCsvM/Koy8
GjLQxD9Gj3Re1L/zP2OHWdHZT8c/fH9zjPfa8z/dR+Q0IDzMP+hfceg9EfQ/
wG1pyq3m0j/AIG2gyn30P4u96lHt+ds/b6JkEORW9T8WLKKsK0fmP455mZyO
Y/U/fjQWsym85j+uUM4oOXD1P7/TxM9+MOc/7v43QY6J9T/rTB4BOxfoP2xb
C3I4vPU/2fLYj0/d6T9qFLLTjCH2P/jmPDFNTu0/Zob/ljXs9j/lWGHFw+nx
P15qmh2Hgfg/juNKBWzj9z/72QnO8Y34P+WEpp34D/g/mEl5flya+D94Cjgu
Zzz4P9EoWN8xs/g/wub1uOuU+D9E5xWh3OT4PyKBlaKcRPk/KWSRJDJI+T+z
7j9W6p76P/RdiCvdDvo/n7w3ZFVB/T+JUXY5M5z7P5u/DZGIJQFABBSV5n/6
/j/jMHcGgEEGQNfLhfCEDwFAVqp26fnCCkBVe2I2msMCQOq/4tQrfw9AbAvr
Is5aBED4Ze0UmuwRQB+rxpYG6gVA5+zFAY8LFEB7uENTD5sHQNjvQCnTWBZA
cKZstjYvCUCqDDoRlIEYQAwCN2Iu5QpATooJv5rdGkBFbVSVKpMMQFWH+Mwq
NR1AOXDhg8jWDUBhIZby6f0eQIqUOzQ=
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
+Xea1QuR0/eQ7CQHaGD4uEZwYq8I+X95GWWU
     "]], LineBox[CompressedData["
1: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
ytxqLrqDK6J/ALisWuc=
     "]]}, 
   {Hue[0.37820393249936934`, 0.6, 0.6], LineBox[CompressedData["
1:eJwV12k4VG0YB3BbkiVFCiXaiFBISXIrIoVEIUVCJZWKyF4iSStFthZt1uwJ
yX2EJAqRkiWyD2bMmcUa73k/zfX7cF/zzHme5/8/s8r5vNUJPh4enhO8PDz/
fwYNmJNzc5LES0U5pxXqbOgPWMppm5EkSv6Zm9SoscFi0Z/xd5OSROoWdUUf
ygrbLvw7z5IkgjQmvtSrsuFjZLRQV78k8VkwOufaBjYIqf9cSXyVJO4ZtdH6
17Ph4SWnfVcTJQnbx0WSaWvYkMHr9ZJnqyRRrB7NlZRhw7wTJpoyDhLEPpe0
tRm8bJD8VXX2edRiwtyTnaQzzAKrigQX5S+LCNsazZ2vmlkQwNhx9n6PONHV
GLku5D0Lii4nuGfvX0iY5DnInXnBAovoQwqz8aLEQ5/iJ8kRLDB5/MFiz4gw
oVB9au7lORa8rvZr8TqygFh1dMmrP9YscAx7KFWfOp+4td9p0HIrC4Kd+LNE
JAWJhg3tWutWsIBHTR4NrwsQkW4vRVfxsuD3rfgbGT/4iLaLc333e0hYIeyW
xt7FS/wu41Xj+UzCGW2VeW0r5pDn5kxpbDoJLls7UysqpvHr9c/T/XdJUPHV
nfN4OYFad0b7lS6TQHRYqPTETmD54/sHq31IsDF0OWR7cwJtR1UETlG+tvB2
BnhMYHVs4YYUbxJaX3bYLtKZQLNHd9+oXCIhovFqTm7tOH6V4ojARRL6VaqP
s0ku0nBoNvkMCYH322679XFxld5Vzl7KElzGu/afXFTb427EdidBv1x6YVUp
F8X5vegmlGNs3Utiwrko03cwkuVGglGYmORWWS6amiU8PXqShOQO60q/nRxc
5qT0JPA4CZq9mlPNmzlYwDU32kq5krZ406b1HNRx1D9AOlHrGa9P7F/IwYND
s89PU1aRMPOybmdjy7ZZfYdjJOQZG61Wu8zGbqEspcMOJBiar7GLcGej1V96
iizlZmu+uz0ObMx5Tz5uP0oC14mYjDdiY9FBC8ZxytsD9BoFJdhYs2idkecR
6vuzN1/tymThG7G6l+mHSThUKFm4/RkLL+qFznlR7i8lh2MfsHCvze7uHZSF
vuTYmvuzEFUf6TfZkWDeq7qxxISFGQqfQwQot0iv63zwl8SYilj9azYknJIX
WML4QeLHhZpJBylPrOsx3VtDIu1C50MlyrJayW95ckhMC/l1tP4QCY7mcnfO
BZHI5yDuoUh5IERKz0SaRG79zxaWNQnCQdmMB8IkMiYaXn6lrO5r+qJrhomx
i52MUin7eAQJ+3cz0cjGiseJsuCRvl+Z6UysZOu/arWinqfNlduTSUxMHPbb
VkLZ4oCMgfE9Jm4/ypeTSDnGxDzljxcTuzI+mR2nvHbzW2+JHUzsExAIGz9A
wp6N+5WPbWRikZHb6T+Uz6oMtWesYuKLFdaGnykXKMgZ7RZk4r3XBzuTKP9a
/m48amIMrU7veRlBeWbpgYxO2hi+XRLk5k3ZUOy6hG/9GKptyeEcoHxSSP5T
ZfkYjqpWVuykHMlf7Le4YAyrwShBk3LWrJWa4+sxbI77GrCW8vfJka70uDE0
oQucWUaZyw5/OB45hoykWHcRyrJjCnuMgsZQs2JLEA9l/eGS6fvnx/Dq0eRX
XEsSnPsPZnccH8MNDgn9o5TDu+nOKgfH8NO30V39lNPbI5ZeNh7D8ZHzH/5Q
/vZz9ZcKnTGs2PXP7jdl8ntp0KINY+jw2V+6hfLSbzYaDnJj6MXbMvudsm7N
WG+a+Bj+Wz5PvJGyY2VkHJd3DOPF55s1UOa7YhoXPshAtw89Rf97r3fQnPxX
Bl5elGn3/3zUmdyTxbkMrFjpr/6D8q/jfV+tYhn4fu/FHa2UFexktEf8Gehy
oiyik7KbhXnS9WMMFGt8JNlHOccohF/eiIGZL3d0j1Ce0H3rXrSegR/qJ9kc
yqAx1HhAjIF/9BWs/n8+4Upy24aZdOTnFZ/5//l9kzvwLKyFjnvPqXOlKS9d
cn3+yvd0vG3KNFSi7Chc7PHuKR0jmc2DWyi/5hn9YRlGx7/BxwdNKI9yFXbQ
3Oj4lKlsbE85sCdCRE6TjrE8pEoo5crWUs/CpXQUjNlfHE9ZtGGsdf/0KBKH
XhXkUk4stUu9VjmKLpu9efsp/827Lb4ibRR9tDPs+f4/z2mEz9s7o7g4/MAm
BcolMet3D9qMYm0a3cmJstCRARdevVHc07pZ4RplG4XX12RXjaIwrdrhFWUy
fQ1hNjyCkdXvXcYoG1z423miYQQnb27cLE3dn7vayf+C346gasDSBzspKxMr
t+deGcF5uqRo/P/37XrH4S+uI0jcd95UTblyb5Jvj+kICkTvYHEpO/2QKZRa
MoI0/o9uRw6SEEdbouGfOoyfDolG6VD3uz+7af+DO8NYv9Jf7RLlzd7RHpme
w5jBpN3JpVw/J57ZqTeM2eqGWRpUXghKiSgZNtLwRrj9hIktCQd/1+w+WkjD
q708BtGUnz+NcPVOpOHXeq1LnZT1VQSfp5ygoWpa3btAKp+8gVdOdGoI9eLz
jRupPPsoQGxf92cIUxJU72ywJ2HRl2B7/coh/CK1dfQG5cyDM48u3B1CxfDJ
xSZUXvaeHpf4sXoI3R8/T/hD5anmxkIN+vwhTAq+eXgflb9X2Zcs548OoqDa
WtdiysuvkHe2vRtEsQrNy0mOJFg9HBV6sm8Qq4U1D12h8v3Z4Uyld5sGMZf/
ocYsZfrKM8YNUoPopJsadYXqh8i0wVC+rgF0XNM0ddOZhPKyntmTlwZQay/u
KXMlYdNQK3vj437MKXIYyzhNwqUxNeVlYf34St5x6z6qn4rGQxxm3fuxsZ9/
9SjlnYIqn+p0+nFSnsaz7Sy1njX+j04396EBz0w504OEWJVvtZbv+/BtjzFf
ynkS2jRW8+g878PGsgDFYxdIcDX44iZ4oQ/Ldgru+EX1p7eDrO4LkT7kg4AE
OtWvJa4eHpFkL6rdkmW+p/p39szH5xdbe1F3Wb3Xbaqfw/3dRQxSetGpTnnt
Vl/qPDwqaW/f1Yuc1iaTggBqvtH+ylL/HvwopNVqE0rN/8rK/+fUg+l2iXVH
wkjY1cU32GvSgwpr/OJdr5NQS0+3zJfqwaUvlZkhN0hoF5leZZn7F6Ue/5wd
uUXC3O7EypuD3ahQvTf4fgzVz+aMiQv13bjZ0WBvayz1PnDQUM2usBufFKfX
K8ZR++8yHKMY1o3RFrdNGhJIWH11+6kK+W70fmdHOD6j5kvaFvyz6cKtjbQr
fplUHqe/2la9vQsPnLJavi2LBOnE86ejFLpw41xA8lw21YfjgtH7mv/g9KRh
e3I+CesCbBY9nurEnmzLjfrvqTw6QjuvUdmJufYlBjofSKjTC66vutOJzjur
1+sitZ+zr+7SFTqRbjcye6iCOq8hHFEDkw409wnzZ9ZS++V882zzog40k4xi
qX0j4bShXJ3b73bkKDfYezVQv2fe7ltR59pRtLn/rswPEo5FPFzQ86ANfygJ
/PvZSfXRXS3B8K5WPBuemGPIJqHhfPUJ2fRWtFo/rbtmnIQXlkeqsrxaUX3V
m5iFU1Q+S4SG/RRsxaBDL58s4GFBfMx3PmW1X+h193DYI1EWnPU56fyB+xMj
j3mJtYuzwMB2qvwA8RNZn/ceVJdkwaD06hB/6584kbRC858MC7YkXZyr9WvB
ec2qembrWVS/zzvmZNiCtkO0AkFVFnQ4xJexRVvQ8LCxReNGFoTJlwfJPfuB
F86JQRz1/tn0fNGMx6dm/DhrpzFuwoILadkTiyWbUE7/dJ/1WRZsWugRuqvr
OzK6hKZpF1jA9FRd6PXmOy66GykW680CT720Nc0m35FWLTapfIUF3vXPLWID
G/Fp7+fzNg+o9W0+3vrJtBFDwgd+J8SxgBsn7zq+tBEjttzYN/6YBZedk/zs
chvw+K6WR1OpLGDRNphq19Vjj0vqDT2CBZcKUh1jT9bj7WHNNKtP1HzQukvj
PPWYt2L98vA6Fkwskn9arP0NPXccktjTyoKZLRKcHU/rMOKq58x+NgsEQyee
GXvW4EmzOQ8zDTbcMPMuTBGtwcCB109Tt1H/H5aStUIpn3HPj+2btHaxQTht
mPulrRrntg7cabVmg3h9p9n+3Z/Qb57U0QQ/NtyPO+Kc86cKJ6x69eNC2SDh
/OvyYv8qhLfTQ9/vsGEJp/F5U1Ylqtb6vZv/gg3Sy6smbKUrcPlkZXhhAxvi
e3cuLM77iMrL/pp1t7NBNqtsjaz5R/zduGzYcYgNcjuLLNpDyvHbKj3V4/wc
eCKs7bpjRTme7Bh4PbqIA/LNuX5PCgnEA9YF7Ss5YPjNxrS8BXFtzj17znYO
GB+3vBQqgmhjbqajvI8De9imT3cblGHLjJ5Rsz0HzGR3cGrSSrEw4R9PWgAH
bE6uSf4eWIx+dz9tXl7JgciLXhHRb4uwSErK7vxPDnwIrDhvRX+H72+9SvEe
5sDaBy76348VonbI4x3VUlywe5K/LjruLarkfM1RVeXCrTR+MavGAiy7kDnn
a8gFEl+0Ne7Kx5AVxDURby4o1rI+RgXk4TVtg6t+97hwuMUw/UBBLk7df5Kw
MoMLxEiPb+O6HHTEhdcC+7kwyDhFrP6QhbKiKfo+guOwX1Do3nP1N9hjohOh
sn4cVmrtUX2+OB335d0bvXZxHK6bDk6tCk1F+QEHSIofh5FjETXJ7Nd46frh
RsfKcbD2WR+36uQrXHdmvvE6chxKbn8+mfzzBXbt6Jx2WDMBq164aa8yfY7X
glP2R9lNQESxkEByyTN0eaXwyD16AjqfHni10+4JXgxXc61qnIA3dVG7dm5P
xPuWz2rLl01CwGTjH4OVcXjm0WB+74lJMFWUCDLgjUHDizqT5mWTsMzaStag
Nwp9daUlZdZOQe3c2vNX7t7BoIGju6WTpsDt8Ku04IM3cCLW69hp9WkQyF/X
GyQbgkHLl/71oU2DgYzZjinCG29NiWyaz56Bsbh4V2a8Mw457IoT/DILgXwP
q4x1TOFUlB4ZFDYH6gku1Uu2nAfxvK7o2/7T0CmTSxcRDwTBmcLrOXmTYK31
qzR8ZxholrX5y/hNQGGr7bUbAZGwKfTGEqmwcRAjhtdU2t8HpQ/KiSpFXIAH
GeGVlx+AVyljS998Llw8eWao8mEslGiJHU06w4Hn2zaYVeXGQ2e16+rQTjY0
iw5nVX1LgqyI9xrHHdiQdFhb1yUsGYQUacwbPizQNow50yPxAq7k5Rj2iLHg
myonySX5JaxTs3ATyiCBh+ftnEtZCrjxV/OUspgQP7REo9csDYJv635WfMIE
zaZLzq5t6cArdH6G34wJrq83V7lOvIFjZ1p/FOSMgauifZWmTB7sV4+bilVj
wKblwp2eXXlgvFvH83A6Hf6Jl3DzUvIhucwx5JQKHWInZdZrbXkLmxtXFPtq
jUJ1XWuklnUR5E8eKFB2HQY339/VRzYUg4UlsfXGCA2E1rYJhPGXwFiicYfS
ZRrsDWgPbs5/D5KqM82p0UNQp/zH03sJwsq01OygPwPgZuj5po32EWIM+En3
D72gE0/WMmwqoM/I/JiZYy8IMTxp/BUVoFNw57ciTy+kJXgpqSZWwoWC1ROJ
xj1AY15KDtz3Cabzm9P8Orrh7LPLMXKZNbARn/kp2XWCHnc8X0P6C9yZYY9w
czpA1Mz3++6wL3D63o6MT8Id8GbcV9zjaC14rV3wC8rbgG7hf7NM9Cs4VbLv
J+q0QlFwWVn2lgZQctcpl9jbDLpq5XmWj5rA0yxkiXp8FWg3t8SW1TTBzaAT
RxaHVsKmgBF/1ZkmSIyOveZwrgIUa5YZCh1vhhvNlaHLDMtB8oRHE6r8gPbn
K4yaeothJGk5W72sBfTObErf6JEMT0V9tMX6WkHXK/nL+vhiTMi/JROw7Dcs
3hul40i8x1j75H+Dpr9hn59fltjgB7ydWldVmfUbSrMH31yhctHXaI1NoG8b
6C8993PpxSq0CmzwGRbpgBzR/pVtqt+Qz0eq3VWmC57NhN3Pnf8L7Z3Svxdt
7oIiF5Msyde/MG8v1IhadkFCXI4vy6gVneVPFxaEd8E5P+30bWG/8ePn0vsC
7C64IMw7sXNBB4Yud9398ls3ZIss190u3Y0C5XlZPaE9EPFlbblKRD8ezTB5
tfVpD2yZCQ4W6unHgpj2xFslPeA5PlTvrj+Aru6CN7WYPdBgkyhewx3AKkl7
l1Bq3ytcDioaegxh+Ele6TXb+qCiy6tUJWAE54tahjjT+6E59fqnpTFMtFOy
J7YsGACeW4nM61+ZmL7LdU547QAoeRv9CxAk0cLPNyj/8AD4PLIqF/YnMbb/
mZ9A1QDcDLQNWuHGQsVy5sXXiYMgefnvgnYXDvq2T+f4Fw6C/TqAzNcc/DI+
b8yicRD0Ep70mdM46KEu6zEuOATecjk35S9xsTBxl/sezyFQuDhkUBE9jrt9
HjjT9tDALLP5byD/FMZGPU4uc6FBr4O7iLrtFA5mpnRFB9OgoHLBDePMKbzd
895xewEN0iaEiX77aWy27LW/LT8MQtn8J1JqZ1DxLD3eSXcYzuonpR9Q/Ye+
NyZ+bT40DK5a47cYd//hijJR247IYfjsdKjJxX4WXTdoW6tzh+FIbdat+4I8
RKExRPMtHoHTcsoblQ14CCFn08aWDSOw3M5RUSuAh8iMc9h/5fgIgPyCGAaH
h5jNP3XXOnAE/txQYjZo8xKW9Re/Kj0aAetBdnvIZV6CPS98X0PdCMgKEnU1
PHyE8ar7kS8HRqDj5OKxF3v4iDi9hBpfvlHwCPHMa47mI/S8skxW6YzCy57Q
BJo6PxHa1WLo+WIUzIe+DbBuCRCdxfvO+ZaOwqYVuR1tfQKE7gMiNvjHKGz4
wGI9MJxHjO1OH4qcT4d9wU6mwyKChJm8vGSUAh3KR2sunL4sSKRMPNB7tI3y
k9KEgEFBwjEj6N6LM3TY9TQnl7dzPlESRhalhVHzmjbzZVyFCCnHU3+zH9Oh
zds4fwVLiLiwtV2ksJAO9EOmrCO3FxB1iw5ol9bT4Zyg6mNvDWFiPa3K8eMg
Hfjf8V316hUmQit0Iz7zMiA11C6NTBEhOpOyc7/JMmCnnV6C0xVRQtdnbVuz
FgNs1OwEjp4XI2L3xwu0mTGg5tagzKHghQRz/UL17hMMmN70wSjlrThhxhdq
OxDMgJPScvt/Ri0iUtvGr44+YoDxu/yoxRcWEwJvz6azchhQv7rpsfEtCeLY
3e6myRoGXDuh8StJYglhc/x3s3wtA0zufVo0snEJ8R91KNgd
     "]], LineBox[CompressedData["
1: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

     "]]}, 
   {Hue[0.6142719099991583, 0.6, 0.6], LineBox[CompressedData["
1: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
9K273HiFi2Hp21+xoB1azTkrz4v/H3AmBkM=
     "]], LineBox[CompressedData["
1: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
o7W1v7pSHu+jbpXyGuOB1ZMGOe6hbfh/AexTkgo=
     "]], LineBox[CompressedData["
1:eJwV0/k/1PsewPEZxr5mnCOlshbZSo42fD6VUFedSAghxxYiWeJaSgvCIVkr
VAjpFCkj5XpP9jj2fSmRLdv9zowx9rnn/vB6vP6Cp4Kzr4UrD4lEgn/6/53E
z+SKShLIJLFeck5bmj4ZMqgvJEOgs5XtwSnXpegpkynm8UoEOvX5P/ybHyXp
x8//7iaxj0Bmihujub9I0AkQCn2oT6CE8lOyXCMxerZGbeIvpwik/Oqc/tMW
EbrZo4i8jAsE2lsp/V4xWZi+wne4YrszgWJNqToDd4Xo+ddZLdk+BPLVtTkt
lyFItxx5PaYQSiBRkfpTZXUCdB4zD05eNIHiKSlHowUF6CUfFEVVUwjUfoEv
rN2en+6g8lX+1TMCeW1011UAH13kYfpvWq8J5BT78aOENh/dzUvUUbeeQCs5
SrQ/NCh06f56//JOAkmzdlzvK+elVxtFxhwZIRDXyL0o4jQvfcfOpbd4mUBq
69rtDrd56E2xJfU1FAYKsBR8brebhx7M8Rwy3sJAz3oPtQi2kend7SOUM3sZ
iNjj5d6hQabfNngs267HQPd5DYmjoyT6viJLrfMnGEjbMfsnkUGix935Yn3R
noGwgrQS2kKiHyLueA97MFCJgY1mXw4XJu0NIx0DGWgJemTFVblwXO9dkWsC
AzFj9Ms60CYQOVdh+jEDpadbq7V1bEC2hGq3VwEDKR4JsY1134CV6cwNPzoD
OTh03rHPWoeSJ1HnIpgM5GIpHH5ecw2aqVFTEiQmirGKvTnWvgqTcfcinosx
0aaOl8OxG6sgF3b3r1pVJkpROlM71LwCMfa3BUUcmcjHRmKrWNIy5HZHPs30
ZiItwy3mCSbLUGUWqaf1byaqMhaXZ3M5sKh/y8U8lYnMQpYs5YM44LQjgp7e
zEQWQaZbZwOXIDQ13FptgImMWv+MiT+8BGli4QsfJ5mofc+FA7GbbPh7I1Tu
G5mFlmgW5W7xbDj0LSRY+RAL5X6ci3OiLYLk08B9b/NYiM+kG7GOsEBdJrDh
eCkLWU+qNQVLsMA4McChG1go39osonGcCWE3/eM5gywkrs5X+yaJCdOOftMG
WxbRtPWnkk0WA3j7r91s27mITP/qjjnayoCd5679elljEZ3O3pSVfckAS+xr
dNdkEenn7bj0wokBdPmrz5rCF5HO14ttyb0EDGV4H7SPW0SyJ0WeuJURsCTp
3TqfsYjSd6l+/ZRCgAbZa13y/SIq9HWQGbUkIGPUw8Z6ZhF59mQrR5f9F3xz
XCTHrdiIcjb1kSF7HhJCHmUm/MFGuzv9OLK18/DmXKvq4WtsVDia+/fD5HlY
2Dx4LOE+G01qFyec050HbzuR64cq2Si41X+mKGwOPKVLu+IVlpCp26Xi+N2z
EDs76XhQawn5XIx8sLQxA0XV2+dGjywh23Ap2Z6eGfh57R7loOUSUl1FwtNR
M+DRYvPbaNQSSgoSvam98BPcorhpv80todLh/uKKtmmIuqSr9H15CSnfLyUn
v56GfN0rxbF8HDRRS0uri5uGibHOhpGdHBT2Q42z79Q0uKD85fvmHPTinJ3u
WsMUOC+b2X6jcZDLD8sbp7onwcHz8Y7oyGXkDBOXL8tPwNqAUCvjz2VkPLN9
tkBgAjJOhUTYP15Gc423vZT/Ow4dqjYj+98to3sGHXGVVeNgNPXL8+HxZcRj
4hlv5TQOai5JyjqmK6hgRzTfi79+wOKlGPWv4qv/eP7dqtl1DB60cIZMtq8i
wmq68JXFGGgauMeX7llFlYa7skrQGLjJGc9H41XU/mmqYfe2MRgY5C3Wub6K
6EhErKJ9FKqsb+rE9KyiyNwuOwWjUbhvHnT4QOYawtHJqvnHvsPDv/d6//Vy
DWVYS2Tt2v8dMk1GslXK19BGRfTncvnvUGJgStnauYY6DQK+HCd9h361bW3r
Auso6MHzmsDIEVDlqXKp919Hcje887/9+Q3qS/keXPzXBkpT2kDcv4ehXfNj
dafNBpJNJrnfKh2GwUIf9r/cNv7xTWvSzBiGhew+W8PIDZSkdiZNxGUYfo17
qaJUvoFYI5OvGzaGwPWPM5/mFDfRUoVD4c9DQ0CRTp28ubqJBtTA37x5AKQW
IsSlBLiIWlKVIlU+AAqNHnp5VC4ij+Z4ETkDYBimH9WowUW6t9bNyKEDEDL+
Q2WLIxdFvvke4acxAAvvdVxzarior6G8wDalH+b2Tvs5G5Nwb0BN/0RQHyzK
fL33yoyE7W5vD+hx7YM1SuejRQsSPqA66DFk2QfCI58+RzmScMjIyju1A32w
Jzlxy6tgEt7Td8ywmegF5zW9t6wiEt7Obza66dsLfc33iLsSZOw4qstUCO+B
FMOskxd+JePi9PI+m6s9YPH2/WOVHWSsFdOYlHepB1rTfhjV7yXjce7CjxDD
Hqi/fOyRgDEZm/h8/iBD7gEaZ/1YbBgZR1xWU+He74Y0pYDkxJ9krFHKvBb9
sgss0+KmHQkyvpIVfF0qswukhHIN9nHIWPmnEed1QhckLHRMtVN4cF7B6V9+
DeiCqAptfSl5Hnzw5OGwAtQFQb/PjqdY8WDGdFo6baATLoQ66z2u4cHfrrx8
17a1E9KypPk5X3iwzqzynjWxTuiF+p7z7TzYNvjzbzq8nWBFUQ8U+8qDhbZe
Ha6e7wCbP1nvbi3x4MazHEfvmg6wfXp3v7saL/6C9A52XOsAp5p8Dd1EXjz3
pbnsWlc7eIvMKrbaUnBwdAWquNIGsyEfKSKXKdhxjFRleLENPKfvT5q4U/B3
0pWSLtM2cK9TLfrsT8Fan7hZ6qpt4HzTbX9ZPAU3Xt1mlzTVChdZoyizioJN
q598UbzSCsZD/faeinx4fjpuqC+oBXa9qk/jn+HDesW5a9UfmsHy6YeKJoIP
S4o8PR9c1AyxyUXDCRw+HOB3pftIZjMshiYoyvDx47MehcJTN5uhyczqzR55
fvygU8pj0KQZghYm6kyt+HFLvuDhnYNN0LKfjx1bzY9jOrojigSaIPTDifMS
TwTws2C3/xTdaQQd+3bC8bkA5u+WdGUHN8IM1z6hpEAAO24IuJv6NIKtSdAX
8/cC2HOni6XAxUY40luIUloEsJluVMeUViMss8Q0ZEmCWMqJ5aY+3ABB2v0U
JVdBbGfpo35LvwGu5XvT9LSFcFBvp/IzqXr41rY9VVxPCAe+jI0lC9XDmZUm
/0l9IbzJSPL25NbBXjO1/WmnhfAHA5m7FnN1MM6YeMV2FcJswkk2tL4OrA0c
n7/PFMIxpvINu8PqwLDbPF5HWBj75B7veztXC6I8B521JoRxemHcFf7RGqi4
wXt+clYYC6ZKy+0fqAG3+bYT2UxhfKKCbX65owbo/R4q4iQRvBYYvL/zcw34
Fz+ent8mgnP95VXYOTUwaL/p8/qcCK59Ead01K0GCsvrQjUqRbCmQoFILlEN
J69apu5NFsUhiQ0rXdRq2Fqxw/eksjius/u3X0ceHR5ej0na1yeBBxy3oJkn
VWAR9btmFk0S3wm/KLXgWwl77e5eyAvfgksbzS5MJn6E3kmhnOQLUlj1HsOm
ueYDtDpPHJPaRcW7ekesrhqXwyilYDlVkYrfiLJOKONyWMz3KJbdTcVAU9f/
drgcZGdn5RQ0qTjyZfpJO81ycPFncrSPUrH9cHxkiHQ5rN7hvj5jTcXzxm9b
jH7QYPcL2W33E6k4t+FsquAdGhw2GWoXTaZiJXlFhlw4Dcx+ZkY/SKPi4QPz
Mro3aOCnKc9Oz6JidavBKk8vGlSW7W7Pf0XFfDphBivnaWBRfyCqtoGKi82z
HR6p0MDVg61v2kzFLaW+sQO7aBAsXM5qbqXis4Nlf8hto0HW2SOXu3qo+FLN
DZkicRpM92L9sR9UfI4kajHBKYPVYB6W6xQVVyWVlh9hloHY9tqXP2eo2Kc0
r/LhXBnoOJrIMBhUvCgTkHV6tAxOkoVaA9hUnGM/EFg0VAY2uU13l5epWFzz
8aRobxl4now/GrZOxWnGm/N+7WUQPnWGyeVSMX3sbOxAUxn8D7HmLqo=
     "]], 
    LineBox[{{-0.001661685911615799, -5.046798956030961}, \
{-0.001523517784859436, 7.747962751782638}}]}, 
   {Hue[0.8503398874989481, 0.6, 0.6], LineBox[CompressedData["
1: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
XjNYMA2tlhjSXEj+B5xpSQE=
     "]], LineBox[CompressedData["
1:eJwVyXk41HkcwHHnkMGOa4jchA2VXGny+xKPVY4xtbJZMbZryhLNdMxSq9Sm
2qxr8JB62O3JvVObJPn8lNgJ1bgnKjXImIvClDDb/vF+Xn+8bRNTaPvVVFRU
or72v4Evn1k3yOUQktNBkqw3xtXOhBZfmJJDS9ODT7RIQ3w7K0Np3SMHW+Ny
Gi1OH889wj1wnyuHyzG11EsCHXyYPtFD48ihruzfg/F0bdwmZrWXhC2H2M7u
mooTBPxQRHjZ+Xg5cDOoC2cnNfC/gzLVrYPkIPboEr/JVcc/+d093OQsB1n1
97ouDDUc2yjiR+nJQTPaewOPropfcLLcLJ6VQZpzMuQzVfBnllE3sgZlQCB6
a437KoFsfF7L6oEMbHsVjWE1y7BX537yvesyCLDQCW/yW4KbKtIBapYM9rkW
ch6/WwTpgs3W6UMy0PPn7V24/hnShReJlh4yKN71I21dpALaBS1pjeSvXz3k
mPrWBdB9MSOI/CKFVjOHJrbPPJS2xNw62y6FUrL7rH34R2gudA6eipZChjK2
wr5NDtqx739SpUiBQs3gKT1lEG1z86y5rRTmSNIw938k8KHaHg8TS+DKbxrn
1/FF4IJbbeGekYDAY6S5PG0ciqeNN7JvicHNqidguGcAJhv6IvN/F8OKTwD5
NKcPPFl5ybVpYrjXkJCuf5APz5Xf1L6miCHwnfaR45SnQDAhOm3jT0PdiXm2
GeMOsDBVS91FEXSL9DSXmU+wRxr4Fsc3IhCaP1a4efMw0tPTe/zbRfBrDTfr
4Uw3VrtrqejoVRHccN89f9ulFxtnKAwH7ETgdfVMoFaSAKMVSLXLd0wB0/9U
U02nENsgEsytvzYJDo0k2krHDMaccXMxzZqEtTOs+KNus1iTIjNu5fAkVLKS
HebyZ7EAwrcd3b6TkNpc4B5A/4DR7NlFjP4JuDS/d5G+/BFjxZn7VRIngOtV
rrMJU2DN/D1nyGwhlFESU0o1VrCV4fo7ywlCqMlz53xmrmCBY2pT4yFCeAwH
s6cnVrAuWTX1jokQeN+pcjk8JTZK/GJL5b6DnCtbncK6VZAyuLQ9e+otFNs9
s26tVUNBzSOrlqPHIHR7XeCtDgKqr/5rc+eWMegrjhjXM9JCZqUpjFybMXBV
7/nik6CFBhWEvB39b6BdMylItqSFHH+JJl1bfA13wxPd0tEq9ChzXheFvIKd
tOPdR+aJiJOYndRPegVc2zxPAVUXMbZZdh96OQqJXbvdU+t0EUkz+HLuz6PA
jNyXE3BYD8VfLFglzB8BvdDNFjEf9dHS1U2EC2MC8NYaVVVZa4BepHTuN68W
gHO9Q3pwvAGqpMY+qT8mAN6OaT9miQHabngua4ggAMdTl0qqSIaopLBXzcVt
GBjXqstCiEYo6fiBxIcLQ+CTzo2rCjNCaPdiWxQ+BEZMB03PHCM0ZWaXyd45
BETSGsNpU2PkXZaq7Do1CHlc0chnXxOkk6EZn7BtEE4a6Li1ZZmgV3ElrXO6
g8C4Tb6s3WuCsqzbMixvDEDs3IGIsFQy6qsgLSV39IOLJIFMaTdFN8/9Gav+
Rz90tFamFFiaIfY+3wdFP/QDJc+C9f6kGbJbm8DGJX2w2tvKlee1Gh2tavhk
YNQH8UxX/0dPzdEG/eRzgWO90NLo5LTkboFm01z1j9X1QmV6SFh2oQVKo1TZ
94f0wulwybCCsQaxnldEcNL5cKKIGf7Wwwp5e9IFHaF8cDzZ8JxRa4UUCrpp
rjMf6LacD6JlK/QfEaacWQ==
     "]], LineBox[CompressedData["
1:eJwVx3k41HkcwPFpchtyjEJUYh1JxyMq5PMNoUiOVrkZpjYkqWbdW6gsSqlm
CpEUJYuYddX6TYWllTBGwmhQM8Ncbgnbtn+8n9fz1iOd8STjcTicz4/+N92k
5K8nJt0QokedHl/ZgBZZ2B4crxvu96tzCba6aBSHc1bQ7YGjWUWRCa066K0p
Okb06gEtSlbyjIcOyr3EuGCM9UBxQVLKlbPrkZXZq2p3GhN2r25QtezSQha9
fdSmdib4NWecJJ3XQjsShPFbl5mw43a4zkVtLWTYvs5eLqQXNjtFfHCN1ETq
5CgmtoUFw0KlgWSDdUiZkFZnFsCCgszQvtS+tUih5l5eXjYLRp/I50lnrEW4
VS2hv86yICV9/t8jcxpImL9+dltTH5Q6iDzeDRIRz35nf/5kH3iHOymk3CWi
0QnHlwr6H+APsk5HkDcRfdwTk8a9+gHMpPBvzrHUUWtvG7HAox8MGsstdThq
qJBAsVD68hEs7ZzIjnqqKLcmUyth3QAgi+Nta0QqiOpbtMI/+OO7X2tTG1RQ
1pOOluaKARh57NDdclQFxTroeyfGDoKsl/hLkOEa5JnYRREoskGn4X2ikQ8B
Hdbn+vrYsuEXg8U5FykCcn67ZPt3NBuGrGk/RVQpIltNI9liFhvK/JtJlxQV
kSk9ieZbOAx+bQ9vRnbIIzxFYyhMiwMdnZQbz8/LIt/gsp76XRyQj7G/umIo
i6oPQTvBnQO+/2StqAzIINLGU7X0KxzA76wjxtvJoNdtL29IzXIgM2qa+m69
NEpdH3bgUecIFGpmZuQJ8UjqVXXFWOoY1E81dn7qXwH/Z06PdxeOQQKN6xkS
tAL0O0N5mY1jYLzTjJjGXYawcJnfzafGYI+Q60ibX4IWdd/Q1MDPcC4vhxyg
+w2unFilqb/3CxAUZ5RZF+dBluB+iSTmwrVgZ/+SBTEcN/JlWMrzQKzK+T6g
I4Yyu7DvCgY8oLupdUjZicAtLjapxocH70wpRYQsAVC5D+KkWnhgbf1iH12X
D4avps6W5PEhpW9qLWvrCMQOLVXF1/IhhuKO73XhwNsF6Um3bj7situvucwc
hqht2lELMuNQVz+Sbuw0CLV5duHOMeOQf83C+5N6Lxyg3CJNOE/As6oNB8Jy
6EC9eb+oKXQCQmiK5uY1T4FfXsrJSZ6AXItSgpXtbcgaexFoTZ8AoU0ofX/s
Y6zX/bNv1kYBnKBGUCWlLZhhpPhesJUA2uPxzO397Vjs1a/9u34WAGKXh1Rr
dGI6TYRj7AwBNGSve9EcwMTCTC28ts0LYKd8vVoUeQirdYQcvKoQsi7a7X/U
NIzJkQ5295kKoaS2l21yk4OV3w048luIEEghdSye9Bg2K33FpatDCNJhxkut
tnzMUe9GxiOeEOpEi0y3B+PYXZvc9li8CK4TSt7SFQSYzbkKJ709IiiiRbNH
l0VYKqfPPqZYBDaX/aSzd09jww0up2NfikBzdbpanNwMZnWLQU1miaClwnS+
mzODTR4oG8+QFUN05yE2VjaHuW7cqH5zkxhIpSY16gXzWOnXWza0vWIw/15m
FJy/gAU+S8oujhADOfeL1w5sEWtMm65/miaGffyhriXuN0wj8ORo5X0xpJyZ
SYjZtIxF7x5SrK0VQyXhjqN51ArWoeJh8fK9GJa0C90Tmf9ixhMtga/5YigN
ucDasQXHSH1jld62SgKUro+Tyks4xnB+5fNObQlIiP7mrZ9WMawoBoO95hKo
8qq7PDeEZ1CP3JMadJXA7cNJ7kqLqxlTxsrbRsgSwDZrm5/aJ81wxace4yVL
4FxqfwK5XobxZHDhoogmgYfGs36Nl+QYUn9Gls1USUD5tGfUZLMCI+j6CHOx
XQKW0ZaVRzlKjMaT3ivfRyWg0ebQs+GCKuNo68zTbIEEnLJbVYTbiYz/AOy9
yuE=
     "]], LineBox[CompressedData["
1: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
2Nig4Hbv0R4x3UD4P83qzAU=
     "]]}, 
   {Hue[0.08640786499873876, 0.6, 0.6], LineBox[CompressedData["
1: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
oOtmE2qEV3JO7NlM/gfcsp5C
     "]], LineBox[CompressedData["
1:eJwB0QQu+yFib1JlAgAAAEwAAAACAAAAm6J3Ulec2j9hIZby6f0eQIyozMXE
rto/fn1gLmfRHkB4RCNWfHjbP8o3hNa9Bx1Ac+s4Ouqq2z+S4Cz/DJscQG6S
Th5Y3ds/f53c2YIwHEBl4HnmM0LcP3c8TtqgYRtAUnzQdusL3T+mcZQw+toZ
QE0j5lpZPt0/IMsmdc59GUBIyvs+x3DdP6FFMklUIhlAPhgnB6PV3T/KZ75x
Q3AYQCu0fZdan94/mFlXiG4eF0ACdhXcZBngP8ujuZMcuxRAWmCq0rg04D/K
5y9AJG4UQLJKP8kMUOA/CdAdnXEiFEBiH2m2tIbgP2BP4be4jhNAwsi8kAT0
4D+yHmwDCHUSQIMbZEWkzuE/hm5wbv9xEEDcBfk7+OnhP6HRV4miNRBANPCN
MkwF4j9bgXuwK/QPQOTEtx/0O+I/fDaMoq0KD0BEbgv6Q6niP5SZXvBdSQ1A
BMGyruOD4z+cbmpPHwUKQFyrR6U3n+M/veL+nsihCUC0ldybi7rjP1yn7wd/
PwlAZGoGiTPx4z/GviTV9X0IQMUTWmODXuQ/DlVhJ0cGB0CGZgEYIznlP9f6
0QTNPgRABwxQgWLu5j8nkujiNk/+P1gnWsA2Cec/53y4k+a2/T+qQmT/CiTn
P1Nmx78/H/0/Tnl4fbNZ5z+bMWm0yvH7P5bmoHkExec/Ksmf5ked+T8mwfFx
ppvoPyfmMFflBfU/eNz7sHq26D+Yg8/86HP0P8r3BfBO0eg/eGofQQHi8z9u
Lhpu9wbpP8XcVGpGvvI/tptCakhy6T/CZIMf9nXwP0V2k2LqSOo/0cLqkg+v
5z+WkZ2hvmPqP0DfwGHVguY/6Kyn4JJ+6j9jG3O7L1XlP4zju147tOo/YyBz
sBn14j/UUORajB/rP962GTtTO9w/JmzumWA66z+TNJ6EBsTZP3iH+Ng0Ves/
Hppw619H1z8cvgxX3YrrP53OdRBpPNI/ZCs1Uy726z+omtWVPUy/P7ZGP5IC
Eew/cNNy0DuRtD8IYknR1ivsP6UkK2uTYaM/rJhdT39h7D/vl/3n9xapv/QF
hkvQzOw/E92GJ2umzb9GIZCKpOfsP9gMBVpm49G/mDyayXgC7T80VZzGWQTV
vzxzrkchOO0/jNPJUyh+27+D4NZDcqPtP+H3z+w+weS/3rlLbXi87T8f8Lyg
noPmvzqTwJZ+1e0/fuwNiHxU6L/wRarpigfuP/sn6MWXJ+y/TB8fE5Eg7j/y
bDF/VS3uv6f4kzyXOe4/gsw2PFUk8L9eq32Po2vuP2NOrxhdZfK/uoTyuKmE
7j+m1WKEA5zzvxVeZ+Kvne4/eUzirCrk9L9wN9wLtrbuPwXgyB9yQPa/zBBR
NbzP7j/mfmWWGLT3vyjqxV7C6O4/MK5TuDJD+b+DwzqIyAHvP5hb8KX78vq/
3pyvsc4a7z++HIhiT8r8vzp2JNvUM+8/SauZTmzS/r+WT5kE20zvP+s97OMZ
jADA8SgOLuFl7z8lk6DLLtcBwEwCg1fnfu8/QS6XcNFYA8Co2/eA7ZfvP+US
xUa6KAXABLVsqvOw7z8PiKUqcnIHwF+O4dP5ye8/qhj0WEaUCsC6Z1b9/+Lv
P/3F+paNpA/AjzpG5qvw7z9Hj8YQ7C8UwA7ebUg=
     "]], LineBox[CompressedData["
1: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
     "]], 
    LineBox[{{-0.0021402973194431926`, -5.046798956030961}, \
{-0.002140296972250194, 7.747962751782638}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-5, 5}, {-5.046798956030961, 7.747962751782638}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6325355632448587`*^9, 3.6325355884923024`*^9}, {
  3.6325356240033336`*^9, 3.6325357445682297`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"LogIntegral", "[", 
    RowBox[{"x", "^", "s"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6325357686426067`*^9, 3.632535783972483*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"s", " ", 
   SuperscriptBox["x", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}]]}], 
  RowBox[{"Log", "[", 
   SuperscriptBox["x", "s"], "]"}]]], "Output",
 CellChangeTimes->{{3.6325357732428694`*^9, 3.632535784217497*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"s", " ", 
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "s"}]]}], 
    RowBox[{"Log", "[", 
     SuperscriptBox["x", "s"], "]"}]], ",", " ", 
   RowBox[{"s", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325357882597284`*^9, 3.632535796610206*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"x", " ", 
   RowBox[{"Log", "[", "x", "]"}]}]]], "Output",
 CellChangeTimes->{{3.6325357895688033`*^9, 3.6325357968712215`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   FractionBox["1", 
    RowBox[{"x", " ", 
     RowBox[{"Log", "[", "x", "]"}]}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6325358009574547`*^9, 3.632535802999572*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Log", "[", "x", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.632535803218584*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Animate", "[", " ", 
  RowBox[{
   RowBox[{"Plot", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"Re", "@", " ", 
       RowBox[{"LogIntegral", "[", 
        RowBox[{"x", "^", "y"}], "]"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "29", ",", "31"}], "}"}]}], "]"}], ",", " ", 
   RowBox[{"{", 
    RowBox[{"y", ",", 
     RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325358281560106`*^9, 3.632535886668357*^9}, {
  3.632535919833254*^9, 3.632535921996378*^9}, {3.632536053646908*^9, 
  3.6325361092070856`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6334782848564234`*^9, 3.633478294133954*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", " ", 
   RowBox[{
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "z"}], "]"}], ",", 
    RowBox[{"z", "\[Rule]", ".000000001"}]}], "]"}], "/.", 
  RowBox[{"x", "\[Rule]", "30"}]}]], "Input",
 CellChangeTimes->{{3.6325359434796066`*^9, 3.6325359929004335`*^9}, {
  3.632536024347232*^9, 3.632536028960496*^9}}],

Cell[BoxData[
 RowBox[{"-", "18.921922646660196`"}]], "Output",
 CellChangeTimes->{{3.632535953704191*^9, 3.632535993283455*^9}, {
  3.6325360247242537`*^9, 3.632536029838546*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   FractionBox[
    RowBox[{"s", " ", 
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "s"}]]}], 
    RowBox[{"Log", "[", 
     SuperscriptBox["x", "s"], "]"}]], ",", " ", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.63253614232498*^9, 3.6325361657343187`*^9}, 
   3.6325363263875074`*^9}],

Cell[BoxData[
 RowBox[{"LogIntegral", "[", 
  SuperscriptBox["x", "s"], "]"}]], "Output",
 CellChangeTimes->{{3.6325361497634053`*^9, 3.6325361659453306`*^9}, 
   3.632536326626521*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   FractionBox[
    RowBox[{"s", " ", 
     SuperscriptBox["x", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "s"}]]}], 
    RowBox[{"Log", "[", 
     SuperscriptBox["x", "s"], "]"}]], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632536202632429*^9, 3.632536209394816*^9}, {
  3.6325363109906273`*^9, 3.6325363152128687`*^9}}],

Cell[BoxData[
 RowBox[{"s", " ", 
  RowBox[{"DirectedInfinity", "[", 
   FractionBox["1", 
    RowBox[{"Sign", "[", "s", "]"}]], "]"}]}]], "Output",
 CellChangeTimes->{{3.6325362074317036`*^9, 3.6325362095778265`*^9}, 
   3.6325363154378815`*^9}]
}, Open  ]],

Cell[BoxData[
 FractionBox[
  RowBox[{"s", " ", 
   SuperscriptBox["x", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}]]}], 
  RowBox[{"s", " ", 
   RowBox[{"Log", "[", "x", "]"}]}]]], "Input",
 CellChangeTimes->{{3.6325362532133226`*^9, 3.6325362560694857`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   FractionBox[
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "s"}]], 
    RowBox[{"Log", "[", "x", "]"}]], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.632536261631804*^9, 3.632536264393962*^9}}],

Cell[BoxData[
 RowBox[{"ExpIntegralEi", "[", 
  RowBox[{"s", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.632536264658977*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   FractionBox[
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "s"}]], 
    RowBox[{"Log", "[", "x", "]"}]], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.63253630369121*^9, 3.6325363066743803`*^9}}],

Cell[BoxData["\[Infinity]"], "Output",
 CellChangeTimes->{3.6325363070994043`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"-", "1"}]}], "/", 
    RowBox[{"(", " ", 
     RowBox[{"Log", "[", "x", "]"}], ")"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.632536351906967*^9, 3.6325363678408785`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Log", "[", "x", "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.632536358056319*^9, 3.6325363681428957`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{"x", "^", 
    RowBox[{"(", 
     RowBox[{"s", "-", "1"}], ")"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.632536437119841*^9, 3.632536620416325*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["x", "s"], "s"]], "Output",
 CellChangeTimes->{{3.6325364411370707`*^9, 3.6325366207543445`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{"LogIntegral", "[", 
    RowBox[{"x", "^", "s"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.632536789609002*^9, 3.632536824494998*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"s", " ", 
   SuperscriptBox["x", 
    RowBox[{
     RowBox[{"-", "1"}], "+", "s"}]]}], 
  RowBox[{"Log", "[", 
   SuperscriptBox["x", "s"], "]"}]]], "Output",
 CellChangeTimes->{{3.632536793308214*^9, 3.6325368249090214`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"(", "s", ")"}]}], " ", 
    RowBox[{"x", "^", 
     RowBox[{"(", "t", ")"}]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.632537307341615*^9, 3.6325373186442614`*^9}, 
   3.6325373647138968`*^9, {3.63253745236791*^9, 3.632537498240534*^9}, {
   3.632537544167161*^9, 3.6325375457852535`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["x", 
   RowBox[{"1", "+", "s", "+", "t"}]], 
  RowBox[{"1", "+", "s", "+", "t"}]]], "Output",
 CellChangeTimes->{{3.632537474326166*^9, 3.6325374984475455`*^9}, 
   3.6325375460192666`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"s", "-", "1"}], ")"}]}], "/", 
        RowBox[{"Log", "[", "x", "]"}]}], ")"}], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"t", "-", "1"}], ")"}]}], "/", 
        RowBox[{"Log", "[", "x", "]"}]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", " ", 
     RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "\[Rule]", "4"}], ",", 
    RowBox[{"t", "\[Rule]", "4"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6325373639268513`*^9, 3.632537363947853*^9}, {
  3.632537501203703*^9, 3.6325375760019817`*^9}, {3.632537673780574*^9, 
  3.632537690122509*^9}, {3.632537724286463*^9, 3.632537729733774*^9}, {
  3.632538020103383*^9, 3.632538076803626*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Integrate", "::", "idiv"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Integral of \[NoBreak]\\!\\(x\\^6\\/\\(Log[x]\\)\\^2\\)\
\[NoBreak] does not converge on \[NoBreak]\\!\\({0, 20}\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Integrate/idiv\\\", \
ButtonNote -> \\\"Integrate::idiv\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.632538024850654*^9, 3.6325381224242353`*^9}],

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   FractionBox[
    SuperscriptBox["x", "6"], 
    SuperscriptBox[
     RowBox[{"Log", "[", "x", "]"}], "2"]], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "20"}], "}"}], ",", 
   RowBox[{"PrincipalValue", "\[Rule]", "True"}]}], "]"}]], "Output",
 CellChangeTimes->{
  3.632537509522179*^9, {3.6325375395998993`*^9, 3.6325375768370295`*^9}, {
   3.6325376765747337`*^9, 3.632537690989558*^9}, {3.632537725780548*^9, 
   3.6325377300047903`*^9}, 3.6325379201606665`*^9, 3.6325380249086576`*^9, 
   3.632538122427235*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "4"}], "]"}], 
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "4"}], "]"}]}], "/.", 
   RowBox[{"x", "\[Rule]", "20"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325375959781237`*^9, 3.632537637481498*^9}, {
  3.632537702342208*^9, 3.6325377041293097`*^9}, {3.632537858105117*^9, 
  3.6325379110051427`*^9}}],

Cell[BoxData["2.169671181475883`*^8"], "Output",
 CellChangeTimes->{{3.6325376050936456`*^9, 3.632537637727512*^9}, 
   3.632537705271375*^9, {3.63253786375344*^9, 3.632537911239156*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{
    RowBox[{"7", " ", 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"7", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
    FractionBox[
     SuperscriptBox["x", "7"], 
     RowBox[{"Log", "[", "x", "]"}]]}], "]"}], "/.", 
  RowBox[{"x", "\[Rule]", "20"}]}]], "Input",
 CellChangeTimes->{{3.6325376414397244`*^9, 3.632537660509815*^9}, {
  3.632537749497905*^9, 3.6325377544241867`*^9}, {3.632537924848934*^9, 
  3.6325379301032352`*^9}}],

Cell[BoxData["2.2668063534564614`*^7"], "Output",
 CellChangeTimes->{{3.6325377522550626`*^9, 3.6325377545641947`*^9}, {
  3.632537925681982*^9, 3.63253793036725*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{"s", "-", "1"}], ")"}]}], "/", 
       RowBox[{"Log", "[", "x", "]"}]}], ")"}], ",", "x"}], "]"}], "]"}], "/.", 
  RowBox[{"{", 
   RowBox[{"s", "\[Rule]", "4"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6325373243105855`*^9, 3.632537363306816*^9}, {
  3.6325379413068757`*^9, 3.632537952305505*^9}}],

Cell[BoxData[
 RowBox[{"ExpIntegralEi", "[", 
  RowBox[{"4", " ", 
   RowBox[{"Log", "[", "x", "]"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.632537946866194*^9, 3.6325379525185175`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6325373627517843`*^9, 3.6325373627697854`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"LogIntegral", "[", 
    RowBox[{"x", "^", "4"}], "]"}], "/.", 
   RowBox[{"x", "\[Rule]", "20"}]}], "]"}]], "Input",
 CellChangeTimes->{3.632537966120295*^9}],

Cell[BoxData["14729.80373757873`"], "Output",
 CellChangeTimes->{3.6325379663783097`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"ExpIntegralEi", "[", 
    RowBox[{"4", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}], "/.", 
   RowBox[{"x", "\[Rule]", "20"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325379708315644`*^9, 3.632537975047806*^9}}],

Cell[BoxData["14729.80373757873`"], "Output",
 CellChangeTimes->{{3.632537972170641*^9, 3.6325379752548175`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"7", " ", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{"7", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
   FractionBox[
    SuperscriptBox["x", "7"], 
    RowBox[{"Log", "[", "x", "]"}]]}], "/.", 
  RowBox[{"x", "\[Rule]", "1"}]}]], "Input",
 CellChangeTimes->{{3.632537995633983*^9, 3.632538007155642*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6325380077536764`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(ComplexInfinity + \
\\(\\(-\[Infinity]\\)\\)\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6325380077546763`*^9}],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{{3.632537996817051*^9, 3.6325380077556763`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"FullSimplify", "@", 
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", 
       RowBox[{"(", 
        RowBox[{"s", "-", "1"}], ")"}]}], " ", "/", 
      RowBox[{"Log", "[", 
       RowBox[{"x", "^", "2"}], "]"}]}], ",", "x"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.632586162972063*^9, 3.632586311621565*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  SuperscriptBox["x", "s"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    SuperscriptBox["x", "2"], ")"}], 
   RowBox[{
    RowBox[{"-", "s"}], "/", "2"}]], " ", 
  RowBox[{"ExpIntegralEi", "[", 
   RowBox[{
    FractionBox["1", "2"], " ", "s", " ", 
    RowBox[{"Log", "[", 
     SuperscriptBox["x", "2"], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.632586166782281*^9, 3.6325863119225826`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["x", "s"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["x", "2"], ")"}], 
     RowBox[{
      RowBox[{"-", "s"}], "/", "2"}]], " ", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "s", " ", 
      RowBox[{"Log", "[", 
       SuperscriptBox["x", "2"], "]"}]}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "100"}], ",", 
     RowBox[{"s", "\[Rule]", "1"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632586328184512*^9, 3.6325863352409163`*^9}}],

Cell[BoxData["15.063070792039822`"], "Output",
 CellChangeTimes->{{3.6325863322607455`*^9, 3.632586335472929*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["x", "s"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["x", "2"], ")"}], 
     RowBox[{
      RowBox[{"-", "s"}], "/", "2"}]], " ", 
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "s"}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "100"}], ",", 
     RowBox[{"s", "\[Rule]", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325863441464252`*^9, 3.6325863514228415`*^9}, {
  3.6325864210538244`*^9, 3.6325864211748314`*^9}}],

Cell[BoxData["623.0686079496944`"], "Output",
 CellChangeTimes->{3.6325863516918573`*^9, 3.632586421361842*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "s"}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "100"}], ",", 
     RowBox[{"s", "\[Rule]", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325863707019444`*^9, 3.6325864149264736`*^9}}],

Cell[BoxData["623.0686079496944`"], "Output",
 CellChangeTimes->{{3.632586372259033*^9, 3.6325864185226793`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "2"], " ", 
    SuperscriptBox["x", "s"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["x", "2"], ")"}], 
     RowBox[{
      RowBox[{"-", "s"}], "/", "2"}]], " ", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{
      FractionBox["1", "2"], " ", "s", " ", 
      RowBox[{"Log", "[", 
       SuperscriptBox["x", "2"], "]"}]}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "30"}], ",", 
     RowBox[{"s", "\[Rule]", "3"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325864339415617`*^9, 3.6325864417750096`*^9}}],

Cell[BoxData["1492.2094998634454`"], "Output",
 CellChangeTimes->{{3.6325864394068737`*^9, 3.6325864421750326`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", 
   RowBox[{"LogIntegral", "[", 
    RowBox[{"30", "^", "3"}], "]"}]}], "/", "2"}]], "Input",
 CellChangeTimes->{{3.6325864444911647`*^9, 3.632586453307669*^9}}],

Cell[BoxData["1492.2094998634454`"], "Output",
 CellChangeTimes->{3.632586453463678*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"s", "-", "1"}], ")"}]}], " ", "/", 
     RowBox[{"Log", "[", 
      RowBox[{"x", "^", "3"}], "]"}]}], ",", "x"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6325864510095377`*^9, 3.6325864694525924`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  SuperscriptBox["x", "s"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    SuperscriptBox["x", "3"], ")"}], 
   RowBox[{
    RowBox[{"-", "s"}], "/", "3"}]], " ", 
  RowBox[{"ExpIntegralEi", "[", 
   RowBox[{
    FractionBox["1", "3"], " ", "s", " ", 
    RowBox[{"Log", "[", 
     SuperscriptBox["x", "3"], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.632586469827614*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "3"], " ", 
    SuperscriptBox["x", "s"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["x", "3"], ")"}], 
     RowBox[{
      RowBox[{"-", "s"}], "/", "3"}]], " ", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{
      FractionBox["1", "3"], " ", "s", " ", 
      RowBox[{"Log", "[", 
       SuperscriptBox["x", "3"], "]"}]}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"x", "\[Rule]", "40"}], ",", 
     RowBox[{"s", "\[Rule]", "4"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632586473341815*^9, 3.632586481086258*^9}}],

Cell[BoxData["62438.17436869163`"], "Output",
 CellChangeTimes->{{3.6325864789451356`*^9, 3.632586481317271*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", 
   RowBox[{"LogIntegral", "[", 
    RowBox[{"40", "^", "4"}], "]"}]}], "/", "3"}]], "Input",
 CellChangeTimes->{{3.632586489635747*^9, 3.632586504875619*^9}}],

Cell[BoxData["62438.17436869163`"], "Output",
 CellChangeTimes->{{3.6325864947670403`*^9, 3.632586505404649*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}]}], "  ", 
    RowBox[{
     RowBox[{"Log", "[", "x", "]"}], "^", "k"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6325865887084136`*^9, 3.6325865891794405`*^9}, {
  3.6325866310018325`*^9, 3.6325866458816833`*^9}, {3.632586679650615*^9, 
  3.6325866801476436`*^9}, {3.6325867606752496`*^9, 3.6325867608422594`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox[
   RowBox[{"Log", "[", "x", "]"}], 
   RowBox[{"1", "+", "k"}]], 
  RowBox[{"1", "+", "k"}]]], "Output",
 CellChangeTimes->{
  3.6325865894024534`*^9, {3.6325866338709965`*^9, 3.63258664634171*^9}, 
   3.632586680368656*^9, 3.63258676119928*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"LogIntegral", "[", " ", 
   RowBox[{"x", "^", "s"}], "]"}], "/", "k"}]], "Input",
 CellChangeTimes->{{3.6325866095156035`*^9, 3.632586616731016*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"-", "1"}]}], " ", 
    RowBox[{
     RowBox[{"Log", "[", "x", "]"}], "^", 
     RowBox[{"-", "1"}]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.632586794763199*^9, 3.6325868395067587`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Log", "[", "x", "]"}], "]"}]], "Output",
 CellChangeTimes->{{3.6325868035247*^9, 3.6325868399447837`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{"LogIntegral", "[", "x", "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6325870858808503`*^9, 3.6325870896790676`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"ExpIntegralEi", "[", 
    RowBox[{"2", " ", 
     RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "+", 
  RowBox[{"x", " ", 
   RowBox[{"LogIntegral", "[", "x", "]"}]}]}]], "Output",
 CellChangeTimes->{3.6325870899180813`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "2"}], "]"}], ",", "x"}], "]"}], "/.", 
  RowBox[{"x", "\[Rule]", "10"}]}]], "Input",
 CellChangeTimes->{{3.6325870982155557`*^9, 3.6325871315354614`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"ExpIntegralEi", "[", 
    FractionBox[
     RowBox[{"3", " ", 
      RowBox[{"Log", "[", "100", "]"}]}], "2"], "]"}]}], "+", 
  RowBox[{"10", " ", 
   RowBox[{"LogIntegral", "[", "100", "]"}]}]}]], "Output",
 CellChangeTimes->{{3.632587099079605*^9, 3.632587131845479*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{"LogIntegral", "[", 
     RowBox[{"x", "^", "3"}], "]"}], ",", "x"}], "]"}], "/.", 
  RowBox[{"x", "\[Rule]", "10"}]}]], "Input",
 CellChangeTimes->{{3.6325871457832766`*^9, 3.6325871458552804`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"ExpIntegralEi", "[", 
    FractionBox[
     RowBox[{"4", " ", 
      RowBox[{"Log", "[", "1000", "]"}]}], "3"], "]"}]}], "+", 
  RowBox[{"10", " ", 
   RowBox[{"LogIntegral", "[", "1000", "]"}]}]}]], "Output",
 CellChangeTimes->{3.632587146111295*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"Log", "[", "x", "]"}], "]"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.632587160898141*^9, 3.6325871662954493`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"x", " ", 
   RowBox[{"Log", "[", 
    RowBox[{"Log", "[", "x", "]"}], "]"}]}], "-", 
  RowBox[{"LogIntegral", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.6325871665954666`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{"LogIntegral", "[", 
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"1", "/", "500"}], ")"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6325873251955385`*^9, 3.6325873417984877`*^9}, {
  3.632587818323744*^9, 3.6325878519716682`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Log", "[", "501", "]"}]}]], "Output",
 CellChangeTimes->{{3.6325873339050364`*^9, 3.632587342462526*^9}, {
  3.632587821358917*^9, 3.632587855088846*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{"Log", "[", 
    RowBox[{"Log", "[", "x", "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632587350148966*^9, 3.632587356220313*^9}, {
  3.632587416422756*^9, 3.632587427533392*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "EulerGamma"}], "+", 
  RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}]}]], "Output",
 CellChangeTimes->{{3.632587350336976*^9, 3.632587357661395*^9}, {
  3.6325874180228477`*^9, 3.632587429371497*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"Log", "[", "x", "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "0", ",", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632587390249259*^9, 3.632587407110224*^9}, {
  3.632587443276292*^9, 3.6325874874688196`*^9}, {3.632611224292488*^9, 
  3.63261122782069*^9}}],

Cell[BoxData[
 RowBox[{"-", "1"}]], "Output",
 CellChangeTimes->{
  3.632587488277866*^9, {3.6326112252355423`*^9, 3.6326112286817393`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"p", "[", 
   RowBox[{"n_", ",", "k_"}], "]"}], "=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", "k"}], "-", 
     RowBox[{"p", "[", 
      RowBox[{
       RowBox[{"n", "/", "j"}], ",", 
       RowBox[{"k", "-", "1"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "2", ",", "k"}], "}"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"p", "[", 
  RowBox[{"100", ",", "1"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6326842431084185`*^9, 3.632684311714342*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \[NoBreak]\\!\\(256\\)\[NoBreak] \
exceeded. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$RecursionLimit/reclim\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.632684314057476*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \[NoBreak]\\!\\(256\\)\[NoBreak] \
exceeded. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$RecursionLimit/reclim\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6326843140584764`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$RecursionLimit", "::", "reclim"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Recursion depth of \[NoBreak]\\!\\(256\\)\[NoBreak] \
exceeded. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$RecursionLimit/reclim\\\", ButtonNote -> \
\\\"$RecursionLimit::reclim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6326843140594764`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \
\[NoBreak]\\!\\(\\*StyleBox[\\($RecursionLimit :: reclim\\), \
\\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this calculation. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/stop\\\", \
ButtonNote -> \\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6326843140604763`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$IterationLimit", "::", "itlim"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iteration limit of \[NoBreak]\\!\\(4096\\)\[NoBreak] \
exceeded. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$IterationLimit/itlim\\\", ButtonNote -> \
\\\"$IterationLimit::itlim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.6326843144124966`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$IterationLimit", "::", "itlim"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iteration limit of \[NoBreak]\\!\\(4096\\)\[NoBreak] \
exceeded. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$IterationLimit/itlim\\\", ButtonNote -> \
\\\"$IterationLimit::itlim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.632684314629509*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"$IterationLimit", "::", "itlim"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Iteration limit of \[NoBreak]\\!\\(4096\\)\[NoBreak] \
exceeded. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/$IterationLimit/itlim\\\", ButtonNote -> \
\\\"$IterationLimit::itlim\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.63268431483152*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\($IterationLimit \
:: itlim\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.632684314834521*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6328535216370974`*^9, 3.6328535260323486`*^9}, 
   3.632853605852914*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.632853605147874*^9, 3.632853605162874*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.63285353008158*^9, 3.6328535406781864`*^9}, 
   3.6328536044858356`*^9}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6328536038507996`*^9, 3.6328536038577995`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6328535684317737`*^9, 3.6328536031887617`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6328536025477247`*^9, 3.6328536025617256`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", " ", 
  RowBox[{
   RowBox[{"n", "!"}], ",", "n"}], "]"}]], "Input",
 CellChangeTimes->{{3.632872212429149*^9, 3.632872214339258*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "+", "n"}], "]"}], " ", 
  RowBox[{"PolyGamma", "[", 
   RowBox[{"0", ",", 
    RowBox[{"1", "+", "n"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.632872214700279*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Grid", "[", 
   RowBox[{"Table", "[", " ", 
    RowBox[{
     RowBox[{"Integrate", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"s", "-", "1"}], ")"}]}], "/", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"Log", "[", "x", "]"}], "^", "k"}], ")"}]}], ",", "x"}], 
      "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"k", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"s", ",", 
       RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632929526425229*^9, 3.6329297550003023`*^9}, 
   3.6329297968156943`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", 
        RowBox[{"128", " ", 
         SuperscriptBox["x", "4"]}]]}], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], 
       RowBox[{"32", " ", 
        SuperscriptBox["x", "4"]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}], 
       RowBox[{"16", " ", 
        SuperscriptBox["x", "4"]}]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"], 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "4"]}]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "4"], 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "4"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["8", 
        RowBox[{"81", " ", 
         SuperscriptBox["x", "3"]}]]}], "-", 
      FractionBox[
       RowBox[{"8", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], 
       RowBox[{"27", " ", 
        SuperscriptBox["x", "3"]}]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}], 
       RowBox[{"9", " ", 
        SuperscriptBox["x", "3"]}]], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"]}], 
       RowBox[{"9", " ", 
        SuperscriptBox["x", "3"]}]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "4"], 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "3"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", 
        RowBox[{"4", " ", 
         SuperscriptBox["x", "2"]}]]}], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"], 
       SuperscriptBox["x", "2"]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "4"], 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["24", "x"]}], "-", 
      FractionBox[
       RowBox[{"24", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "x"], "-", 
      FractionBox[
       RowBox[{"12", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}], "x"], "-", 
      FractionBox[
       RowBox[{"4", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"]}], "x"], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "4"], "x"]}], 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "5"], "5"], 
     RowBox[{
      RowBox[{"24", " ", "x"}], "-", 
      RowBox[{"24", " ", "x", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{"12", " ", "x", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
      RowBox[{"4", " ", "x", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"]}], "+", 
      RowBox[{"x", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "4"]}]}], 
     RowBox[{
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["x", "2"]}], "4"], "-", 
      RowBox[{
       FractionBox["3", "2"], " ", 
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{
       FractionBox["3", "2"], " ", 
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
      RowBox[{
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "4"]}]}], 
     RowBox[{
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["x", "3"]}], "81"], "-", 
      RowBox[{
       FractionBox["8", "27"], " ", 
       SuperscriptBox["x", "3"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{
       FractionBox["4", "9"], " ", 
       SuperscriptBox["x", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
      RowBox[{
       FractionBox["4", "9"], " ", 
       SuperscriptBox["x", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"]}], "+", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["x", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "4"]}]}], 
     RowBox[{
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["x", "4"]}], "128"], "-", 
      RowBox[{
       FractionBox["3", "32"], " ", 
       SuperscriptBox["x", "4"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{
       FractionBox["3", "16"], " ", 
       SuperscriptBox["x", "4"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "-", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["x", "4"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["x", "4"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "4"]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", 
        RowBox[{"128", " ", 
         SuperscriptBox["x", "4"]}]]}], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], 
       RowBox[{"32", " ", 
        SuperscriptBox["x", "4"]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}], 
       RowBox[{"16", " ", 
        SuperscriptBox["x", "4"]}]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"], 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "4"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", 
        RowBox[{"27", " ", 
         SuperscriptBox["x", "3"]}]]}], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], 
       RowBox[{"9", " ", 
        SuperscriptBox["x", "3"]}]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"], 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "3"]}]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"], 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "3"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", 
        RowBox[{"8", " ", 
         SuperscriptBox["x", "2"]}]]}], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "2"]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}], 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "2"]}]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"], 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["6", "x"]}], "-", 
      FractionBox[
       RowBox[{"6", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "x"], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}], "x"], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"], "x"]}], 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "4"], "4"], 
     RowBox[{
      RowBox[{
       RowBox[{"-", "6"}], " ", "x"}], "+", 
      RowBox[{"6", " ", "x", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{"3", " ", "x", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
      RowBox[{"x", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"]}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["x", "2"]}], "8"]}], "+", 
      RowBox[{
       FractionBox["3", "4"], " ", 
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{
       FractionBox["3", "4"], " ", 
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"]}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"2", " ", 
         SuperscriptBox["x", "3"]}], "27"]}], "+", 
      RowBox[{
       FractionBox["2", "9"], " ", 
       SuperscriptBox["x", "3"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["x", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["x", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"]}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        RowBox[{"3", " ", 
         SuperscriptBox["x", "4"]}], "128"]}], "+", 
      RowBox[{
       FractionBox["3", "32"], " ", 
       SuperscriptBox["x", "4"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "-", 
      RowBox[{
       FractionBox["3", "16"], " ", 
       SuperscriptBox["x", "4"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["x", "4"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "3"]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"32", " ", 
         SuperscriptBox["x", "4"]}]]}], "-", 
      FractionBox[
       RowBox[{"Log", "[", "x", "]"}], 
       RowBox[{"8", " ", 
        SuperscriptBox["x", "4"]}]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"], 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "4"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", 
        RowBox[{"27", " ", 
         SuperscriptBox["x", "3"]}]]}], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], 
       RowBox[{"9", " ", 
        SuperscriptBox["x", "3"]}]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"], 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "3"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"4", " ", 
         SuperscriptBox["x", "2"]}]]}], "-", 
      FractionBox[
       RowBox[{"Log", "[", "x", "]"}], 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"], 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "x"]}], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "x", "]"}]}], "x"], "-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"], "x"]}], 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "3"], "3"], 
     RowBox[{
      RowBox[{"2", " ", "x"}], "-", 
      RowBox[{"2", " ", "x", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{"x", " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}]}], 
     RowBox[{
      FractionBox[
       SuperscriptBox["x", "2"], "4"], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["x", "2"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}]}], 
     RowBox[{
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["x", "3"]}], "27"], "-", 
      RowBox[{
       FractionBox["2", "9"], " ", 
       SuperscriptBox["x", "3"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["x", "3"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}]}], 
     RowBox[{
      FractionBox[
       SuperscriptBox["x", "4"], "32"], "-", 
      RowBox[{
       FractionBox["1", "8"], " ", 
       SuperscriptBox["x", "4"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["x", "4"], " ", 
       SuperscriptBox[
        RowBox[{"Log", "[", "x", "]"}], "2"]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"16", " ", 
         SuperscriptBox["x", "4"]}]]}], "-", 
      FractionBox[
       RowBox[{"Log", "[", "x", "]"}], 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "4"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"9", " ", 
         SuperscriptBox["x", "3"]}]]}], "-", 
      FractionBox[
       RowBox[{"Log", "[", "x", "]"}], 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "3"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"4", " ", 
         SuperscriptBox["x", "2"]}]]}], "-", 
      FractionBox[
       RowBox[{"Log", "[", "x", "]"}], 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "x"]}], "-", 
      FractionBox[
       RowBox[{"Log", "[", "x", "]"}], "x"]}], 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], "2"], 
     RowBox[{
      RowBox[{"-", "x"}], "+", 
      RowBox[{"x", " ", 
       RowBox[{"Log", "[", "x", "]"}]}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], "4"]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "3"], "9"]}], "+", 
      RowBox[{
       FractionBox["1", "3"], " ", 
       SuperscriptBox["x", "3"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "4"], "16"]}], "+", 
      RowBox[{
       FractionBox["1", "4"], " ", 
       SuperscriptBox["x", "4"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}]}]},
    {
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"4", " ", 
        SuperscriptBox["x", "4"]}]]}], 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "3"]}]]}], 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]]}], 
     RowBox[{"-", 
      FractionBox["1", "x"]}], 
     RowBox[{"Log", "[", "x", "]"}], "x", 
     FractionBox[
      SuperscriptBox["x", "2"], "2"], 
     FractionBox[
      SuperscriptBox["x", "3"], "3"], 
     FractionBox[
      SuperscriptBox["x", "4"], "4"]},
    {
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"Log", "[", "x", "]"}], "]"}], 
     RowBox[{"LogIntegral", "[", "x", "]"}], 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"3", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"4", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"-", "4"}], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", "3"}], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["x", "3"], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"x", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"Log", "[", "x", "]"}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["x", 
        RowBox[{"Log", "[", "x", "]"}]]}], "+", 
      RowBox[{"LogIntegral", "[", "x", "]"}]}], 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox[
       SuperscriptBox["x", "2"], 
       RowBox[{"Log", "[", "x", "]"}]]}], 
     RowBox[{
      RowBox[{"3", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"3", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox[
       SuperscriptBox["x", "3"], 
       RowBox[{"Log", "[", "x", "]"}]]}], 
     RowBox[{
      RowBox[{"4", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"4", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox[
       SuperscriptBox["x", "4"], 
       RowBox[{"Log", "[", "x", "]"}]]}]},
    {
     RowBox[{
      RowBox[{"8", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "4"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "+", 
      FractionBox["2", 
       RowBox[{
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{
       FractionBox["9", "2"], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "+", 
      FractionBox["3", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "3"], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "+", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", "x", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "+", 
      FractionBox["1", 
       RowBox[{"2", " ", "x", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["x", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "x", "]"}], "2"]}]]}], "-", 
      FractionBox["x", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]], "+", 
      FractionBox[
       RowBox[{"LogIntegral", "[", "x", "]"}], "2"]}], 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox[
       SuperscriptBox["x", "2"], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox[
       SuperscriptBox["x", "2"], 
       RowBox[{"Log", "[", "x", "]"}]]}], 
     RowBox[{
      RowBox[{
       FractionBox["9", "2"], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"3", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox[
       SuperscriptBox["x", "3"], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["x", "3"]}], 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{"8", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"4", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox[
       SuperscriptBox["x", "4"], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["x", "4"]}], 
       RowBox[{"Log", "[", "x", "]"}]]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["32", "3"]}], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "4"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"]}]], "+", 
      FractionBox["2", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "4"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox["8", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "4"], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["9", "2"]}], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"]}]], "+", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "3"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox["3", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "3"], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["4", "3"]}], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"]}]], "+", 
      FractionBox["1", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox["2", 
       RowBox[{"3", " ", 
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "6"]}], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"3", " ", "x", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"]}]], "+", 
      FractionBox["1", 
       RowBox[{"6", " ", "x", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox["1", 
       RowBox[{"6", " ", "x", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["x", 
        RowBox[{"3", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "x", "]"}], "3"]}]]}], "-", 
      FractionBox["x", 
       RowBox[{"6", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox["x", 
       RowBox[{"6", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]], "+", 
      FractionBox[
       RowBox[{"LogIntegral", "[", "x", "]"}], "6"]}], 
     RowBox[{
      RowBox[{
       FractionBox["4", "3"], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox[
       SuperscriptBox["x", "2"], 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"]}]], "-", 
      FractionBox[
       SuperscriptBox["x", "2"], 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}], 
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{
       FractionBox["9", "2"], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"3", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox[
       SuperscriptBox["x", "3"], 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"]}]], "-", 
      FractionBox[
       SuperscriptBox["x", "3"], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"3", " ", 
        SuperscriptBox["x", "3"]}], 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{
       FractionBox["32", "3"], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"4", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox[
       SuperscriptBox["x", "4"], 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "3"]}]], "-", 
      FractionBox[
       RowBox[{"2", " ", 
        SuperscriptBox["x", "4"]}], 
       RowBox[{"3", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox[
       RowBox[{"8", " ", 
        SuperscriptBox["x", "4"]}], 
       RowBox[{"3", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6329295382669063`*^9, 3.632929597358286*^9}, {
   3.6329296274520073`*^9, 3.6329297252065983`*^9}, 3.632929755604337*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"s", "-", "1"}], ")"}]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "^", "k"}], ")"}]}], ",", "x"}], "]"}],
   "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"s", "\[Rule]", "1"}], ",", 
    RowBox[{"x", "\[Rule]", "10"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.632929820366041*^9, 3.6329298440303946`*^9}, 
   3.6329300063086767`*^9, {3.632930098230934*^9, 3.632930106699419*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "-", "k"}]]}], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{
    RowBox[{"1", "+", "k"}], ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "10", "]"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.632929798684801*^9, 3.632929844348413*^9}, {
  3.6329300066886983`*^9, 3.6329300103349066`*^9}, {3.632930099586012*^9, 
  3.632930107040438*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"  ", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"Log", "[", "x", "]"}], 
     RowBox[{"1", "+", "k"}]], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], ")"}], 
     RowBox[{
      RowBox[{"-", "1"}], "-", "k"}]]}], "/.", 
   RowBox[{"x", "\[Rule]", "30"}]}]}]], "Input",
 CellChangeTimes->{{3.632929854542996*^9, 3.6329298803594728`*^9}, {
  3.6329300217425594`*^9, 3.632930027718901*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"-", "s"}], ")"}], 
  RowBox[{
   RowBox[{"-", "1"}], "-", "k"}]]], "Output",
 CellChangeTimes->{{3.6329298535429387`*^9, 3.6329298805984864`*^9}, {
  3.6329300221015797`*^9, 3.6329300279649153`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", "k"}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632929883087629*^9, 3.632929890230037*^9}, {
  3.632930126374544*^9, 3.632930167842916*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "1", ",", 
   RowBox[{"-", "1"}], ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{{3.6329298853427577`*^9, 3.63292989062206*^9}, {
  3.632930126688562*^9, 3.632930168233938*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "s"}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "k"}]]}], 
  RowBox[{"Gamma", "[", 
   RowBox[{
    RowBox[{"1", "-", "k"}], ",", 
    RowBox[{
     RowBox[{"-", "s"}], " ", 
     RowBox[{"Log", "[", "x", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632929905717923*^9, 3.632929968117492*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "s"}], ")"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "k"}]]}], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{
    RowBox[{"1", "-", "k"}], ",", 
    RowBox[{
     RowBox[{"-", "s"}], " ", 
     RowBox[{"Log", "[", "x", "]"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.632929906133947*^9, 3.6329299683675065`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{
    RowBox[{"1", "+", "k"}], ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "x", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6329301769474363`*^9, 3.632930183147791*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], "k"], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{
    RowBox[{"1", "+", "k"}], ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "x", "]"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.63293017875354*^9, 3.632930183382805*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"1", "/", "  ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "^", "k"}], ")"}]}], ",", "x"}], "]"}],
   "/.", 
  RowBox[{"{", 
   RowBox[{"x", "\[Rule]", "20"}], "}"}]}]], "Input",
 CellChangeTimes->{{3.6329301974676104`*^9, 3.632930200906807*^9}, {
  3.6329302328196325`*^9, 3.632930249634594*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], "k"], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{
    RowBox[{"1", "-", "k"}], ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "20", "]"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{
  3.6329302010958176`*^9, {3.632930233614678*^9, 3.632930249981614*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", "k", ")"}]}], " ", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", "x", "]"}], "^", 
        RowBox[{"(", "k", ")"}]}], ")"}], ",", "x"}], "]"}]}], ",", 
   RowBox[{"x", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6329303281380844`*^9, 3.632930476257556*^9}, {
  3.632930542112323*^9, 3.632930543880424*^9}}],

Cell[BoxData[
 RowBox[{"Gamma", "[", 
  RowBox[{
   RowBox[{"1", "+", "k"}], ",", "0"}], "]"}]], "Output",
 CellChangeTimes->{{3.6329303812491217`*^9, 3.6329304784846835`*^9}, 
   3.632930544109437*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "@", 
  RowBox[{"Gamma", "[", 
   RowBox[{"5", ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "1.01", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6329303448170385`*^9, 3.632930351810438*^9}}],

Cell[BoxData[
 RowBox[{"24.00000000001967`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.204481212575202`*^-26", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.632930345082053*^9, 3.6329303519914484`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"4.5", "+", "I"}], ")"}], "!"}]], "Input",
 CellChangeTimes->{{3.632930424817614*^9, 3.632930425330643*^9}, {
  3.6329304575624866`*^9, 3.632930459752612*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2.218928583278327`"}], "+", 
  RowBox[{"47.35583415961107`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.632930425499653*^9, 3.632930459906621*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", "  ", 
   RowBox[{
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "k"}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Log", "[", "x", "]"}], "^", "k"}], ")"}]}], ",", "x"}], 
     "]"}], ",", 
    RowBox[{"x", "\[Rule]", "1"}]}], "]"}], "/.", 
  RowBox[{"k", "\[Rule]", "7"}]}]], "Input",
 CellChangeTimes->{{3.632930488371249*^9, 3.632930501399994*^9}, {
  3.6329310977111015`*^9, 3.632931177260651*^9}, {3.6329312232992845`*^9, 
  3.632931261611476*^9}}],

Cell[BoxData["5040"], "Output",
 CellChangeTimes->{{3.6329311335511513`*^9, 3.6329311774866643`*^9}, {
  3.63293122584943*^9, 3.632931261841489*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"  ", 
  RowBox[{"-", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"1", "/", "x"}], "]"}], "^", "k"}], ")"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6329311211544423`*^9, 3.6329311211924443`*^9}, {
  3.63293118353401*^9, 3.632931216682906*^9}, {3.6329312798765206`*^9, 
  3.632931292419238*^9}, {3.6329313459252987`*^9, 3.6329313474673862`*^9}, {
  3.632931479489938*^9, 3.632931491648633*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Gamma", "[", 
     RowBox[{"1", "+", "k"}], "]"}], "-", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"1", "+", "k"}], ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "k", "]"}], ">", 
     RowBox[{"-", "1"}]}], "&&", 
    RowBox[{
     RowBox[{"Log", "[", "n", "]"}], ">", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.63293128720794*^9, 3.6329312927192554`*^9}, 
   3.632931347722401*^9, {3.6329314823971043`*^9, 3.6329314926846924`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Log", "[", 
         RowBox[{"1", "/", "x"}], "]"}], "^", "3"}], ")"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"n", "\[Rule]", "100"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632931499936107*^9, 3.632931510200694*^9}, {
  3.632931544705668*^9, 3.6329315634407396`*^9}}],

Cell[BoxData["5573.281622027465`"], "Output",
 CellChangeTimes->{{3.6329315025072546`*^9, 3.632931512014798*^9}, {
  3.6329315458387327`*^9, 3.6329315644667983`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Chop", "@", 
  RowBox[{"Gamma", "[", 
   RowBox[{"4", ",", "0", ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "100.", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632931215834858*^9, 3.63293121587386*^9}, {
  3.6329315136898937`*^9, 3.632931559920538*^9}}],

Cell[BoxData["5573.281622027467`"], "Output",
 CellChangeTimes->{{3.6329315198172445`*^9, 3.6329315601455507`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", "\[IndentingNewLine]", 
  RowBox[{"Plot", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"-", 
       RowBox[{"Log", "[", 
        FractionBox["1", "x"], "]"}]}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "0", ",", "10"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6329305022400427`*^9, 3.6329305022760444`*^9}, {
  3.6329324834243593`*^9, 3.6329325459369354`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{0, 10}, {-6.165599416155771, 6.7189135774928275`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6329325429027615`*^9, 3.632932546168948*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Log", "[", 
     RowBox[{"1", "/", "x"}], "]"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6329325422547245`*^9, 3.6329325910795174`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"ExpIntegralEi", "[", 
   RowBox[{"-", 
    RowBox[{"Log", "[", 
     FractionBox["1", "x"], "]"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.632932579140834*^9, 3.632932591327531*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "@", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{"Log", "[", "x", "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6329325369594216`*^9, 3.6329325369724226`*^9}, {
  3.632933549033309*^9, 3.6329335618640428`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"1", "-", "n", "+", 
    RowBox[{"n", " ", 
     RowBox[{"Log", "[", "n", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.632933558830869*^9, 3.632933562450076*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Log", "[", "x", "]"}], "^", "z"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632932541054656*^9, 3.632932541068657*^9}, {
  3.6329335684484196`*^9, 3.6329336156871214`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "z"}], " ", 
       RowBox[{"Gamma", "[", "z", "]"}]}], "+", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"1", "+", "z"}], ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
     RowBox[{"-", "z"}]], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "n", "]"}], "z"]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "z", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.632933579264038*^9, 3.632933616797185*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "x"}], ")"}], "^", "z"}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6329336050235114`*^9, 3.632933609425763*^9}, {
  3.632933661982769*^9, 3.632933664342904*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", "n"], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "z"}]]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "z"}]]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.6329336058125563`*^9, 3.632933610156805*^9}, 
   3.6329336656389785`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "z"}], " ", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "+", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{"1", "+", "z"}], ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
    RowBox[{"-", "z"}]], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "z"]}], "/.", 
  RowBox[{"n", "\[Rule]", "100"}]}]], "Input",
 CellChangeTimes->{{3.6329336314070206`*^9, 3.632933632714095*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"-", "z"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "z"}], " ", 
     RowBox[{"Gamma", "[", "z", "]"}]}], "+", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"1", "+", "z"}], ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "100", "]"}]}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6329336301479483`*^9, 3.632933632894106*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"-", "1"}], "+", 
      SuperscriptBox[
       RowBox[{"(", 
        FractionBox["1", "n"], ")"}], 
       RowBox[{
        RowBox[{"-", "1"}], "+", "z"}]]}], 
     RowBox[{
      RowBox[{"-", "1"}], "+", "z"}]]}], "]"}], "/.", 
  RowBox[{"n", "\[Rule]", "200"}]}]], "Input",
 CellChangeTimes->{{3.632933679335762*^9, 3.63293370657532*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["200", 
     RowBox[{"1", "-", "z"}]]}], 
   RowBox[{
    RowBox[{"-", "1"}], "+", "z"}]]}]], "Output",
 CellChangeTimes->{{3.6329336780666895`*^9, 3.6329337068993387`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", 
     RowBox[{"1", "/", "x"}], "]"}], "^", "z"}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.632933792108212*^9, 3.632933799173616*^9}}],

Cell[BoxData[
 RowBox[{"Gamma", "[", 
  RowBox[{
   RowBox[{"1", "+", "z"}], ",", 
   RowBox[{"Log", "[", 
    FractionBox["1", "x"], "]"}]}], "]"}]], "Output",
 CellChangeTimes->{3.632933799396629*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"-", "1"}]}], " ", 
    RowBox[{
     RowBox[{"Log", "[", "x", "]"}], "^", 
     RowBox[{"-", "1"}]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{
  3.6329338212448783`*^9, {3.6329338829264064`*^9, 3.6329338889327497`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Log", "[", "x", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.6329338891557627`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"x", "^", 
       RowBox[{"(", 
        RowBox[{"s", "-", "1"}], ")"}]}], 
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "^", 
       RowBox[{"(", 
        RowBox[{"k", "-", "1"}], ")"}]}]}], ",", "x"}], "]"}], "/.", 
   RowBox[{"{", 
    RowBox[{"x", "\[Rule]", "10"}], "}"}]}]}]], "Input",
 CellChangeTimes->{{3.632933985019246*^9, 3.632934004165341*^9}, {
  3.632934068180002*^9, 3.6329340696860886`*^9}, {3.632934140731152*^9, 
  3.6329341940051994`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "s"}], ")"}], 
    RowBox[{"-", "k"}]]}], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{"k", ",", 
    RowBox[{
     RowBox[{"-", "s"}], " ", 
     RowBox[{"Log", "[", "10", "]"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.632933995555848*^9, 3.632934004416355*^9}, 
   3.6329340699301023`*^9, {3.632934141058171*^9, 3.6329341942382126`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"(", 
     RowBox[{"x", " ", 
      RowBox[{"Log", "[", "x", "]"}]}], ")"}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6329342017216406`*^9, 3.6329342476702685`*^9}, {
  3.632934298869197*^9, 3.6329343029374294`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", 
  RowBox[{"Log", "[", "x", "]"}], "]"}]], "Output",
 CellChangeTimes->{3.6329342479592853`*^9, 3.6329343031734433`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"k", "-", "1"}], ")"}]}], " ", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"E", "^", "x"}], ")"}], "^", 
     RowBox[{"(", "s", ")"}]}]}], ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.632934219289645*^9, 3.632934219308646*^9}, {
  3.63293440853747*^9, 3.632934440584303*^9}, {3.6329344714910707`*^9, 
  3.6329344862319136`*^9}, {3.632934644070942*^9, 3.6329346470951147`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{
     RowBox[{"-", "s"}], " ", "x"}]]}], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    SuperscriptBox["\[ExponentialE]", "x"], ")"}], "s"], " ", 
  SuperscriptBox["x", "k"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "s"}], " ", "x"}], ")"}], 
   RowBox[{"-", "k"}]], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{"k", ",", 
    RowBox[{
     RowBox[{"-", "s"}], " ", "x"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6329344303317165`*^9, 3.632934440798315*^9}, {
   3.6329344718890934`*^9, 3.632934486503929*^9}, 3.632934647384131*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "s"}], " ", "x"}]]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      SuperscriptBox["\[ExponentialE]", "x"], ")"}], "s"], " ", 
    SuperscriptBox["x", "k"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], " ", "x"}], ")"}], 
     RowBox[{"-", "k"}]], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"k", ",", 
      RowBox[{
       RowBox[{"-", "s"}], " ", "x"}]}], "]"}]}], "/.", 
   RowBox[{"x", "\[Rule]", "10"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632934443248455*^9, 3.632934453106019*^9}, 
   3.632934496698512*^9, 3.6329346847402678`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "s"}], ")"}], 
    RowBox[{"-", "k"}]]}], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{"k", ",", 
    RowBox[{
     RowBox[{"-", "10"}], " ", "s"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.632934444436523*^9, 3.632934453417037*^9}, 
   3.632934496959527*^9, 3.632934685223295*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"E", "^", "x"}], ")"}], "^", 
     RowBox[{"(", "0", ")"}]}], 
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"0", "-", "1"}], ")"}]}]}], " ", ",", "x"}], "]"}]], "Input",
 CellChangeTimes->{{3.6329345813753557`*^9, 3.632934629406103*^9}, {
  3.6329347202142963`*^9, 3.6329347645928345`*^9}, {3.632934802655012*^9, 
  3.6329348029410286`*^9}, {3.6329348493096805`*^9, 3.6329348562690783`*^9}, {
  3.632934896605386*^9, 3.6329348970764127`*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.6329347231274633`*^9, 3.6329347650608616`*^9}, 
   3.6329348032230444`*^9, {3.632934851947831*^9, 3.632934856492091*^9}, 
   3.632934897263423*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "s"}], " ", "x"}]]}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     SuperscriptBox["\[ExponentialE]", "x"], ")"}], "s"], " ", 
   SuperscriptBox["x", "k"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "s"}], " ", "x"}], ")"}], 
    RowBox[{"-", "k"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"k", ",", 
     RowBox[{
      RowBox[{"-", "s"}], " ", "x"}]}], "]"}]}], "/.", 
  RowBox[{"s", "\[Rule]", 
   RowBox[{"-", "1"}]}]}]], "Input",
 CellChangeTimes->{{3.6329346287410645`*^9, 3.6329346287580657`*^9}, {
  3.6329352433162165`*^9, 3.63293525719501*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Gamma", "[", 
   RowBox[{"k", ",", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{3.6329352451013184`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Limit", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"k", ",", "x"}], "]"}]}], "+", 
     RowBox[{"Gamma", "[", 
      RowBox[{"k", ",", "0"}], "]"}]}], ",", 
    RowBox[{"x", "\[Rule]", "Infinity"}]}], "]"}], "/.", 
  RowBox[{"k", "\[Rule]", "8"}]}]], "Input",
 CellChangeTimes->{{3.632934589829839*^9, 3.63293458984584*^9}, {
  3.6329352611692376`*^9, 3.632935296809276*^9}}],

Cell[BoxData["5040"], "Output",
 CellChangeTimes->{{3.632935280388337*^9, 3.632935297043289*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"-", "2"}]}], " ", 
    RowBox[{
     RowBox[{"Log", "[", " ", "x", "]"}], "^", 
     RowBox[{"(", 
      RowBox[{"k", "-", "1"}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632935430260909*^9, 3.6329354825358987`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", "k", "]"}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "k", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.632935442376602*^9, 3.6329354835229554`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", "  ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", " ", "x", "]"}]}], ")"}], "^", "k"}], "/", 
    RowBox[{"(", 
     RowBox[{"x", "^", "2"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632936317523658*^9, 3.6329363425070868`*^9}, {
  3.632936404601638*^9, 3.632936428864026*^9}, {3.632936536535184*^9, 
  3.6329366301985416`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "k"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "k"}], "]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"1", "+", "k"}], ",", 
        RowBox[{"Log", "[", "n", "]"}]}], "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "k", "]"}], ">", 
     RowBox[{"-", "1"}]}], "&&", 
    RowBox[{
     RowBox[{"Log", "[", "n", "]"}], ">", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.632936333317561*^9, 3.632936343778159*^9}, {
  3.6329364063527384`*^9, 3.6329364325312357`*^9}, {3.6329365377282524`*^9, 
  3.632936631127595*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6329363232069826`*^9, 3.632936323232984*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "^", 
       RowBox[{"(", 
        RowBox[{"k", "-", "1"}], ")"}]}], "/", 
      RowBox[{"x", "^", "2"}]}], ")"}], " ", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"Log", "[", "y", "]"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"-", "k"}], ")"}]}], "/", 
     RowBox[{"(", 
      RowBox[{"y", "^", "2"}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "Infinity"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"y", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632937264194804*^9, 3.6329373289235067`*^9}, {
  3.632937374689124*^9, 3.632937475832909*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Gamma", "[", 
     RowBox[{"1", "-", "k"}], "]"}], " ", 
    RowBox[{"Gamma", "[", "k", "]"}]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "k", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.632937268794067*^9, 3.6329373327237234`*^9}, {
  3.6329373838576484`*^9, 3.632937477670014*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Pi", "/", 
  RowBox[{"Sin", "[", " ", 
   RowBox[{"Pi", " ", "3.2"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.632937325195293*^9, 3.6329373669376802`*^9}, {
  3.6329374664153705`*^9, 3.6329374699775743`*^9}}],

Cell[BoxData[
 RowBox[{"-", "5.344796660577979`"}]], "Output",
 CellChangeTimes->{3.632937470167585*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "x", "]"}], "^", 
      RowBox[{"(", 
       RowBox[{"k", "-", "1"}], ")"}]}], "/", 
     RowBox[{"x", "^", "2"}]}], ")"}], " ", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Log", "[", "y", "]"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"-", "k"}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"y", "^", "2"}], ")"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632937366086632*^9, 3.632937366101633*^9}, {
  3.6329375111219273`*^9, 3.632937513544066*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"Log", "[", "x", "]"}], 
    RowBox[{
     RowBox[{"-", "1"}], "+", "k"}]], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "y", "]"}], 
    RowBox[{"-", "k"}]]}], 
  RowBox[{
   SuperscriptBox["x", "2"], " ", 
   SuperscriptBox["y", "2"]}]]], "Output",
 CellChangeTimes->{{3.632937511434945*^9, 3.6329375137740793`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6329373533749046`*^9, 3.6329373637364974`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Log", "[", "x", "]"}], "^", "k"}], "/", 
    RowBox[{"x", "^", "2"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632938074800168*^9, 3.632938100379631*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "k"}], "]"}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "k", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.632938081609557*^9, 3.6329381014706936`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.632937364519542*^9, 3.632937364536543*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"E", "^", "x"}], ")"}], "^", "s"}], " ", 
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"k", "-", "1"}], ")"}]}]}], ",", "x"}], "]"}], "/.", 
  RowBox[{"x", "\[Rule]", "10"}]}]], "Input",
 CellChangeTimes->{{3.632937164312091*^9, 3.6329371921236815`*^9}, {
  3.6329645473693123`*^9, 3.6329646089748363`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "s"}], ")"}], 
    RowBox[{"-", "k"}]]}], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{"k", ",", 
    RowBox[{
     RowBox[{"-", "10"}], " ", "s"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.632964604434576*^9, 3.632964609251852*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Expand", "@", 
     RowBox[{"Integrate", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"s", "-", "1"}], ")"}]}], " ", 
        RowBox[{
         RowBox[{"Log", "[", "x", "]"}], "^", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}]}], ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.632937191520647*^9, 3.632937191534648*^9}, {
  3.6329646123470287`*^9, 3.6329646187743964`*^9}, {3.632964658543671*^9, 
  3.6329646968218603`*^9}, {3.632965428520711*^9, 3.6329654991937532`*^9}, {
  3.632965540673126*^9, 3.632965542911254*^9}, {3.6329655921860723`*^9, 
  3.632965594486204*^9}, {3.632965741872634*^9, 3.632965744583789*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"], " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "+", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{
       FractionBox["1", "2"], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"2", " ", "x", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "+", 
      FractionBox["1", 
       RowBox[{"2", " ", "x", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["x", 
        RowBox[{"2", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "x", "]"}], "2"]}]]}], "-", 
      FractionBox["x", 
       RowBox[{"2", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]], "+", 
      FractionBox[
       RowBox[{"LogIntegral", "[", "x", "]"}], "2"]}], 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox[
       SuperscriptBox["x", "2"], 
       RowBox[{"2", " ", 
        SuperscriptBox[
         RowBox[{"Log", "[", "x", "]"}], "2"]}]], "-", 
      FractionBox[
       SuperscriptBox["x", "2"], 
       RowBox[{"Log", "[", "x", "]"}]]}]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{
        SuperscriptBox["x", "2"], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox["1", 
       RowBox[{"x", " ", 
        RowBox[{"Log", "[", "x", "]"}]}]]}], 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"Log", "[", "x", "]"}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["x", 
        RowBox[{"Log", "[", "x", "]"}]]}], "+", 
      RowBox[{"LogIntegral", "[", "x", "]"}]}], 
     RowBox[{
      RowBox[{"2", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], "-", 
      FractionBox[
       SuperscriptBox["x", "2"], 
       RowBox[{"Log", "[", "x", "]"}]]}]},
    {
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{
       RowBox[{"-", "2"}], " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
     RowBox[{"Log", "[", 
      RowBox[{"Log", "[", "x", "]"}], "]"}], 
     RowBox[{"LogIntegral", "[", "x", "]"}], 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"2", " ", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}]},
    {
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]]}], 
     RowBox[{"-", 
      FractionBox["1", "x"]}], 
     RowBox[{"Log", "[", "x", "]"}], "x", 
     FractionBox[
      SuperscriptBox["x", "2"], "2"]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", 
        RowBox[{"4", " ", 
         SuperscriptBox["x", "2"]}]]}], "-", 
      FractionBox[
       RowBox[{"Log", "[", "x", "]"}], 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "x"]}], "-", 
      FractionBox[
       RowBox[{"Log", "[", "x", "]"}], "x"]}], 
     FractionBox[
      SuperscriptBox[
       RowBox[{"Log", "[", "x", "]"}], "2"], "2"], 
     RowBox[{
      RowBox[{"-", "x"}], "+", 
      RowBox[{"x", " ", 
       RowBox[{"Log", "[", "x", "]"}]}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["x", "2"], "4"]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["x", "2"], " ", 
       RowBox[{"Log", "[", "x", "]"}]}]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.632964619069413*^9, {3.632964666499126*^9, 3.6329646970828753`*^9}, {
   3.6329654292787547`*^9, 3.632965499566775*^9}, 3.6329655433822813`*^9, 
   3.632965594818223*^9, 3.6329657451668224`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.632937170271432*^9, 3.632937190713601*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6329371900325623`*^9, 3.632937190048563*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Expand", "@", 
     RowBox[{"Integrate", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"E", "^", "x"}], ")"}], "^", "s"}], " ", 
        RowBox[{"x", "^", 
         RowBox[{"(", 
          RowBox[{"k", "-", "1"}], ")"}]}]}], ",", "x"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", 
      RowBox[{"-", "2"}], ",", "2"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.63296555927219*^9, 3.632965587670814*^9}, {
  3.6329656283101387`*^9, 3.632965648981321*^9}, {3.632965733387149*^9, 
  3.63296573569328*^9}, {3.632967188577381*^9, 3.6329671893094225`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "x"}]], 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "2"]}]]}], "+", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "x"}]], "x"], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "x"}], "]"}]}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "x"}]], 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "2"]}]]}], "+", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], 
       RowBox[{"2", " ", "x"}]], "+", 
      FractionBox[
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"-", "x"}], "]"}], "2"]}], 
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{"2", " ", 
        SuperscriptBox["x", "2"]}]]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", "x"], 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "2"]}]]}], "-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", "x"], 
       RowBox[{"2", " ", "x"}]], "+", 
      FractionBox[
       RowBox[{"ExpIntegralEi", "[", "x", "]"}], "2"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]], 
        RowBox[{"2", " ", 
         SuperscriptBox["x", "2"]}]]}], "-", 
      FractionBox[
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "x"}]], "x"], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}]}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", "2"}], " ", "x"}]], "x"]}], "-", 
      RowBox[{"2", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "x"}], "]"}]}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", "x"}]], "x"]}], "-", 
      RowBox[{"ExpIntegralEi", "[", 
       RowBox[{"-", "x"}], "]"}]}], 
     RowBox[{"-", 
      FractionBox["1", "x"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", "x"], "x"]}], "+", 
      RowBox[{"ExpIntegralEi", "[", "x", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]], "x"]}], "+", 
      RowBox[{"2", " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"2", " ", "x"}], "]"}]}]}]},
    {
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{
       RowBox[{"-", "2"}], " ", "x"}], "]"}], 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"-", "x"}], "]"}], 
     RowBox[{"Log", "[", "x", "]"}], 
     RowBox[{"ExpIntegralEi", "[", "x", "]"}], 
     RowBox[{"ExpIntegralEi", "[", 
      RowBox[{"2", " ", "x"}], "]"}]},
    {
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}]]}], 
     RowBox[{"-", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]]}], "x", 
     SuperscriptBox["\[ExponentialE]", "x"], 
     FractionBox[
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"2", " ", "x"}]], "2"]},
    {
     RowBox[{
      RowBox[{
       RowBox[{"-", 
        FractionBox["1", "4"]}], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "x"}]]}], "-", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "2"}], " ", "x"}]], " ", "x"}]}], 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]]}], "-", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", "x"}]], " ", "x"}]}], 
     FractionBox[
      SuperscriptBox["x", "2"], "2"], 
     RowBox[{
      RowBox[{"-", 
       SuperscriptBox["\[ExponentialE]", "x"]}], "+", 
      RowBox[{
       SuperscriptBox["\[ExponentialE]", "x"], " ", "x"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox[
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"2", " ", "x"}]], "4"]}], "+", 
      RowBox[{
       FractionBox["1", "2"], " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"2", " ", "x"}]], " ", "x"}]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.632965575585123*^9, 3.6329655880768375`*^9}, {
   3.632965631684332*^9, 3.632965649189333*^9}, 3.632965735907293*^9, 
   3.6329671914315443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"ExpIntegralEi", "[", 
       RowBox[{
        RowBox[{"-", "2"}], " ", "x"}], "]"}], ",", 
      RowBox[{"ExpIntegralEi", "[", 
       RowBox[{"-", "x"}], "]"}], ",", 
      RowBox[{"Log", "[", "x", "]"}], ",", 
      RowBox[{"ExpIntegralEi", "[", "x", "]"}], ",", 
      RowBox[{"ExpIntegralEi", "[", 
       RowBox[{"2", " ", "x"}], "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.632965874086196*^9, 3.632966013358162*^9}, {
  3.63301554632758*^9, 3.633015551119587*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
V2CSOxU/htfM4X9pu6sE
     "]], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1: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
UtBa
     "]], LineBox[CompressedData["
1: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
u8Ynd45nBMSFNq/s/6rA7LEPxrcyeqE+10wj+0U1RqbM0Gqy2wBnf4pWCY5U
Y6zrkw657HWQ1b2tFiP/E7vpYeNHo/oTIrbfYq/Gf2IjXKS3TTAAS6xOyUql
FvuyVcf/YDgBDhskpY4t12OiLBcv/IttmNwYEZefYSvmPHvSq3KqDxMvubEs
+aUVy1VVwOdX+jGB8K/VI9ut2Oz9ly9hfwCjic+Ui7vShhUdI9B5MQxjezqG
A4cLbRjXs5pK9vBRbDDruzBIdWBJzW/PWwVPYrHOptUqhV2YNncKC5XoPHZq
6ce2UmUvFnmTpcy+dh27mNjbrG04ht34yM/efYsYP3eFiWQ9/w8WNu1Dgnao
8FCzHl/JwjnMqkfyWsk8I16rfYJOh2kZkw/ovBE5yIIzi4+y3udcxk5l+U1+
X2bBzemSud8JLGMtlVYknWSs+E6jqOxvpWUsbwJJqouz4qIXz94yv7OMTRDT
cNT4sOJh/9364py3jPE4mMff52fDjc58OvfGYAW7oMxX0eXJjs/zsHh3RK5i
1qHXrGMMOfAznvEuFUmrmI2rpaigMwfu3yVmlfVtFXsqQXmp4jkHzvr8/OWQ
ylWsx856ULiQA1edcz+u9XcV84oqs2th5cRDC/oKKhTXsMeqXStuvZy41KW4
xazfa1hQYOFqnSMX7uZ6+nYo6wbmG977i3yaG2elXiw14NnA+FYVmZ9scuNF
sTnsXKIbGGfUy2QCBQ++16DYlqm2gcUQFe1LCPDg/jyaWIPjBhaVNigpZcWD
h7RYniCr2sBMxNTONk7y4ClCMb0e9zaxRX3BUy3LvHjPAKOedd0WRt75QK/x
DD+u9crqt2vHFnacSYK1WYsfL1UsMX06sIXdzcxRGDLmx+Mi7jjELW1hmzKP
u8T9+HFbnYKAPvZtLMXTTvlVAz++U3WrUNtuG3vE8EsIMxfAOTNSOBWod7D6
Fo0b1B8F8ZCbuwnnmHewudjKc+yZgjiBUkf4OtcOZiSxlK+ABPEJy205F+kd
7HxasGXGtCD+levy1QyjHayMXufQRkkIVw1f9juZsYOZcWqGnB8Vws0fn/1D
cXkXm+UQVOJWEcFFLOt+LRjsYu2WY3+s9EXwVe3r1b9u72Kd2/3kVXdF8EA+
x/hE912M/jwiro4RwTNbo25hibvYqQCLkXGi0/g2/27rw51djEZYgTK36TQe
3lFcNJm2h5WIBZ++7iaGG5edS23K3cPq6RihLEwM509rf59bvofl9ETqqmeK
4UVPZu77de1hy/anF6LHxfAhoWNiJwj7WL1otlXUNXFcxOdR/PUb+1jr3lrN
7zMSeNVphZdVZAeYgGaqdnSwJG4qcT1xmeEA6wqS9mWPksS3pF1KTx4/wG6c
YsASvkjiokoZC57iB9jyWemYoRpJ/J3myWuyNw4wGt1S9z0iKdzaioIzOe0A
C1fXftTrIYVTxvZ8Dbx0iB31eEj81F0aT0hYq8nTP8RiywxHmp9L42dTjoyM
mR1iD/A9OaGP0rjz10tMmOshdrxN7SVNsTTe+68CbkYfYgVddSkhu9J4+u9U
zHbhEFOc4XN4/1QGF6AqnU7SJOByyaaNXHGy+EqtuH3CFQJ+yb3uxYkcWbw8
MH42Vo+Az5nrqIlVy+IGpM8XIo0J+N7v2DGfaVn82aHuWpgzAb9amzq2KiWH
T6z/OfT6SMDzMvNKBOrk8ISxo2z60wQ8e+rSjBKxAu4UH/hRb56Ar+h/CPdi
VcCVzLeP6awQcLsf6E27iALeMTjEeWmPgP/j5lj+NQWcqPcLrxojEf6iJZ7a
PkUBN2/FxMXOEOFvvE5/Cr96Br8pc/tEgAoRfiTpjqeKzRn8f0kbHrk=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  ImageSize->{753., Automatic},
  PlotRange->{{-4, 4}, {-7.392720674168285, 24.40328189070357}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6329659747219524`*^9, 3.6329660139051933`*^9}, 
   3.633015552291589*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6329660517763596`*^9, 3.6329660708334494`*^9}, 
   3.632966102291249*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Integrate", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{"s", "-", "1"}], ")"}]}], " ", 
       RowBox[{
        RowBox[{"Log", "[", "x", "]"}], "^", 
        RowBox[{"(", 
         RowBox[{"k", "-", "1"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", 
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6329661149059706`*^9, 3.632966192752423*^9}, {
  3.632966533126891*^9, 3.632966558335333*^9}, {3.6329666186307817`*^9, 
  3.632966706295796*^9}, {3.6329668315099573`*^9, 3.6329668418445487`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     FractionBox["1", "6"], 
     FractionBox["1", "5"], 
     FractionBox["1", "4"], 
     FractionBox["1", "3"], 
     FractionBox["1", "2"], "1"},
    {
     FractionBox["1", "36"], 
     FractionBox["1", "25"], 
     FractionBox["1", "16"], 
     FractionBox["1", "9"], 
     FractionBox["1", "4"], "1"},
    {
     FractionBox["1", "108"], 
     FractionBox["2", "125"], 
     FractionBox["1", "32"], 
     FractionBox["2", "27"], 
     FractionBox["1", "4"], "2"},
    {
     FractionBox["1", "216"], 
     FractionBox["6", "625"], 
     FractionBox["3", "128"], 
     FractionBox["2", "27"], 
     FractionBox["3", "8"], "6"},
    {
     FractionBox["1", "324"], 
     FractionBox["24", "3125"], 
     FractionBox["3", "128"], 
     FractionBox["8", "81"], 
     FractionBox["3", "4"], "24"},
    {
     FractionBox["5", "1944"], 
     FractionBox["24", "3125"], 
     FractionBox["15", "512"], 
     FractionBox["40", "243"], 
     FractionBox["15", "8"], "120"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.632966548037744*^9, 3.6329665602844443`*^9}, {
  3.632966621338937*^9, 3.6329667087739377`*^9}, {3.632966838506358*^9, 
  3.632966844685711*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Gamma", "[", "k", "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "s"}], ")"}], "^", 
      RowBox[{"-", "k"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "6"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"s", ",", 
      RowBox[{"-", "6"}], ",", 
      RowBox[{"-", "1"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6329660997541037`*^9, 3.632966100755161*^9}, {
  3.6329668696511393`*^9, 3.632967023292927*^9}, {3.632967124347707*^9, 
  3.632967125725786*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     FractionBox["1", "6"], 
     FractionBox["1", "5"], 
     FractionBox["1", "4"], 
     FractionBox["1", "3"], 
     FractionBox["1", "2"], "1"},
    {
     FractionBox["1", "36"], 
     FractionBox["1", "25"], 
     FractionBox["1", "16"], 
     FractionBox["1", "9"], 
     FractionBox["1", "4"], "1"},
    {
     FractionBox["1", "108"], 
     FractionBox["2", "125"], 
     FractionBox["1", "32"], 
     FractionBox["2", "27"], 
     FractionBox["1", "4"], "2"},
    {
     FractionBox["1", "216"], 
     FractionBox["6", "625"], 
     FractionBox["3", "128"], 
     FractionBox["2", "27"], 
     FractionBox["3", "8"], "6"},
    {
     FractionBox["1", "324"], 
     FractionBox["24", "3125"], 
     FractionBox["3", "128"], 
     FractionBox["8", "81"], 
     FractionBox["3", "4"], "24"},
    {
     FractionBox["5", "1944"], 
     FractionBox["24", "3125"], 
     FractionBox["15", "512"], 
     FractionBox["40", "243"], 
     FractionBox["15", "8"], "120"}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.6329668799887304`*^9, 3.63296702351894*^9}, 
   3.63296712632582*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"s", "-", "1"}], ")"}]}], " ", 
    RowBox[{
     RowBox[{"Log", "[", "x", "]"}], "^", 
     RowBox[{"(", 
      RowBox[{"k", "-", "1"}], ")"}]}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6329671066026917`*^9, 3.6329671092988462`*^9}, {
  3.632967158297649*^9, 3.632967173040492*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "s"}], ")"}], 
     RowBox[{"-", "k"}]], " ", 
    RowBox[{"Gamma", "[", "k", "]"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "s", "]"}], "<", "0"}], "&&", 
    RowBox[{
     RowBox[{"Re", "[", "k", "]"}], ">", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.632967101215384*^9, 3.6329671142811313`*^9}, {
  3.6329671647420177`*^9, 3.63296717789977*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6329690605124493`*^9, 3.632969191110919*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6329691903338747`*^9, 3.632969190365876*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"Log", "[", "x", "]"}], "^", "z"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.633006983910647*^9, 3.633007012922306*^9}, {
  3.6330072247534227`*^9, 3.6330072302117343`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"-", "z"}], " ", 
       RowBox[{"Gamma", "[", "z", "]"}]}], "+", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"1", "+", "z"}], ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
     RowBox[{"-", "z"}]], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "n", "]"}], "z"]}], ",", 
   RowBox[{
    RowBox[{"Re", "[", "z", "]"}], ">", 
    RowBox[{"-", "1"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.633006995035283*^9, 3.633007014304385*^9}, {
  3.6330072263075113`*^9, 3.6330072312577944`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Log", "@", 
       RowBox[{"Log", "@", "x"}]}], ",", 
      RowBox[{"LogIntegral", "[", "x", "]"}]}], "}"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", 
     RowBox[{"-", "4"}], ",", "4"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.633007366960556*^9, 3.6330074163853827`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
6Ku5Kf8Dnt6HsA==
     "]], LineBox[CompressedData["
1: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
YSUYjM/OUmT/0BGXzFEa/ga/T6Q+
     "]], LineBox[CompressedData["
1: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
     "]], LineBox[CompressedData["
1:eJwVjH0803kcwGfafrWyX3SII/QghbpKV4TPt1y9qkVaD1y789RxF5OHE3UP
FbkepKVyXQ+npmm18tiFucZ3I8JdeUrEQpQeCL9tZjbluj/er/c/79fbISyG
G06n0Wghn/jf5YOS3NjHI2BGMseHzI3l3TcHm5Y0jUAwV38/b5wub3PjZrzs
HwHWChO56WK6fLshNQZTn/rCAAanzkjeoCj1uzwxArm/1pWI+Ubyh362Jv5m
FNTj4BdRFTT5Z0teWMTbUJDSYyYVxtHkISY37DMdKShYt+BczEKaXP+Pi1u7
BwWxK/6YF+A2iV02efJC9lBwHYtnc7/4gA840cJToimQFgR6OUsncDXxYF9O
0qffpUYzZ58JHFTDSXlzigIfR5sEbagBZ/jwJLH3KBix2F5ZXzGOlXPt/jpX
QYFb8hWzR7xxvIjeJ7tXS8EqsOoZ0OtwpTyyUaekYCVnh8QBdHjU66exIwwV
qMdeZy99rsW7V19af3aXCtzEAk1CqAaLLb/d+leICsza/nTDlhqs1tp/3Rqp
Ag/6oTSXBjVOL77FtzqsgmcvYSFnrRrj5dLz2TdVkOxuX3l7mQrPd217UaRT
wdy1WJnvOYJjZ1wZaKGr4clXy3hnjEZw+UDQ6OgMNXxIlBEcwTDedbt/qoeD
Gr5/bCmU3xrCJxZql1ZuUgO7LeXHpe8H8XsH80PNl9XA8hXNEuS9xat/zo5T
5Kih7OuWhWjLW5zyxDW8MF8NCnLe+56BN9ji+IYtgko1TMtUVnS4vsHeg0nW
m9+pweifa8hV1o/PlHSUKNw1cLJozpDkYx9exhEOF7ZrwFqw4mQxswv/kuPS
d61XAzNnoc9N457jmg/Sp4JBDbCUhcpEpRLvLmwq59NGgRlZHO5f0olTzI3T
nZxGoUqzz/bR/me4pTvcSZg0CnSFK1dh34r3JziHnrHQwtnoaumwQz22YA3L
djlo4eff60S+lnVYeu3u7DkuWujkv6v2YNfiiXr3xty1WsinLnnn0WpwisNG
qOdrQS6a9TxsTIEFj7+zZVRp4XR7t3fV1ntY7HT12U8xY5C/3vqJ2O46tCln
ciNqddD1scdT2PUYNp8Kb09o1kGse+u1RRcaQOb+d9BRpQ44680/pjo2gvDC
nijhiA4GrhYpIpWN8IN/SWrH7HFwLogfDf6qGfRVvFK/vePga1pInWS0gs0d
sc0qlh6y1siqVm7rgJCDnq+JLQZQu55VnTLvhcXf1bYO7TKAqchN7+vdC2q/
HQ9aQw3gGdVVQkX0wrH5/GxRkgF0J8nl3aW9kNtwhQciA7BNM1BgYB+MLzA0
JOoNECll+FPnX8K55jLpq1sTIOFpVlmO9UOV86q0KsZHiD20pzomcQAcp8ne
5Gykoaedy7vHj1NgK4tazzhhhFTN6/Yc7dIATU+XxPfSUcSOYk7dIh2MbSsP
ql4wBdkwBDt3T+qh0y348wWpDJSWlTGm7/wAsQEzTecqmaiSa50VCDRklfky
cIrtVBQhYeaE7TVC+TzhTfWBaWh2yNMl5ll0FOB1eGNtOQvVLDXdVltgjIqC
oud6TExHAfZl/g/vTkE6lo9x2U4TlGyceixTwUDcpjVf2l5ko6Hrv52tKGYi
1prpClkWG7nwow8MlzGRIqeD842Ijf5+lfavXQUTfXHgYOiVfDbCr+LLD9Uw
EduuNN2qmo1WJKC6lW1MVMdf3meuYqPgX49UntAxEZq6KIO9hUSuScmTVR4E
0sXprPO3kWjayv3T+7wJVND58IZvAIk++/dGupEPgeYURNxPDyNRUundYU8O
gSZ25vSzDpJIddwR8ngEKhXZeRFiEvHLfFYn/EKgfSbDD8V3SDTptfde2hEC
OSZVcDcUkcjY77REmEqgzM3f/vCbjEQdbfcn69MJFE9dPm/cQqIZq83DrLII
tJgXOUfUTqK4jnO5ztkEevHAXbKui0TXU3vivG4QyP9ie0XyWxL5ypqig/MI
NJV+a5PDMImEj17nxBQRCEclPZFrSNQydDfgcDGBEls3BIfoSXSUxj8mKCPQ
ErB4NzlJogwZZ1lWOYH+Aw7F/Mc=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-4, 4}, {-2.3857097105955143`, 2.967584977268025}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6330073775251603`*^9, 3.6330074168364086`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "s"}], ")"}], "^", 
       RowBox[{"-", "k"}]}]}], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{"k", ",", 
       RowBox[{
        RowBox[{"-", "s"}], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]}], "]"}]}], ",", "k"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.633014459128721*^9, 3.6330145421968627`*^9}, {
  3.633014586957945*^9, 3.6330146147279935`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "s"}], ")"}], 
   RowBox[{"-", "k"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{"k", ",", 
       RowBox[{
        RowBox[{"-", "s"}], " ", 
        RowBox[{"Log", "[", "x", "]"}]}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"-", "s"}], "]"}], "-", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "s"}], " ", 
         RowBox[{"Log", "[", "x", "]"}]}], "]"}]}], ")"}]}], "-", 
    RowBox[{"MeijerG", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "k"}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"Log", "[", "x", "]"}]}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6330145049037986`*^9, 3.6330145437518654`*^9}, {
  3.6330145882619467`*^9, 3.6330146164979973`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "s"}], ")"}], "^", 
       RowBox[{"-", "k"}]}]}], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{"k", ",", 
       RowBox[{
        RowBox[{"-", "s"}], " ", "x"}]}], "]"}]}], ",", "k"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.633014569095913*^9, 3.633014605316978*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "s"}], ")"}], 
   RowBox[{"-", "k"}]], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{"k", ",", 
       RowBox[{
        RowBox[{"-", "s"}], " ", "x"}]}], "]"}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Log", "[", 
        RowBox[{"-", "s"}], "]"}], "-", 
       RowBox[{"Log", "[", 
        RowBox[{
         RowBox[{"-", "s"}], " ", "x"}], "]"}]}], ")"}]}], "-", 
    RowBox[{"MeijerG", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0", ",", "k"}], "}"}], ",", 
        RowBox[{"{", "}"}]}], "}"}], ",", 
      RowBox[{
       RowBox[{"-", "s"}], " ", "x"}]}], "]"}]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.6330145749749236`*^9, 3.633014607034981*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", 
       RowBox[{"1", "/", "x"}], "]"}], "^", 
      RowBox[{"(", 
       RowBox[{"z", "-", "1"}], ")"}]}], " ", 
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"s", "-", "1"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6330157032876177`*^9, 3.6330157931207757`*^9}, {
  3.6330159575040574`*^9, 3.6330159747310915`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "z"]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "s"}], ")"}], 
     RowBox[{"-", "z"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Gamma", "[", "z", "]"}]}], "+", 
      RowBox[{"Gamma", "[", 
       RowBox[{"z", ",", 
        RowBox[{
         RowBox[{"-", "s"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "z", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Log", "[", "n", "]"}], ">", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.633015764869727*^9, 3.6330157953887806`*^9}, {
  3.6330159599180613`*^9, 3.6330159771270957`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "z"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "s"}], ")"}], 
     RowBox[{"-", "z"}]]}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", 
   RowBox[{"-", "4"}]}]}]], "Input",
 CellChangeTimes->{{3.633015814238813*^9, 3.633015897340954*^9}}],

Cell[BoxData[
 SuperscriptBox["s", "4"]], "Output",
 CellChangeTimes->{{3.633015820153825*^9, 3.6330158986429553`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{
   SuperscriptBox["s", 
    RowBox[{"-", "z"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"z", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", "s"}], " ", 
      RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6330159289850087`*^9, 3.6330159375590224`*^9}, {
  3.633015989840116*^9, 3.6330160033531427`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox["s", 
   RowBox[{"-", "z"}]], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{"z", ",", "0", ",", 
    RowBox[{
     RowBox[{"-", "s"}], " ", 
     RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.6330160042791443`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "x", "]"}]}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"z", "-", "1"}], ")"}]}], " ", 
     RowBox[{"x", "^", 
      RowBox[{"(", 
       RowBox[{"s", "-", "1"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6330160466792173`*^9, 3.6330160637252445`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "z"]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "s"}], ")"}], 
     RowBox[{"-", "z"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Gamma", "[", "z", "]"}]}], "+", 
      RowBox[{"Gamma", "[", 
       RowBox[{"z", ",", 
        RowBox[{
         RowBox[{"-", "s"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "z", "]"}], ">", "0"}], "&&", 
    RowBox[{
     RowBox[{"Log", "[", "n", "]"}], ">", "0"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.6330160684902525`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "z"]}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "s"}], ")"}], 
     RowBox[{"-", "z"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Gamma", "[", "z", "]"}]}], "+", 
      RowBox[{"Gamma", "[", 
       RowBox[{"z", ",", 
        RowBox[{
         RowBox[{"-", "s"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "10"}], ",", 
     RowBox[{"z", "\[Rule]", "2"}], ",", 
     RowBox[{"s", "\[Rule]", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6330160889572926`*^9, 3.633016139507382*^9}}],

Cell[BoxData[
 RowBox[{"90.3792546497023`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.1037650321629463`*^-14", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.633016133998372*^9, 3.6330161405973835`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "x", "]"}]}], ")"}], "^", 
        RowBox[{"(", 
         RowBox[{"z", "-", "1"}], ")"}]}], " ", 
       RowBox[{"x", "^", 
        RowBox[{"(", 
         RowBox[{"s", "-", "1"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "10"}], ",", 
     RowBox[{"z", "\[Rule]", "2"}], ",", 
     RowBox[{"s", "\[Rule]", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6330161634964285`*^9, 3.6330161679244366`*^9}}],

Cell[BoxData[
 RowBox[{"90.3792546497023`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.1037650321629463`*^-14", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.6330161710534415`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["s", 
     RowBox[{"-", "z"}]], " ", 
    RowBox[{"(", 
     RowBox[{"Gamma", "[", 
      RowBox[{"z", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "s"}], " ", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}]}], "/.", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"n", "\[Rule]", "10"}], ",", 
     RowBox[{"z", "\[Rule]", "2"}], ",", 
     RowBox[{"s", "\[Rule]", "2"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.633016192595477*^9, 3.6330162092265053`*^9}}],

Cell[BoxData[
 RowBox[{"90.3792546497023`", "\[VeryThinSpace]", "-", 
  RowBox[{"1.1037650321629463`*^-14", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.6330162106305075`*^9}]
}, Open  ]]
},
WindowSize->{991, 968},
WindowMargins->{{8, Automatic}, {Automatic, 6}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 919, 28, 31, "Input"],
Cell[1501, 52, 160, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1698, 61, 898, 29, 31, "Input"],
Cell[2599, 92, 211, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2847, 103, 464, 14, 31, "Input"],
Cell[3314, 119, 217, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3568, 130, 527, 16, 31, "Input"],
Cell[4098, 148, 363, 12, 50, "Output"]
}, Open  ]],
Cell[4476, 163, 1546, 45, 72, "Input"],
Cell[CellGroupData[{
Cell[6047, 212, 1026, 28, 31, "Input"],
Cell[7076, 242, 131, 2, 30, "Output"]
}, Open  ]],
Cell[7222, 247, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[7341, 252, 255, 6, 31, "Input"],
Cell[7599, 260, 116, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7752, 266, 436, 13, 31, "Input"],
Cell[8191, 281, 159, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8387, 288, 428, 12, 31, "Input"],
Cell[8818, 302, 103, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8958, 308, 178, 4, 31, "Input"],
Cell[9139, 314, 115, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9291, 320, 206, 5, 31, "Input"],
Cell[9500, 327, 111, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9648, 333, 1196, 37, 31, "Input"],
Cell[10847, 372, 478, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[11362, 390, 1072, 33, 31, "Input"],
Cell[12437, 425, 936, 30, 55, "Output"]
}, Open  ]],
Cell[13388, 458, 2194, 73, 72, "Input"],
Cell[CellGroupData[{
Cell[15607, 535, 348, 9, 31, "Input"],
Cell[15958, 546, 299, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16294, 557, 399, 10, 31, "Input"],
Cell[16696, 569, 349, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17082, 581, 490, 16, 31, "Input"],
Cell[17575, 599, 140, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[17752, 606, 913, 27, 31, "Input"],
Cell[18668, 635, 894, 28, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[19599, 668, 872, 26, 31, "Input"],
Cell[20474, 696, 261, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20772, 708, 967, 27, 31, "Input"],
Cell[21742, 737, 192, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21971, 744, 484, 12, 31, "Input"],
Cell[22458, 758, 184, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[22679, 766, 762, 22, 31, "Input"],
Cell[23444, 790, 372, 10, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23853, 805, 347, 10, 47, "Input"],
Cell[24203, 817, 87, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[24327, 823, 232, 6, 31, "Input"],
Cell[24562, 831, 87, 1, 30, "Output"]
}, Open  ]],
Cell[24664, 835, 92, 1, 31, "Input"],
Cell[24759, 838, 342, 10, 31, "Input"],
Cell[CellGroupData[{
Cell[25126, 852, 793, 23, 31, "Input"],
Cell[25922, 877, 5834, 97, 232, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[31793, 979, 334, 9, 31, "Input"],
Cell[32130, 990, 550, 17, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[32717, 1012, 318, 9, 31, "Input"],
Cell[33038, 1023, 165, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[33240, 1032, 578, 18, 31, "Input"],
Cell[33821, 1052, 179, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34037, 1061, 207, 4, 31, "Input"],
Cell[34247, 1067, 89, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34373, 1073, 208, 5, 31, "Input"],
Cell[34584, 1080, 87, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[34708, 1086, 437, 13, 31, "Input"],
Cell[35148, 1101, 3983, 116, 117, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[39168, 1222, 832, 25, 31, "Input"],
Cell[40003, 1249, 5426, 176, 222, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45466, 1430, 609, 19, 31, "Input"],
Cell[46078, 1451, 202, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46317, 1461, 575, 18, 31, "Input"],
Cell[46895, 1481, 260, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47192, 1493, 436, 11, 31, "Input"],
Cell[47631, 1506, 212, 4, 30, "Output"]
}, Open  ]],
Cell[47858, 1513, 96, 1, 31, "Input"],
Cell[47957, 1516, 96, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[48078, 1521, 354, 10, 31, "Input"],
Cell[48435, 1533, 131, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48603, 1540, 500, 15, 31, "Input"],
Cell[49106, 1557, 205, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49348, 1566, 241, 5, 31, "Input"],
Cell[49592, 1573, 111, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49740, 1579, 313, 9, 31, "Input"],
Cell[50056, 1590, 211, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[50304, 1601, 333, 9, 31, "Input"],
Cell[50640, 1612, 254, 6, 30, "Output"]
}, Open  ]],
Cell[50909, 1621, 1604, 49, 72, "Input"],
Cell[CellGroupData[{
Cell[52538, 1674, 293, 7, 31, "Input"],
Cell[52834, 1683, 113, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52984, 1689, 231, 5, 31, "Input"],
Cell[53218, 1696, 89, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53344, 1702, 295, 6, 52, "Input"],
Cell[53642, 1710, 165, 2, 30, "Output"],
Cell[53810, 1714, 163, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54010, 1721, 235, 5, 31, "Input"],
Cell[54248, 1728, 88, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54373, 1734, 265, 7, 31, "Input"],
Cell[54641, 1743, 215, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[54893, 1754, 155, 3, 31, "Input"],
Cell[55051, 1759, 140, 2, 30, "Output"]
}, Open  ]],
Cell[55206, 1764, 759, 23, 31, "Input"],
Cell[55968, 1789, 435, 12, 31, "Input"],
Cell[CellGroupData[{
Cell[56428, 1805, 407, 11, 31, "Input"],
Cell[56838, 1818, 313, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[57188, 1832, 516, 13, 31, "Input"],
Cell[57707, 1847, 484, 12, 44, "Output"]
}, Open  ]],
Cell[58206, 1862, 890, 28, 31, "Input"],
Cell[CellGroupData[{
Cell[59121, 1894, 880, 27, 49, "Input"],
Cell[60004, 1923, 193, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60234, 1931, 562, 15, 33, "Input"],
Cell[60799, 1948, 115, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[60951, 1954, 295, 7, 31, "Input"],
Cell[61249, 1963, 219, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[61505, 1972, 950, 23, 31, "Input"],
Cell[62458, 1997, 384, 5, 30, "Output"]
}, Open  ]],
Cell[62857, 2005, 96, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[62978, 2010, 1797, 49, 52, "Input"],
Cell[64778, 2061, 442, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[65257, 2072, 519, 16, 31, "Input"],
Cell[65779, 2090, 566, 18, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[66382, 2113, 637, 19, 31, "Input"],
Cell[67022, 2134, 363, 9, 30, "Output"]
}, Open  ]],
Cell[67400, 2146, 1827, 55, 52, "Input"],
Cell[69230, 2203, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[69349, 2208, 205, 4, 31, "Input"],
Cell[69557, 2214, 281, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[69875, 2223, 339, 9, 31, "Input"],
Cell[70217, 2234, 221, 7, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[70475, 2246, 570, 15, 31, "Input"],
Cell[71048, 2263, 263, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[71348, 2271, 1012, 30, 31, "Input"],
Cell[72363, 2303, 215, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[72615, 2311, 268, 7, 31, "Input"],
Cell[72886, 2320, 263, 8, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[73186, 2333, 654, 21, 31, "Input"],
Cell[73843, 2356, 277, 8, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74157, 2369, 264, 7, 31, "Input"],
Cell[74424, 2378, 210, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74671, 2388, 530, 15, 31, "Input"],
Cell[75204, 2405, 156, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75397, 2413, 303, 8, 31, "Input"],
Cell[75703, 2423, 233, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75973, 2432, 301, 8, 31, "Input"],
Cell[76277, 2442, 245, 7, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76559, 2454, 383, 11, 31, "Input"],
Cell[76945, 2467, 171, 4, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77153, 2476, 359, 11, 31, "Input"],
Cell[77515, 2489, 173, 4, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[77725, 2498, 366, 11, 31, "Input"],
Cell[78094, 2511, 98, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78229, 2517, 240, 6, 31, "Input"],
Cell[78472, 2525, 82, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[78591, 2531, 300, 9, 31, "Input"],
Cell[78894, 2542, 247, 7, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79178, 2554, 259, 6, 31, "Input"],
Cell[79440, 2562, 190, 6, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[79667, 2573, 199, 5, 31, "Input"],
Cell[79869, 2580, 116, 3, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80022, 2588, 130, 2, 31, "Input"],
Cell[80155, 2592, 99, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80291, 2599, 286, 7, 31, "Input"],
Cell[80580, 2608, 99, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[80716, 2615, 298, 8, 31, "Input"],
Cell[81017, 2625, 252, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81306, 2636, 336, 9, 31, "Input"],
Cell[81645, 2647, 113, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[81795, 2653, 225, 5, 31, "Input"],
Cell[82023, 2660, 115, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[82175, 2666, 600, 16, 31, "Input"],
Cell[82778, 2684, 390, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83205, 2699, 268, 7, 31, "Input"],
Cell[83476, 2708, 113, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[83626, 2714, 367, 10, 31, "Input"],
Cell[83996, 2726, 140, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84173, 2733, 405, 13, 31, "Input"],
Cell[84581, 2748, 430, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85048, 2765, 239, 6, 31, "Input"],
Cell[85290, 2773, 212, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85539, 2784, 205, 5, 31, "Input"],
Cell[85747, 2791, 124, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85908, 2799, 371, 11, 31, "Input"],
Cell[86282, 2812, 317, 11, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86636, 2828, 339, 9, 31, "Input"],
Cell[86978, 2839, 159, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87174, 2847, 316, 8, 31, "Input"],
Cell[87493, 2857, 99, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87629, 2864, 362, 10, 31, "Input"],
Cell[87994, 2876, 96, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88127, 2882, 362, 10, 31, "Input"],
Cell[88492, 2894, 144, 3, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88673, 2902, 338, 9, 31, "Input"],
Cell[89014, 2913, 144, 3, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89195, 2921, 497, 13, 31, "Input"],
Cell[89695, 2936, 197, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89929, 2944, 419, 12, 31, "Input"],
Cell[90351, 2958, 185, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90573, 2967, 262, 7, 31, "Input"],
Cell[90838, 2976, 155, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91030, 2984, 1148, 32, 52, "Input"],
Cell[92181, 3018, 85731, 1429, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[177949, 4452, 209, 5, 31, "Input"],
Cell[178161, 4459, 265, 8, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[178463, 4472, 367, 11, 52, "Input"],
Cell[178833, 4485, 172, 4, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[179042, 4494, 238, 6, 49, "Input"],
Cell[179283, 4502, 129, 3, 30, "Output"]
}, Open  ]],
Cell[179427, 4508, 594, 16, 31, "Input"],
Cell[180024, 4526, 94, 1, 31, InheritFromParent],
Cell[CellGroupData[{
Cell[180143, 4531, 366, 9, 31, "Input"],
Cell[180512, 4542, 180, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180729, 4550, 373, 11, 52, "Input"],
Cell[181105, 4563, 185, 4, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[181327, 4572, 413, 12, 52, "Input"],
Cell[181743, 4586, 246, 6, 49, "Output"]
}, Open  ]],
Cell[182004, 4595, 265, 8, 52, "Input"],
Cell[CellGroupData[{
Cell[182294, 4607, 284, 8, 52, "Input"],
Cell[182581, 4617, 163, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182781, 4626, 311, 9, 52, "Input"],
Cell[183095, 4637, 82, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183214, 4643, 286, 8, 31, "Input"],
Cell[183503, 4653, 155, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[183695, 4661, 231, 6, 31, "Input"],
Cell[183929, 4669, 142, 3, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184108, 4677, 207, 5, 31, "Input"],
Cell[184318, 4684, 265, 8, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[184620, 4697, 409, 10, 31, "Input"],
Cell[185032, 4709, 235, 6, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185304, 4720, 1037, 28, 31, "Input"],
Cell[186344, 4750, 536, 10, 47, "Message"],
Cell[186883, 4762, 582, 14, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187502, 4781, 430, 11, 31, "Input"],
Cell[187935, 4794, 187, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188159, 4801, 515, 14, 52, "Input"],
Cell[188677, 4817, 167, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188881, 4824, 497, 14, 31, "Input"],
Cell[189381, 4840, 189, 4, 30, "Output"]
}, Open  ]],
Cell[189585, 4847, 96, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[189706, 4852, 215, 6, 31, "Input"],
Cell[189924, 4860, 89, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190050, 4866, 276, 7, 31, "Input"],
Cell[190329, 4875, 113, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[190479, 4881, 374, 11, 52, "Input"],
Cell[190856, 4894, 447, 10, 40, "Message"],
Cell[191306, 4906, 498, 10, 20, "Message"],
Cell[191807, 4918, 108, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[191952, 4924, 388, 11, 31, "Input"],
Cell[192343, 4937, 457, 14, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[192837, 4956, 648, 20, 47, "Input"],
Cell[193488, 4978, 114, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[193639, 4984, 603, 18, 47, "Input"],
Cell[194245, 5004, 111, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194393, 5010, 376, 11, 47, "Input"],
Cell[194772, 5023, 113, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[194922, 5029, 649, 20, 47, "Input"],
Cell[195574, 5051, 116, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[195727, 5057, 205, 5, 31, "Input"],
Cell[195935, 5064, 88, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196060, 5070, 366, 10, 31, "Input"],
Cell[196429, 5082, 431, 14, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[196897, 5101, 645, 20, 47, "Input"],
Cell[197545, 5123, 113, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197695, 5129, 203, 5, 31, "Input"],
Cell[197901, 5136, 113, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[198051, 5142, 470, 11, 31, "Input"],
Cell[198524, 5155, 291, 8, 50, "Output"]
}, Open  ]],
Cell[198830, 5166, 184, 4, 31, "Input"],
Cell[CellGroupData[{
Cell[199039, 5174, 307, 9, 31, "Input"],
Cell[199349, 5185, 153, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199539, 5193, 199, 4, 31, "Input"],
Cell[199741, 5199, 273, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200051, 5212, 281, 7, 31, "Input"],
Cell[200335, 5221, 325, 9, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[200697, 5235, 281, 7, 31, "Input"],
Cell[200981, 5244, 303, 9, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201321, 5258, 216, 5, 31, "Input"],
Cell[201540, 5265, 218, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[201795, 5276, 389, 10, 31, "Input"],
Cell[202187, 5288, 194, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[202418, 5297, 327, 8, 31, "Input"],
Cell[202748, 5307, 233, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203018, 5317, 340, 8, 31, "Input"],
Cell[203361, 5327, 140, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[203538, 5335, 537, 17, 52, "Input"],
Cell[204078, 5354, 473, 10, 20, "Message"],
Cell[204554, 5366, 475, 10, 20, "Message"],
Cell[205032, 5378, 475, 10, 20, "Message"],
Cell[205510, 5390, 542, 11, 20, "Message"],
Cell[206055, 5403, 473, 10, 20, "Message"],
Cell[206531, 5415, 471, 10, 20, "Message"],
Cell[207005, 5427, 470, 10, 20, "Message"],
Cell[207478, 5439, 526, 10, 20, "Message"]
}, Open  ]],
Cell[208019, 5452, 122, 2, 31, "Input"],
Cell[208144, 5456, 92, 1, 31, "Input"],
Cell[208239, 5459, 121, 2, 31, "Input"],
Cell[208363, 5463, 96, 1, 31, "Input"],
Cell[208462, 5466, 96, 1, 31, "Input"],
Cell[208561, 5469, 96, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[208682, 5474, 167, 4, 31, "Input"],
Cell[208852, 5480, 233, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209122, 5492, 714, 22, 31, "Input"],
Cell[209839, 5516, 28353, 910, 977, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238229, 6431, 564, 17, 31, "Input"],
Cell[238796, 6450, 488, 15, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239321, 6470, 513, 16, 31, "Input"],
Cell[239837, 6488, 258, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240132, 6500, 346, 10, 31, "Input"],
Cell[240481, 6512, 335, 8, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240853, 6525, 405, 14, 31, "Input"],
Cell[241261, 6541, 413, 14, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241711, 6560, 318, 10, 31, "Input"],
Cell[242032, 6572, 317, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242386, 6587, 405, 12, 31, "Input"],
Cell[242794, 6601, 346, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243177, 6617, 540, 16, 31, "Input"],
Cell[243720, 6635, 202, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[243959, 6645, 229, 6, 31, "Input"],
Cell[244191, 6653, 212, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244440, 6661, 210, 5, 31, "Input"],
Cell[244653, 6668, 201, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[244891, 6677, 608, 18, 31, "Input"],
Cell[245502, 6697, 149, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[245688, 6704, 573, 14, 31, "Input"],
Cell[246264, 6720, 630, 18, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246931, 6743, 496, 14, 31, "Input"],
Cell[247430, 6759, 166, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247633, 6766, 290, 7, 31, "Input"],
Cell[247926, 6775, 115, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[248078, 6781, 454, 12, 67, "Input"],
Cell[248535, 6795, 6105, 106, 233, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[254677, 6906, 237, 6, 31, "Input"],
Cell[254917, 6914, 226, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255180, 6925, 333, 8, 31, "Input"],
Cell[255516, 6935, 393, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[255946, 6950, 363, 9, 31, "Input"],
Cell[256312, 6961, 754, 24, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257103, 6990, 381, 10, 31, "Input"],
Cell[257487, 7002, 604, 19, 57, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[258128, 7026, 646, 21, 31, "Input"],
Cell[258777, 7049, 479, 16, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259293, 7070, 458, 15, 57, "Input"],
Cell[259754, 7087, 278, 9, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260069, 7101, 238, 6, 31, "Input"],
Cell[260310, 7109, 202, 6, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[260549, 7120, 336, 10, 31, "Input"],
Cell[260888, 7132, 131, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261056, 7140, 583, 17, 31, "Input"],
Cell[261642, 7159, 437, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262116, 7177, 320, 8, 31, "Input"],
Cell[262439, 7187, 155, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[262631, 7195, 511, 13, 31, "Input"],
Cell[263145, 7210, 652, 20, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[263834, 7235, 754, 23, 33, "Input"],
Cell[264591, 7260, 376, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265004, 7277, 569, 14, 31, "Input"],
Cell[265576, 7293, 227, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265840, 7302, 718, 23, 33, "Input"],
Cell[266561, 7327, 145, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266743, 7336, 466, 13, 31, "Input"],
Cell[267212, 7351, 97, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267346, 7357, 410, 12, 31, "Input"],
Cell[267759, 7371, 254, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268050, 7382, 506, 14, 31, "Input"],
Cell[268559, 7398, 771, 23, 33, "Output"]
}, Open  ]],
Cell[269345, 7424, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[269464, 7429, 786, 24, 31, "Input"],
Cell[270253, 7455, 390, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270680, 7470, 233, 5, 31, "Input"],
Cell[270916, 7477, 104, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[271057, 7484, 597, 19, 31, "Input"],
Cell[271657, 7505, 392, 13, 52, "Output"]
}, Open  ]],
Cell[272064, 7521, 96, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[272185, 7526, 329, 9, 31, "Input"],
Cell[272517, 7537, 299, 8, 30, "Output"]
}, Open  ]],
Cell[272831, 7548, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[272948, 7553, 453, 13, 31, "Input"],
Cell[273404, 7568, 328, 11, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[273769, 7584, 999, 25, 31, "Input"],
Cell[274771, 7611, 4874, 157, 204, "Output"]
}, Open  ]],
Cell[279660, 7771, 92, 1, 31, "Input"],
Cell[279755, 7774, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[279874, 7779, 810, 22, 31, "Input"],
Cell[280687, 7803, 4997, 160, 145, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[285721, 7968, 698, 19, 31, "Input"],
Cell[286422, 7989, 43652, 725, 486, "Output"]
}, Open  ]],
Cell[330089, 8717, 122, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[330236, 8723, 885, 24, 31, "Input"],
Cell[331124, 8749, 1302, 44, 162, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332463, 8798, 610, 18, 31, "Input"],
Cell[333076, 8818, 1226, 43, 162, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334339, 8866, 488, 14, 31, "Input"],
Cell[334830, 8882, 508, 15, 33, "Output"]
}, Open  ]],
Cell[335353, 8900, 94, 1, 31, "Input"],
Cell[335450, 8903, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[335569, 8908, 324, 8, 31, "Input"],
Cell[335896, 8918, 807, 25, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336740, 8948, 410, 12, 31, "Input"],
Cell[337153, 8962, 19944, 335, 241, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[357134, 9302, 533, 17, 31, "Input"],
Cell[357670, 9321, 1163, 38, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[358870, 9364, 444, 15, 31, "Input"],
Cell[359317, 9381, 1000, 34, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[360354, 9420, 537, 16, 31, "Input"],
Cell[360894, 9438, 850, 27, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[361781, 9470, 396, 13, 33, "Input"],
Cell[362180, 9485, 119, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[362336, 9492, 383, 11, 31, "Input"],
Cell[362722, 9505, 282, 9, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[363041, 9519, 508, 16, 31, "Input"],
Cell[363552, 9537, 773, 26, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364362, 9568, 793, 26, 33, "Input"],
Cell[365158, 9596, 212, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[365407, 9604, 745, 23, 31, "Input"],
Cell[366155, 9629, 188, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[366380, 9637, 558, 17, 33, "Input"],
Cell[366941, 9656, 188, 3, 30, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
