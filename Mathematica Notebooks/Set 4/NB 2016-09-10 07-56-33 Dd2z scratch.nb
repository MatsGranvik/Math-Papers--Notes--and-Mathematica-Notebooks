(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    442547,      10660]
NotebookOptionsPosition[    425151,      10065]
NotebookOutlinePosition[    425495,      10080]
CellTagsIndexPosition[    425452,      10077]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[{
 RowBox[{"Clear", "[", "rb", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bin2", "[", 
   RowBox[{"z_", ",", "k_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Product", "[", 
    RowBox[{
     RowBox[{"z", "-", "j"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", 
       RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}], "/", 
   RowBox[{"k", "!"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rb", "[", 
   RowBox[{"n_", ",", "k_", ",", "f_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"rb", "[", 
    RowBox[{"n", ",", "k", ",", "f"}], "]"}], "=", 
   RowBox[{"Sum", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"f", "[", "j", "]"}], 
      RowBox[{"rb", "[", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"n", "/", "j"}], "]"}], ",", 
        RowBox[{"k", "-", "1"}], ",", "f"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "2", ",", "n"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rb", "[", 
   RowBox[{"n_", ",", "0", ",", "f_"}], "]"}], ":=", 
  RowBox[{"UnitStep", "[", 
   RowBox[{"n", "-", "1"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lrb", "[", 
   RowBox[{"n_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"k", "+", "1"}], ")"}]}], "/", "k"}], " ", 
     RowBox[{"rb", "[", 
      RowBox[{"n", ",", "k", ",", "f"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"Log2", "@", "n"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"rbz", "[", 
   RowBox[{"n_", ",", "z_", ",", "f_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"bin2", "[", 
      RowBox[{"z", ",", "k"}], "]"}], 
     RowBox[{"rb", "[", 
      RowBox[{"n", ",", "k", ",", "f"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", 
      RowBox[{"Log2", "@", "n"}]}], "}"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"lrz", "[", 
   RowBox[{"n_", ",", "z_", ",", "f_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", "/", " ", 
       RowBox[{"(", 
        RowBox[{"z", "-", "k"}], ")"}]}], " ", 
      RowBox[{"rb", "[", 
       RowBox[{"n", ",", "k", ",", "f"}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", 
       RowBox[{"Log2", "@", "n"}]}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"id", "[", "n_", "]"}], ":=", 
  "1"}], "\[IndentingNewLine]"}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"lrz", "[", 
    RowBox[{"100", ",", "z", ",", "id"}], "]"}], ",", 
   RowBox[{"z", "\[Rule]", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6824447111952066`*^9, 3.6824447256530333`*^9}}],

Cell[BoxData["99"], "Output",
 CellChangeTimes->{{3.6824447146234026`*^9, 3.6824447260340548`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{"lrz", "[", 
    RowBox[{"100", ",", "z", ",", "id"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6824447278351583`*^9, 3.682444737300699*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6824447900457163`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6824447800511446`*^9, 3.6824448032634726`*^9}, 
   3.6824452920514293`*^9}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.6824452892592697`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.682444847771018*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "z"}], "/", 
     RowBox[{"z", "!"}]}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.682445282348874*^9, 3.682445297287729*^9}}],

Cell[BoxData[
 RowBox[{"EulerGamma", "+", 
  RowBox[{"Log", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.6824452947045813`*^9, 3.6824452975537443`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Hypergeometric1F1", "[", 
      RowBox[{"z", ",", 
       RowBox[{"z", "+", "1"}], ",", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
     RowBox[{
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "^", "z"}], "/", 
      RowBox[{"(", 
       RowBox[{"z", "!"}], ")"}]}]}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.6824448456738977`*^9, 3.682444845723901*^9}, {
  3.6824452994958553`*^9, 3.6824453281064916`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Gamma", "[", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "x", "]"}]}]}], "]"}]}], "-", 
  RowBox[{"Log", "[", 
   RowBox[{"-", 
    RowBox[{"Log", "[", "x", "]"}]}], "]"}], "+", 
  RowBox[{"Log", "[", 
   RowBox[{"Log", "[", "x", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6824453249913135`*^9, 3.682445328376507*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"FactorialPower", "[", 
      RowBox[{"x", ",", "z"}], "]"}], "/", 
     RowBox[{"z", "!"}]}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.682445333001772*^9, 3.6824453461775255`*^9}}],

Cell[BoxData[
 RowBox[{"EulerGamma", "+", 
  RowBox[{"PolyGamma", "[", 
   RowBox[{"0", ",", 
    RowBox[{"1", "+", "x"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.682445343232357*^9, 3.6824453466495523`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"lrz", "[", 
      RowBox[{"100", ",", "z", ",", "id"}], "]"}], ",", "z"}], "]"}], ",", 
   RowBox[{"z", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6824454755039225`*^9, 3.6824454779030595`*^9}}],

Cell[BoxData[
 FractionBox["428", "15"]], "Output",
 CellChangeTimes->{3.6824454763319693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"z", "!"}]}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{3.682445358337221*^9}],

Cell[BoxData["EulerGamma"], "Output",
 CellChangeTimes->{3.6824453586632395`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"x", "^", "z"}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.682445377415312*^9, 3.682445397210444*^9}}],

Cell[BoxData[
 RowBox[{"Log", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.6824453974764595`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Hypergeometric1F1", "[", 
      RowBox[{"z", ",", 
       RowBox[{"z", "+", "1"}], ",", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
     RowBox[{
      RowBox[{"Log", "[", "x", "]"}], "^", "z"}]}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.68244540832908*^9, 3.6824454277431903`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "EulerGamma"}], "-", 
  RowBox[{"Gamma", "[", 
   RowBox[{"0", ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "x", "]"}]}]}], "]"}], "-", 
  RowBox[{"Log", "[", 
   RowBox[{"-", 
    RowBox[{"Log", "[", "x", "]"}]}], "]"}], "+", 
  RowBox[{"Log", "[", 
   RowBox[{"Log", "[", "x", "]"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6824454086340976`*^9, 3.682445428057208*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"FactorialPower", "[", 
     RowBox[{"x", ",", "z"}], "]"}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{3.682445435551637*^9}],

Cell[BoxData[
 RowBox[{"PolyGamma", "[", 
  RowBox[{"0", ",", 
   RowBox[{"1", "+", "x"}]}], "]"}]], "Output",
 CellChangeTimes->{3.682445435887656*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"lrz", "[", 
       RowBox[{"100", ",", "z", ",", "id"}], "]"}], 
      RowBox[{"z", "!"}]}], ",", "z"}], "]"}], ",", 
   RowBox[{"z", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682445451874571*^9, 3.6824454851444736`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["428", "15"], "-", "EulerGamma"}]], "Output",
 CellChangeTimes->{{3.682445455045752*^9, 3.682445488998694*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"z", "!"}], ",", "z"}], "]"}], ",", 
   RowBox[{"z", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682445502991494*^9, 3.682445506568699*^9}}],

Cell[BoxData[
 RowBox[{"-", "EulerGamma"}]], "Output",
 CellChangeTimes->{3.6824455072897406`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"x", "+", "z"}], ")"}], "!"}], "/", 
       RowBox[{"x", "!"}]}], "/", 
      RowBox[{"z", "!"}]}], ",", "z"}], "]"}], "/.", 
   RowBox[{"z", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682445569131277*^9, 3.682445636698142*^9}, {
  3.6824456743172936`*^9, 3.6824457227040615`*^9}}],

Cell[BoxData[
 RowBox[{"HarmonicNumber", "[", "x", "]"}]], "Output",
 CellChangeTimes->{{3.6824455957798014`*^9, 3.682445644451586*^9}, {
  3.68244570222589*^9, 3.6824457230590816`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"x", "+", "z"}], ")"}], "!"}], "/", 
      RowBox[{"x", "!"}]}], ",", "z"}], "]"}], "/.", 
   RowBox[{"z", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682445712029451*^9, 3.6824457276543446`*^9}}],

Cell[BoxData[
 RowBox[{"PolyGamma", "[", 
  RowBox[{"0", ",", 
   RowBox[{"1", "+", "x"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.6824457126224847`*^9, 3.68244572792836*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"FI", "[", "n_", "]"}], ":=", 
   RowBox[{"FactorInteger", "[", "n", "]"}]}], ";", 
  RowBox[{
   RowBox[{"FI", "[", "1", "]"}], ":=", 
   RowBox[{"{", "}"}]}]}], "\n", 
 RowBox[{
  RowBox[{"bin2", "[", 
   RowBox[{"z_", ",", "k_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Product", "[", 
    RowBox[{
     RowBox[{"z", "-", "j"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", 
       RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}], "/", 
   RowBox[{"k", "!"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"dzeta", "[", 
   RowBox[{"j_", ",", "s_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"j", "^", 
    RowBox[{"-", "s"}]}], " ", 
   RowBox[{"Product", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"p", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], 
      RowBox[{"bin2", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", 
        RowBox[{"p", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"FI", "[", "j", "]"}]}], "}"}]}], "]"}]}]}], "\n", 
 RowBox[{
  RowBox[{"dza", "[", 
   RowBox[{"j_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"z", "!"}], " ", 
   RowBox[{"Product", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"p", "[", 
        RowBox[{"[", "2", "]"}], "]"}]}], 
      RowBox[{"bin2", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", 
        RowBox[{"p", "[", 
         RowBox[{"[", "2", "]"}], "]"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"p", ",", 
       RowBox[{"FI", "[", "j", "]"}]}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"zeta", "[", 
   RowBox[{"n_", ",", "s_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"dzeta", "[", 
     RowBox[{"j", ",", "s", ",", "z"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.682445784855616*^9, 3.6824458108981056`*^9}, {
  3.682447569316682*^9, 3.68244758101035*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"zeta", "[", 
       RowBox[{"100", ",", "0", ",", "z"}], "]"}], 
      RowBox[{"z", "!"}]}], "]"}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.682445786727723*^9, 3.6824458448300467`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["428", "15"], "-", "EulerGamma"}]], "Output",
 CellChangeTimes->{{3.682445790588944*^9, 3.6824458451640654`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"dza", "[", 
  RowBox[{"4", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.6824475834684906`*^9, 3.68244764184883*^9}, {
   3.6824480704293437`*^9, 3.682448076645699*^9}, 3.682448150060898*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "-", "z"}], ")"}], " ", "z", " ", 
  RowBox[{"z", "!"}]}]], "Output",
 CellChangeTimes->{{3.682447586005636*^9, 3.682447642177849*^9}, {
   3.6824480741145544`*^9, 3.682448077033721*^9}, 3.6824481511119585`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "-", "z"}], ")"}], " ", "z", " ", 
     RowBox[{"z", "!"}]}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.6824480794138575`*^9, 3.682448188871118*^9}}],

Cell[BoxData[
 FractionBox["1", "2"]], "Output",
 CellChangeTimes->{{3.6824480817579913`*^9, 3.682448189157134*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"z", "!"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.6824481322038765`*^9, 3.682448134165989*^9}}],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.682448134409003*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Log", "[", "x", "]"}], "^", 
     RowBox[{"(", 
      RowBox[{"z", "-", "1"}], ")"}]}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"z", "-", "1"}], ")"}], "!"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6824561364986963`*^9, 3.682456153402663*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", "z", "]"}], "-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"z", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
      RowBox[{"-", "z"}]], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "z"]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "z"}], ")"}], "!"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "z", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.682456154812744*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Gamma", "[", "z", "]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"z", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
     RowBox[{"-", "z"}]], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "n", "]"}], "z"]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "z"}], ")"}], "!"}]], "]"}]], "Input",
 CellChangeTimes->{{3.6824561602950573`*^9, 3.6824561627531977`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"p1", "[", 
   RowBox[{"n_", ",", "z_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Gamma", "[", "z", "]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"z", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
     RowBox[{"-", "z"}]], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "n", "]"}], "z"]}], 
   RowBox[{"Gamma", "[", "z", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1a", "[", 
   RowBox[{"n_", ",", "z_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Gamma", "[", 
      RowBox[{"z", ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
     RowBox[{"-", "z"}]], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "n", "]"}], "z"]}], 
   RowBox[{"Gamma", "[", "z", "]"}]]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1b", "[", 
   RowBox[{"n_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"-", "z"}], ")"}]}], 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Gamma", "[", 
       RowBox[{"z", ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " "}], 
    RowBox[{"Gamma", "[", "z", "]"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"p1c", "[", 
   RowBox[{"n_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"-", "z"}], ")"}]}], 
   RowBox[{"(", 
    RowBox[{"GammaRegularized", "[", 
     RowBox[{"z", ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " "}]}]}], "Input",
 CellChangeTimes->{{3.682456188649679*^9, 3.6824561929049225`*^9}, {
  3.682456261149826*^9, 3.6824562739355574`*^9}, {3.6824563273216105`*^9, 
  3.682456376822442*^9}, {3.682456464087433*^9, 3.6824564838115616`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"p2", "[", 
   RowBox[{"n_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"Hypergeometric1F1", "[", 
    RowBox[{"z", ",", 
     RowBox[{"z", "+", "1"}], ",", 
     RowBox[{"Log", "[", "n", "]"}]}], "]"}], " ", 
   RowBox[{
    RowBox[{
     RowBox[{"Log", "[", "n", "]"}], "^", "z"}], "/", 
    RowBox[{"z", "!"}]}]}]}]], "Input",
 CellChangeTimes->{{3.682456194404008*^9, 3.682456223022645*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p1c", "[", 
  RowBox[{"33", ",", "2.7"}], "]"}]], "Input",
 CellChangeTimes->{{3.6824562258608074`*^9, 3.682456246244973*^9}, 
   3.6824562765877085`*^9, {3.6824563466047134`*^9, 3.68245637241819*^9}, {
   3.682456487610779*^9, 3.6824564882178135`*^9}}],

Cell[BoxData[
 RowBox[{"111.43132823319874`", "\[VeryThinSpace]", "+", 
  RowBox[{"7.105427357601002`*^-15", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.6824562312151136`*^9, 3.682456246672998*^9}, 
   3.6824562769417295`*^9, {3.682456346940733*^9, 3.682456379255581*^9}, 
   3.68245648850983*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"p2", "[", 
  RowBox[{"33", ",", "2.7"}], "]"}]], "Input",
 CellChangeTimes->{{3.6824562317361436`*^9, 3.682456248997131*^9}}],

Cell[BoxData["111.4313282331987`"], "Output",
 CellChangeTimes->{{3.6824562356183653`*^9, 3.6824562494151545`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", 
    RowBox[{"(", 
     RowBox[{"-", "z"}], ")"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"Log", "[", "n", "]"}], ")"}], 
    RowBox[{"-", "z"}]], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "z"]}], "]"}]], "Input",
 CellChangeTimes->{{3.6824562919935904`*^9, 3.6824563144358735`*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"-", "1"}], ")"}], 
  RowBox[{"-", "z"}]]], "Output",
 CellChangeTimes->{{3.682456298540964*^9, 3.682456314962904*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"p1c", "[", 
    RowBox[{"33", ",", "z"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "16"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682456383039798*^9, 3.6824564048740463`*^9}, {
   3.682456500379509*^9, 3.6824565083399644`*^9}, 3.6824569605188274`*^9, {
   3.682456999343048*^9, 3.6824570270386324`*^9}, {3.6824570618656244`*^9, 
   3.6824570691190395`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], 
    LineBox[{{-15.999999510204082`, 
     0.9443543094837705}, {-15.998631621913555`, -152.77894815131458`}}], 
    LineBox[CompressedData["
1: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
cWeHyczKykevgxeWwObjfxn17Mg=
     "]], 
    LineBox[{{-13.07177266754162, -152.77894815131458`}, \
{-13.061323558597007`, -129.21622709905816`}, {-13.02926599955109, \
-60.09935443200979}, {-13.02125160978961, -43.522005456574284`}, \
{-13.013237220028131`, -27.238080459234318`}, {-12.997208440505172`, 
     4.4267723583163425`}, {-12.965150881459255`, 
     64.0034488276684}, {-12.957136491697776`, 
     78.09004791045712}, {-12.949122101936297`, 
     91.846054518047}, {-12.933093322413338`, 
     118.35359124696816`}, {-12.925078932651859`, 
     131.0995141477139}, {-12.91706454289038, 
     143.50362214006822`}, {-12.901035763367421`, 
     167.27835747562474`}, {-12.893021373605942`, 
     178.64566757313798`}, {-12.885006983844463`, 
     189.66451938135367`}, {-12.868978204321504`, 
     210.6531996844438}, {-12.83876099902778, 246.2551297901556}}], 
    LineBox[{{-14.033422677455835`, 246.2551297901556}, {-14.010423967329118`,
      74.80172973878726}, {-14.002499909701886`, 
     18.5184841669498}, {-13.994575852074654`, -36.614473792160695`}, \
{-13.97872773682019, -143.37012750637422`}, {-13.977230005581422`, \
-152.77894815131458`}}], 
    LineBox[{{-15.005533553884291`, -152.77894815131458`}, \
{-15.00329728508547, -90.90183301049552}, {-14.990728198364804`, 
     246.2551297901556}}]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-16, 8}, {-152.77894815131458`, 246.2551297901556}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6824563922373238`*^9, 3.6824564050810585`*^9}, {
   3.6824565007635307`*^9, 3.68245650861098*^9}, 3.6824569609398518`*^9, {
   3.6824569999440823`*^9, 3.682457028278703*^9}, {3.6824570640597496`*^9, 
   3.6824570696840715`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"-", "z"}], ")"}]}], 
    RowBox[{"GammaRegularized", "[", 
     RowBox[{"z", ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "73.", "]"}]}]}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "3"}], ",", "13"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6824568522116327`*^9, 3.6824569884934273`*^9}, {
  3.682457038502288*^9, 3.6824570725922375`*^9}, {3.682457324731659*^9, 
  3.682457342668685*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
i0Z+rWD/A0y0aqU=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-3, 13}, {-3.8060193688668615`, 534.3039172272868}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.682456898286268*^9, 3.6824569890144577`*^9}, {
  3.6824570389003105`*^9, 3.6824570731592703`*^9}, {3.6824573271898003`*^9, 
  3.6824573431587133`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"lrz", "[", 
    RowBox[{"73.", ",", "z", ",", "id"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "3"}], ",", "13"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6824572381277056`*^9, 3.682457269531502*^9}, {
  3.682457302764403*^9, 3.682457312450957*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-3, 13}, {-3.2885995966356547`, 204.622599322678}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6824572540056143`*^9, 3.682457269949526*^9}, {
  3.6824573032304296`*^9, 3.6824573127819757`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Log", "[", "73", "]"}], "^", "z"}], "/", 
    RowBox[{"z", "!"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "3"}], ",", "13"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682457537009801*^9, 3.6824575457072983`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
k9H/AM2jEPQ=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-3, 13}, {-0.03538503580565774, 14.196790933288849`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.682457545961313*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"z", ",", "k"}], "]"}], 
    RowBox[{"x", "^", "k"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682457743721624*^9, 3.6824577516250763`*^9}}],

Cell[BoxData[
 SuperscriptBox[
  RowBox[{"(", 
   RowBox[{"1", "+", "x"}], ")"}], "z"]], "Output",
 CellChangeTimes->{3.6824577519770966`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"z", ",", "k"}], "]"}], 
    RowBox[{"Binomial", "[", 
     RowBox[{"x", ",", "k"}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6824582371888485`*^9, 3.6824582398770027`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "+", "x", "+", "z"}], "]"}], 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "x"}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "z"}], "]"}]}]]], "Output",
 CellChangeTimes->{3.682458240402033*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"lrz", "[", 
    RowBox[{"20", ",", 
     RowBox[{"2", " ", 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{"z", " ", "I"}], ")"}]}]}], ",", "id"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682462688820468*^9, 3.6824627188481855`*^9}, {
   3.682462774390362*^9, 3.6824627882641554`*^9}, 3.6824629200366926`*^9, {
   3.6824629992562237`*^9, 3.682462999734251*^9}}],

Cell[BoxData[
 RowBox[{"2", " ", "\[Pi]"}]], "Output",
 CellChangeTimes->{3.6824627900372567`*^9, 3.6824629211047535`*^9, 
  3.682463001788368*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "@", "E"}], "^", 
  RowBox[{"(", 
   RowBox[{"0", " ", "I"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.682462725181547*^9, 3.6824627695570855`*^9}}],

Cell[BoxData["1.`"], "Output",
 CellChangeTimes->{{3.6824627290877705`*^9, 3.6824627698271008`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{"z", " ", "I"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", 
     RowBox[{"2", "Pi"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6824629330064344`*^9, 3.682462936310623*^9}}],

Cell[BoxData["0"], "Output",
 CellChangeTimes->{3.682462936701646*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"lrz", "[", 
   RowBox[{"100", ",", "z", ",", "id"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6824629514924917`*^9, 3.682463041211623*^9}, {
  3.6824636157784863`*^9, 3.6824636159284954`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     FractionBox["7", 
      RowBox[{
       RowBox[{"-", "6"}], "+", "z"}]], "-", 
     FractionBox["51", 
      RowBox[{
       RowBox[{"-", "5"}], "+", "z"}]], "+", 
     FractionBox["184", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "z"}]], "-", 
     FractionBox["324", 
      RowBox[{
       RowBox[{"-", "3"}], "+", "z"}]], "+", 
     FractionBox["283", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "z"}]], "-", 
     FractionBox["99", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "z"}]], "+", 
     FractionBox["1", "z"]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]], "Output",
 CellChangeTimes->{{3.6824629550726967`*^9, 3.682463041562643*^9}, 
   3.6824636165145288`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Series", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox["7", 
        RowBox[{
         RowBox[{"-", "6"}], "+", "z"}]], "-", 
       FractionBox["51", 
        RowBox[{
         RowBox[{"-", "5"}], "+", "z"}]], "+", 
       FractionBox["184", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "z"}]], "-", 
       FractionBox["324", 
        RowBox[{
         RowBox[{"-", "3"}], "+", "z"}]], "+", 
       FractionBox["283", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "z"}]], "-", 
       FractionBox["99", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "z"}]], "+", 
       FractionBox["1", "z"]}], ")"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", "0", ",", "20"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6824635793094006`*^9, 3.6824636198747206`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{"1", "+", 
   FractionBox[
    RowBox[{"428", " ", "z"}], "15"], "+", 
   RowBox[{
    FractionBox["1", "450"], " ", 
    RowBox[{"(", 
     RowBox[{"24568", "-", 
      RowBox[{"75", " ", 
       SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
    SuperscriptBox["z", "2"]}], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1974391", "-", 
       RowBox[{"128400", " ", 
        SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
     SuperscriptBox["z", "3"]}], "27000"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"137165317", " ", "\[Pi]"}], "1620000"], "-", 
       FractionBox[
        RowBox[{"6142", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "675"], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "5"], "120"]}], ")"}], " ", 
     SuperscriptBox["z", "4"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"8876820679", " ", "\[Pi]"}], "97200000"], "-", 
       FractionBox[
        RowBox[{"1974391", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "162000"], "+", 
       FractionBox[
        RowBox[{"107", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "450"]}], ")"}], " ", 
     SuperscriptBox["z", "5"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"553927801273", " ", "\[Pi]"}], "5832000000"], "-", 
       FractionBox[
        RowBox[{"137165317", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "9720000"], "+", 
       FractionBox[
        RowBox[{"3071", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "6750"], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "7"], "5040"]}], ")"}], " ", 
     SuperscriptBox["z", "6"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"33916558662151", " ", "\[Pi]"}], "349920000000"], "-", 
       FractionBox[
        RowBox[{"8876820679", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "583200000"], "+", 
       FractionBox[
        RowBox[{"1974391", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "3240000"], "-", 
       FractionBox[
        RowBox[{"107", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "18900"]}], ")"}], " ", 
     SuperscriptBox["z", "7"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"2056295769648937", " ", "\[Pi]"}], "20995200000000"], "-", 
       FractionBox[
        RowBox[{"553927801273", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "34992000000"], "+", 
       FractionBox[
        RowBox[{"137165317", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "194400000"], "-", 
       FractionBox[
        RowBox[{"3071", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "283500"], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "9"], "362880"]}], ")"}], " ", 
     SuperscriptBox["z", "8"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"124035085696334119", " ", "\[Pi]"}], "1259712000000000"], 
       "-", 
       FractionBox[
        RowBox[{"33916558662151", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "2099520000000"], "+", 
       FractionBox[
        RowBox[{"8876820679", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "11664000000"], "-", 
       FractionBox[
        RowBox[{"1974391", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "136080000"], "+", 
       FractionBox[
        RowBox[{"107", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "1360800"]}], ")"}], " ", 
     SuperscriptBox["z", "9"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"7462202539264212553", " ", "\[Pi]"}], "75582720000000000"], 
       "-", 
       FractionBox[
        RowBox[{"2056295769648937", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "125971200000000"], "+", 
       FractionBox[
        RowBox[{"553927801273", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "699840000000"], "-", 
       FractionBox[
        RowBox[{"137165317", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "8164800000"], "+", 
       FractionBox[
        RowBox[{"3071", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "20412000"], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "11"], "39916800"]}], ")"}], " ", 
     SuperscriptBox["z", "10"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"448342799392293597511", " ", "\[Pi]"}], 
        "4534963200000000000"], "-", 
       FractionBox[
        RowBox[{"124035085696334119", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "7558272000000000"], "+", 
       FractionBox[
        RowBox[{"33916558662151", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "41990400000000"], "-", 
       FractionBox[
        RowBox[{"8876820679", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "489888000000"], "+", 
       FractionBox[
        RowBox[{"1974391", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "9797760000"], "-", 
       FractionBox[
        RowBox[{"107", " ", 
         SuperscriptBox["\[Pi]", "11"]}], "149688000"]}], ")"}], " ", 
     SuperscriptBox["z", "11"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"26919044642424368873257", " ", "\[Pi]"}], 
        "272097792000000000000"], "-", 
       FractionBox[
        RowBox[{"7462202539264212553", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "453496320000000000"], "+", 
       FractionBox[
        RowBox[{"2056295769648937", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "2519424000000000"], "-", 
       FractionBox[
        RowBox[{"79132543039", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "4199040000000"], "+", 
       FractionBox[
        RowBox[{"137165317", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "587865600000"], "-", 
       FractionBox[
        RowBox[{"3071", " ", 
         SuperscriptBox["\[Pi]", "11"]}], "2245320000"], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "13"], "6227020800"]}], ")"}], " ", 
     SuperscriptBox["z", "12"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"1615700166389595112025959", " ", "\[Pi]"}], 
        "16325867520000000000000"], "-", 
       FractionBox[
        RowBox[{"448342799392293597511", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "27209779200000000000"], "+", 
       FractionBox[
        RowBox[{"124035085696334119", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "151165440000000000"], "-", 
       FractionBox[
        RowBox[{"33916558662151", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "1763596800000000"], "+", 
       FractionBox[
        RowBox[{"8876820679", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "35271936000000"], "-", 
       FractionBox[
        RowBox[{"1974391", " ", 
         SuperscriptBox["\[Pi]", "11"]}], "1077753600000"], "+", 
       FractionBox[
        RowBox[{"107", " ", 
         SuperscriptBox["\[Pi]", "13"]}], "23351328000"]}], ")"}], " ", 
     SuperscriptBox["z", "13"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"96958799007822681627514633", " ", "\[Pi]"}], 
        "979552051200000000000000"], "-", 
       FractionBox[
        RowBox[{"26919044642424368873257", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "1632586752000000000000"], "+", 
       FractionBox[
        RowBox[{"7462202539264212553", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "9069926400000000000"], "-", 
       FractionBox[
        RowBox[{"2056295769648937", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "105815808000000000"], "+", 
       FractionBox[
        RowBox[{"79132543039", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "302330880000000"], "-", 
       FractionBox[
        RowBox[{"137165317", " ", 
         SuperscriptBox["\[Pi]", "11"]}], "64665216000000"], "+", 
       FractionBox[
        RowBox[{"3071", " ", 
         SuperscriptBox["\[Pi]", "13"]}], "350269920000"], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "15"], "1307674368000"]}], ")"}], " ", 
     SuperscriptBox["z", "14"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"5818032908672660283778222471", " ", "\[Pi]"}], 
        "58773123072000000000000000"], "-", 
       FractionBox[
        RowBox[{"1615700166389595112025959", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "97955205120000000000000"], "+", 
       FractionBox[
        RowBox[{"448342799392293597511", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "544195584000000000000"], "-", 
       FractionBox[
        RowBox[{"124035085696334119", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "6348948480000000000"], "+", 
       FractionBox[
        RowBox[{"33916558662151", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "126978969600000000"], "-", 
       FractionBox[
        RowBox[{"8876820679", " ", 
         SuperscriptBox["\[Pi]", "11"]}], "3879912960000000"], "+", 
       FractionBox[
        RowBox[{"1974391", " ", 
         SuperscriptBox["\[Pi]", "13"]}], "168129561600000"], "-", 
       FractionBox[
        RowBox[{"107", " ", 
         SuperscriptBox["\[Pi]", "15"]}], "4903778880000"]}], ")"}], " ", 
     SuperscriptBox["z", "15"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"349097149662302744969059372777", " ", "\[Pi]"}], 
        "3526387384320000000000000000"], "-", 
       FractionBox[
        RowBox[{"96958799007822681627514633", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "5877312307200000000000000"], "+", 
       FractionBox[
        RowBox[{"26919044642424368873257", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "32651735040000000000000"], "-", 
       FractionBox[
        RowBox[{"7462202539264212553", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "380936908800000000000"], "+", 
       FractionBox[
        RowBox[{"2056295769648937", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "7618738176000000000"], "-", 
       FractionBox[
        RowBox[{"7193867549", " ", 
         SuperscriptBox["\[Pi]", "11"]}], "3023308800000000"], "+", 
       FractionBox[
        RowBox[{"137165317", " ", 
         SuperscriptBox["\[Pi]", "13"]}], "10087773696000000"], "-", 
       FractionBox[
        RowBox[{"3071", " ", 
         SuperscriptBox["\[Pi]", "15"]}], "73556683200000"], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "17"], "355687428096000"]}], ")"}], " ", 
     SuperscriptBox["z", "16"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"20946284758123742763084523020199", " ", "\[Pi]"}], 
        "211583243059200000000000000000"], "-", 
       FractionBox[
        RowBox[{"5818032908672660283778222471", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "352638738432000000000000000"], "+", 
       FractionBox[
        RowBox[{"1615700166389595112025959", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "1959104102400000000000000"], "-", 
       FractionBox[
        RowBox[{"448342799392293597511", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "22856214528000000000000"], "+", 
       FractionBox[
        RowBox[{"124035085696334119", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "457124290560000000000"], "-", 
       FractionBox[
        RowBox[{"3083323514741", " ", 
         SuperscriptBox["\[Pi]", "11"]}], "1269789696000000000"], "+", 
       FractionBox[
        RowBox[{"8876820679", " ", 
         SuperscriptBox["\[Pi]", "13"]}], "605266421760000000"], "-", 
       FractionBox[
        RowBox[{"1974391", " ", 
         SuperscriptBox["\[Pi]", "15"]}], "35307207936000000"], "+", 
       FractionBox[
        RowBox[{"107", " ", 
         SuperscriptBox["\[Pi]", "17"]}], "1333827855360000"]}], ")"}], " ", 
     SuperscriptBox["z", "17"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"1256790769354858960508851434445513", " ", "\[Pi]"}], 
        "12694994583552000000000000000000"], "-", 
       FractionBox[
        RowBox[{"349097149662302744969059372777", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "21158324305920000000000000000"], 
       "+", 
       FractionBox[
        RowBox[{"96958799007822681627514633", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "117546246144000000000000000"], "-", 
       FractionBox[
        RowBox[{"3845577806060624124751", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "195910410240000000000000"], "+", 
       FractionBox[
        RowBox[{"7462202539264212553", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "27427457433600000000000"], "-", 
       FractionBox[
        RowBox[{"2056295769648937", " ", 
         SuperscriptBox["\[Pi]", "11"]}], "838061199360000000000"], "+", 
       FractionBox[
        RowBox[{"7193867549", " ", 
         SuperscriptBox["\[Pi]", "13"]}], "471636172800000000"], "-", 
       FractionBox[
        RowBox[{"137165317", " ", 
         SuperscriptBox["\[Pi]", "15"]}], "2118432476160000000"], "+", 
       FractionBox[
        RowBox[{"3071", " ", 
         SuperscriptBox["\[Pi]", "17"]}], "20007417830400000"], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "19"], "121645100408832000"]}], ")"}], " ", 
     SuperscriptBox["z", "18"]}], "\[Pi]"], "+", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"75407856888133723986383774586393031", " ", "\[Pi]"}], 
        "761699675013120000000000000000000"], "-", 
       FractionBox[
        RowBox[{"20946284758123742763084523020199", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "1269499458355200000000000000000"], 
       "+", 
       FractionBox[
        RowBox[{"5818032908672660283778222471", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "7052774768640000000000000000"], "-", 
       FractionBox[
        RowBox[{"1615700166389595112025959", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "82282372300800000000000000"], "+", 
       FractionBox[
        RowBox[{"448342799392293597511", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "1645647446016000000000000"], "-", 
       FractionBox[
        RowBox[{"124035085696334119", " ", 
         SuperscriptBox["\[Pi]", "11"]}], "50283671961600000000000"], "+", 
       FractionBox[
        RowBox[{"3083323514741", " ", 
         SuperscriptBox["\[Pi]", "13"]}], "198087192576000000000"], "-", 
       FractionBox[
        RowBox[{"8876820679", " ", 
         SuperscriptBox["\[Pi]", "15"]}], "127105948569600000000"], "+", 
       FractionBox[
        RowBox[{"1974391", " ", 
         SuperscriptBox["\[Pi]", "17"]}], "9603560558592000000"], "-", 
       FractionBox[
        RowBox[{"107", " ", 
         SuperscriptBox["\[Pi]", "19"]}], "456169126533120000"]}], ")"}], " ", 
     SuperscriptBox["z", "19"]}], "\[Pi]"], "+", 
   RowBox[{
    FractionBox["1", "\[Pi]"], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       FractionBox[
        RowBox[{"4524483739317223324740768655632419497", " ", "\[Pi]"}], 
        "45701980500787200000000000000000000"], "-", 
       FractionBox[
        RowBox[{"1256790769354858960508851434445513", " ", 
         SuperscriptBox["\[Pi]", "3"]}], "76169967501312000000000000000000"], 
       "+", 
       FractionBox[
        RowBox[{"349097149662302744969059372777", " ", 
         SuperscriptBox["\[Pi]", "5"]}], "423166486118400000000000000000"], 
       "-", 
       FractionBox[
        RowBox[{"96958799007822681627514633", " ", 
         SuperscriptBox["\[Pi]", "7"]}], "4936942338048000000000000000"], "+", 
       FractionBox[
        RowBox[{"3845577806060624124751", " ", 
         SuperscriptBox["\[Pi]", "9"]}], "14105549537280000000000000"], "-", 
       FractionBox[
        RowBox[{"678382049024019323", " ", 
         SuperscriptBox["\[Pi]", "11"]}], "274274574336000000000000"], "+", 
       FractionBox[
        RowBox[{"2056295769648937", " ", 
         SuperscriptBox["\[Pi]", "13"]}], "130737547100160000000000"], "-", 
       FractionBox[
        RowBox[{"7193867549", " ", 
         SuperscriptBox["\[Pi]", "15"]}], "99043596288000000000"], "+", 
       FractionBox[
        RowBox[{"137165317", " ", 
         SuperscriptBox["\[Pi]", "17"]}], "576213633515520000000"], "-", 
       FractionBox[
        RowBox[{"3071", " ", 
         SuperscriptBox["\[Pi]", "19"]}], "6842536897996800000"], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "21"], "51090942171709440000"]}], ")"}], " ", 
     SuperscriptBox["z", "20"]}]}], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "21"],
    SeriesData[$CellContext`z, 0, {}, 0, 21, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 0, {1, 
    Rational[428, 15], Rational[1, 450] (24568 - 75 Pi^2), 
    Rational[1, 27000] (1974391 - 128400 Pi^2), 
    Pi^(-1) (Rational[137165317, 1620000] Pi + Rational[-6142, 675] Pi^3 + 
     Rational[1, 120] Pi^5), 
    Pi^(-1) (Rational[8876820679, 97200000] Pi + 
     Rational[-1974391, 162000] Pi^3 + Rational[107, 450] Pi^5), 
    Pi^(-1) (Rational[553927801273, 5832000000] Pi + 
     Rational[-137165317, 9720000] Pi^3 + Rational[3071, 6750] Pi^5 + 
     Rational[-1, 5040] Pi^7), 
    Pi^(-1) (Rational[33916558662151, 349920000000] Pi + 
     Rational[-8876820679, 583200000] Pi^3 + Rational[1974391, 3240000] Pi^5 + 
     Rational[-107, 18900] Pi^7), 
    Pi^(-1) (Rational[2056295769648937, 20995200000000] Pi + 
     Rational[-553927801273, 34992000000] Pi^3 + 
     Rational[137165317, 194400000] Pi^5 + Rational[-3071, 283500] Pi^7 + 
     Rational[1, 362880] Pi^9), 
    Pi^(-1) (Rational[124035085696334119, 1259712000000000] Pi + 
     Rational[-33916558662151, 2099520000000] Pi^3 + 
     Rational[8876820679, 11664000000] Pi^5 + 
     Rational[-1974391, 136080000] Pi^7 + Rational[107, 1360800] Pi^9), 
    Pi^(-1) (Rational[7462202539264212553, 75582720000000000] Pi + 
     Rational[-2056295769648937, 125971200000000] Pi^3 + 
     Rational[553927801273, 699840000000] Pi^5 + 
     Rational[-137165317, 8164800000] Pi^7 + Rational[3071, 20412000] Pi^9 + 
     Rational[-1, 39916800] Pi^11), 
    Pi^(-1) (Rational[448342799392293597511, 4534963200000000000] Pi + 
     Rational[-124035085696334119, 7558272000000000] Pi^3 + 
     Rational[33916558662151, 41990400000000] Pi^5 + 
     Rational[-8876820679, 489888000000] Pi^7 + 
     Rational[1974391, 9797760000] Pi^9 + Rational[-107, 149688000] Pi^11), 
    Pi^(-1) (Rational[26919044642424368873257, 272097792000000000000] Pi + 
     Rational[-7462202539264212553, 453496320000000000] Pi^3 + 
     Rational[2056295769648937, 2519424000000000] Pi^5 + 
     Rational[-79132543039, 4199040000000] Pi^7 + 
     Rational[137165317, 587865600000] Pi^9 + 
     Rational[-3071, 2245320000] Pi^11 + Rational[1, 6227020800] Pi^13), 
    Pi^(-1) (Rational[1615700166389595112025959, 16325867520000000000000] Pi + 
     Rational[-448342799392293597511, 27209779200000000000] Pi^3 + 
     Rational[124035085696334119, 151165440000000000] Pi^5 + 
     Rational[-33916558662151, 1763596800000000] Pi^7 + 
     Rational[8876820679, 35271936000000] Pi^9 + 
     Rational[-1974391, 1077753600000] Pi^11 + 
     Rational[107, 23351328000] Pi^13), 
    Pi^(-1) (Rational[96958799007822681627514633, 979552051200000000000000] 
      Pi + Rational[-26919044642424368873257, 1632586752000000000000] Pi^3 + 
     Rational[7462202539264212553, 9069926400000000000] Pi^5 + 
     Rational[-2056295769648937, 105815808000000000] Pi^7 + 
     Rational[79132543039, 302330880000000] Pi^9 + 
     Rational[-137165317, 64665216000000] Pi^11 + 
     Rational[3071, 350269920000] Pi^13 + Rational[-1, 1307674368000] Pi^15), 
    Pi^(-1) (Rational[
       5818032908672660283778222471, 58773123072000000000000000] Pi + 
     Rational[-1615700166389595112025959, 97955205120000000000000] Pi^3 + 
     Rational[448342799392293597511, 544195584000000000000] Pi^5 + 
     Rational[-124035085696334119, 6348948480000000000] Pi^7 + 
     Rational[33916558662151, 126978969600000000] Pi^9 + 
     Rational[-8876820679, 3879912960000000] Pi^11 + 
     Rational[1974391, 168129561600000] Pi^13 + 
     Rational[-107, 4903778880000] Pi^15), 
    Pi^(-1) (Rational[
       349097149662302744969059372777, 3526387384320000000000000000] Pi + 
     Rational[-96958799007822681627514633, 5877312307200000000000000] Pi^3 + 
     Rational[26919044642424368873257, 32651735040000000000000] Pi^5 + 
     Rational[-7462202539264212553, 380936908800000000000] Pi^7 + 
     Rational[2056295769648937, 7618738176000000000] Pi^9 + 
     Rational[-7193867549, 3023308800000000] Pi^11 + 
     Rational[137165317, 10087773696000000] Pi^13 + 
     Rational[-3071, 73556683200000] Pi^15 + 
     Rational[1, 355687428096000] Pi^17), 
    Pi^(-1) (Rational[
       20946284758123742763084523020199, 211583243059200000000000000000] Pi + 
     Rational[-5818032908672660283778222471, 352638738432000000000000000] 
      Pi^3 + Rational[1615700166389595112025959, 1959104102400000000000000] 
      Pi^5 + Rational[-448342799392293597511, 22856214528000000000000] Pi^7 + 
     Rational[124035085696334119, 457124290560000000000] Pi^9 + 
     Rational[-3083323514741, 1269789696000000000] Pi^11 + 
     Rational[8876820679, 605266421760000000] Pi^13 + 
     Rational[-1974391, 35307207936000000] Pi^15 + 
     Rational[107, 1333827855360000] Pi^17), 
    Pi^(-1) (Rational[
       1256790769354858960508851434445513, 12694994583552000000000000000000] 
      Pi + Rational[-349097149662302744969059372777, 
        21158324305920000000000000000] Pi^3 + 
     Rational[96958799007822681627514633, 117546246144000000000000000] Pi^5 + 
     Rational[-3845577806060624124751, 195910410240000000000000] Pi^7 + 
     Rational[7462202539264212553, 27427457433600000000000] Pi^9 + 
     Rational[-2056295769648937, 838061199360000000000] Pi^11 + 
     Rational[7193867549, 471636172800000000] Pi^13 + 
     Rational[-137165317, 2118432476160000000] Pi^15 + 
     Rational[3071, 20007417830400000] Pi^17 + 
     Rational[-1, 121645100408832000] Pi^19), 
    Pi^(-1) (Rational[
       75407856888133723986383774586393031, 761699675013120000000000000000000]
        Pi + Rational[-20946284758123742763084523020199, 
        1269499458355200000000000000000] Pi^3 + 
     Rational[5818032908672660283778222471, 7052774768640000000000000000] 
      Pi^5 + Rational[-1615700166389595112025959, 82282372300800000000000000] 
      Pi^7 + Rational[448342799392293597511, 1645647446016000000000000] Pi^9 + 
     Rational[-124035085696334119, 50283671961600000000000] Pi^11 + 
     Rational[3083323514741, 198087192576000000000] Pi^13 + 
     Rational[-8876820679, 127105948569600000000] Pi^15 + 
     Rational[1974391, 9603560558592000000] Pi^17 + 
     Rational[-107, 456169126533120000] Pi^19), 
    Pi^(-1) (Rational[
       4524483739317223324740768655632419497, 
        45701980500787200000000000000000000] Pi + 
     Rational[-1256790769354858960508851434445513, 
        76169967501312000000000000000000] Pi^3 + 
     Rational[349097149662302744969059372777, 423166486118400000000000000000] 
      Pi^5 + Rational[-96958799007822681627514633, 
        4936942338048000000000000000] Pi^7 + 
     Rational[3845577806060624124751, 14105549537280000000000000] Pi^9 + 
     Rational[-678382049024019323, 274274574336000000000000] Pi^11 + 
     Rational[2056295769648937, 130737547100160000000000] Pi^13 + 
     Rational[-7193867549, 99043596288000000000] Pi^15 + 
     Rational[137165317, 576213633515520000000] Pi^17 + 
     Rational[-3071, 6842536897996800000] Pi^19 + 
     Rational[1, 51090942171709440000] Pi^21)}, 0, 21, 1],
  Editable->False]], "Output",
 CellChangeTimes->{{3.6824635902560267`*^9, 3.68246362037875*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], " ", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", " ", "-", "k"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", "x", ")"}], "^", "k"}], ")"}], "/", 
        RowBox[{"k", "!"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6824667831956525`*^9, 3.682466813784402*^9}, {
  3.682466851097536*^9, 3.6824668564718437`*^9}, {3.6824669438888435`*^9, 
  3.682466969296297*^9}, {3.682467018727124*^9, 3.682467076630436*^9}, {
  3.6824672498873453`*^9, 3.682467263143104*^9}, {3.682467356053418*^9, 
  3.682467368183112*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["x", "z"], 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "z"}], "]"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"ExpIntegralE", "[", 
     RowBox[{
      RowBox[{"1", "+", "z"}], ",", "x"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]}]], "Output",
 CellChangeTimes->{
  3.6824668143014317`*^9, 3.6824668569618716`*^9, {3.6824669450909123`*^9, 
   3.6824669696173153`*^9}, {3.6824670196961794`*^9, 
   3.6824670772554717`*^9}, {3.6824672539255767`*^9, 3.682467263875146*^9}, {
   3.6824673609867*^9, 3.6824673687891464`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"ExpIntegralE", "[", 
      RowBox[{
       RowBox[{"1", "+", "z"}], ",", "20."}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682467121262989*^9, 3.682467131750589*^9}, {
  3.6824679041957703`*^9, 3.6824679057318583`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
YjWpGQYL+JW73XM6zaVAWb4qJVl8AZ/kZ30831YCFA6XJd6nzOPILWKJrr4I
CFvkx9iKzuM1d3/Y1KzlgqK90VWGjPP4iyN/TrX8yQHma+7janN/8W8fKujM
JrPB41R5LY66v/jQTT+97qZMsDX1cqjq1l98/GuUwo9HH8BkaPBBqc4/+Ai+
T0j34yvgezY2ESrP4SGkmjWNTw9h5qLJTDz9HP6jw0uZk/8JHH3NRPDtmcWP
a8SInNeJgVbjgT9kHs3iTi6OihxpLyH2n6NGxNRvPOFIS5WexRvIl77/u96n
GdwGJhuZK3+CJsYTipLhM7i6WZj+v8OZ8N7v1OAFqxkcfVNLEjieBVc1BXZ9
YJnBIzv3SGsa5cCRplU/ZrdfOP1xhYPFRp9h0TKNt373TzynmKqc6lcMn2W/
J+uuTeNl36RVxueKobdj+M3S5mn8bEn9l7yrJXB3rVbf+1vTeDp+ZH+WcylM
iM/JCK2fwvHxm98vaJVD/1NRtospU3jyiQTPhqxyePafC5e33xQuaHHteIR4
BWRzlfG3kZjCJchXiHELFfD20Vhw5OoPnEBQa7odWwWtpnz+ZBF+4GKeJ+eU
FqvgkRSTdDnhH/ipsycUBi2q4QwjEzsPcRI/IrTXRJ+vBjp+u/V9incSB95C
4yd9IdR+eOHhpfEJ/OuYdUMIglD0uKp2Z8UEXr8URHvIR4Rt76ffUpwn8JNJ
bn4c2USo5+/gnVo8jodvNL88SsahzN5jMsJR43gZm2G0IT2CGz3CX6MdxvHV
RzGXjOUQLDnRqvEf8zh+79xUQpMdgjFLOdNzPWP48zsqEia3EPTJikpxyx/D
/yg893sVg+Befj0GC+sxfDHAojmJhCADTaa0cf8YPs+u/s60e4d3gjbcT9CN
4e9cXaYafiNYo9ItUfF9FP9xg6DHw0CCicMlzQezRnFenxgXcWESDHgZG/Ex
dBQfj3wt+XMvCZ4z9j0idX4UP/JHzSRckwQPbppMxu0dxc2926e7jEiQo0Dx
NfvGCL6x+pFjwYIEJ68wnYloHcEbZBO/tTqTIEV0ZGs5fQT/cds50seHBNO+
wEKfoBGcPifO+0sgCYaEJ7mMn9nx//hmfSqCBG2OBIray4/gH64MFNKiSFD9
x4XGr0vD+L8fyfucn5OgQLJqqHHjMD6QLSJc/ZIEZ824VfHUYfyj/R2tb4kk
+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
Ppq1P39nG4Ummj9P5Wn7+Ci2VXbKU5kGXa3b9D/s5qPF1pe3HVlKg2c0VTsJ
Rz668IByM34ZDbwGsk2SrfiIYpY9nqlNA5dfnSOHNvDRDT7dvESPBgb5Nzyr
lvOR+vrcjDoDGpA2nWK7UfiouFJjuHMjDRaMxWntXcBHnEKd81MWNFDR/O9p
3mseMtUofye1lQbpOQdH3zXwUFPOmtXM7TQo5GQQ4gp46PnVjS+t3GhQa0+y
kA7hITcS1trlSQNy8DH53w481JcKp4L20uBDjb2rwxoeGo3fsvRyEA2MVaXw
njEuChN7Gnr3CA1eLG32VGrhoplT25t5ETQQmuw6vC2fixaFuRx4f5oGZ9/9
+KLhzEVqPr7slVdo8OTqoqJ/uRxU+HZIYlM2DXbXGZ99JuJpPbcDu5xzaHCk
fZu5Loj4e8eRfyeLaOBR5Wdz93UtckUx1o8xDeQ7nwx/mapBb38NyTY20iDb
KdHlYV0N2lu2/ZXgkajfzfrvd8XVoCAmY195p0i/hfYcf3ENip2H464O0mBY
2s27Q5yNyppn6vyklSH90sSxnuZKZBC9N8GLpAyhzYvWLjtRiXjrW+zcFJUh
9VHXwEGdStRUcO2tjaoyOHqNLxVLrUDdSYYza9Ypg0prZWlmUhkS3x6xbp6n
MkjlmVI4lCKULPFudsZHGfZUhvKO+hQi2Xqrpol9ynDmvOmijuICRNMnO30K
UYbaSEZT3Ma7SI/EDmmPV4bVJQXPl1rnIfeX30tuliqDz1mrGz6B2ajS65Ca
0awyCOgOSn6bndDemm/02/NU4KBtacxsNmAFQjhVYpEKyKKep5RxHxzBOyn3
nKgCvzipP1MFEdhIIfHf/uUqcMWveZ43KQk3PmH1XHNUAUWeG3mteDYOW6r5
cs5VBVY/VV3yvuQ61jhW1OnvqQLEPSmXwhxu4gSNiserA1VA71FrzOi229gm
Btc+iVKBw7lu2Yan8/ALg9eXpgtVILd0y7gMqwifTfFI21OmAocM3E2CvIrx
+o/vkpqrVaCB1vaqV6kEZ10YPH2xTgWEuUdiWs6VYs+RH8ErXqiAxdqpoP22
5VhmU8SBC90qQCfLKiyeKscNmdP+v96pgHRnx78S+wqsZiXmef+zCgR6HT8f
PFmBh3KkbXbNqcBF0z/bl66twpmT6ZvrxelAmOvXp8RUYWs7BfNlknRQz94a
zX1ShYtnaBu/K9AhOLJy7qt7NT7sorU8SZsOO65GXrocxMZLS0vUxvXo0CDR
QPe9x8bP5+sxXNbR4dDzz9+4o2xsULGOrAp0GD3Ut2NoXw2ekrRYwHOhw6np
aNpL61pMGpPJaHSnw7XtvyzHTtRinc4ejdY9dGgde+XLKqrFXpmhm/v20+H2
qY2BXeIcfOyk6atPwXS4d396eps+B6d7Sgb+CKPD3sNTr51EeeGBOitpYTQd
Nu2Qa5ctFuUJiWCabBwdpI4Gbqlr5+DJzxtLlBLpIK97v33iJwdrVXS26lyi
w7qKro7vG7jY/PJNz3WZIn0j0n5sVy72iNg/ZnqDDmFBsSa/j3Jxmsk8Oce7
dJiMWvRr8h4XFzKf3fYooYN2eEBpxSMuvj//2mr/CjrkNTxzHejj4p5Bv8bg
GjpYaN66lT4p4rfH+k7H+XT412UJbCkelimd7T9TT4dvH7YobGfy8PILj8NT
mugAzq6Snqt5GEIzFl55Itov10P7/SYednfxvnqrjQ6b62MzXtrzcLih7vLC
LjrM3LM5Y+bFw6nKU5zK13SQSE3fRDvAw3f/PbAW9NKhauUF033hPNzw4UJ3
00eRfq1v02pRPPyjYPmfV6Oifk5V6n5N4uFlwfUqXybpsOU7syMinYfdDFxN
/4kxYHf9X5960XfyzNgeohQDlK7uGX6UzMP5vfxvNDkG1Cf2fAg/y8O4IeGM
BpkBrgKt0UvRPPwyz5G0isaAxozKDLUIUb5KYORtYDLArmV5rEYQD0seGFm7
SYMhystRYde8eVjdrrZp2woG9Hu9MIt14mET/VgX51UMoNwOfdlnKeJj+e1D
nmsZ8EKyzLTagIdDJqnHAgwZEPD1TeZfNR5O6h5cdAQxwFgKURtkeViYE7Ui
fgsDztnWfKoS5b+XsVv5qbYMSF6lpjLUysXj/mSbTAcGaHmbmGdWc7Ga7r2g
Yg8GGDK61p4U5Udj2RN/q70Z4Bi08Xa5Fxc7/7BMw/4MqG7qhwNmXHyO+7a8
4zADrp466nVsloNvXy+EnnAGuDvJGLS95mB+dHhn/wkGFBhJjFdVc/CoJeHn
ZBwDdDUIdXr+HOzYabyensWADcfaDMw4tVjSWOq+8CYDznp13GmIrcX383ts
dueJ9OgUrkq3rcX6x0/4XC9jgMvVBc+139RgGSbnPLWZAe2nAnzbBtj4YWKC
Iq+FAWu8+8rN8tg46ocLy62DAf9uyLzV8Gbj0eYJTuYbBpRIU//s+a8aPwla
00/+wYATK3/Wri2rwqdfzguu+c2AiFHXi73eVdgQOqec/zIgmDN9UotUhe/K
h8hkLGYCGCoq8kMqcTz/3kYSkwmqWZfXRDMqMCxekS5jy4T1yOxqS3wxnjoy
RStzYILM4i52QFMRLn/z6I6dKxPMpkgvl84vwozyfYLze5mw122ervrxAjzr
kj8keYIJDf9tr5a3z8ecPCZadJcJIZfazt8/eR0HS48/ulvChG42r1eq9RrW
PFbnuLmSCdVSAYGJylk4Y5tn4FkhE6IdxwU3ajJw6Pfsywu6mNBbaHGwojoF
a3scYOS9ZsLJx3InqiARf2jaWGT+jglhE/dV9FvjsX3W67ozn0X1R7aecas/
hRfPL9yqOs6E/DjSqG9HOK4/eOxFwwQTZItYZyXuH8QR/23e4z3DhMB7BYd/
N3jg/78XDnCzd+TE4lPC/wH4m+iM
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-8, 8}, {-4.4266294405964165`*^-11, 4.719798703202128*^-11}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.6824671321966143`*^9, 3.682467906188884*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "k"}], " ", ")"}]}], 
      RowBox[{
       RowBox[{"x", "^", "k"}], "/", 
       RowBox[{"k", "!"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.682467422573223*^9, 3.6824674886290007`*^9}, {
  3.6824675192837543`*^9, 3.6824675196687765`*^9}, {3.6824675682895575`*^9, 
  3.6824675690876026`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ExpIntegralE", "[", 
   RowBox[{
    RowBox[{"1", "+", "z"}], ",", 
    RowBox[{"-", "x"}]}], "]"}], "-", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "x"}], ")"}], "z"], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"-", "z"}], "]"}]}]}]], "Output",
 CellChangeTimes->{{3.6824674265014477`*^9, 3.682467520766839*^9}, 
   3.682467569423622*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
       RowBox[{"(", "k", " ", ")"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"(", "x", ")"}], "^", "k"}], ")"}], "/", 
       RowBox[{"k", "!"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", "Infinity"}], "}"}]}], "]"}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.682467500481679*^9, 3.6824675006376877`*^9}, {
  3.6824675870286293`*^9, 3.6824676292040415`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "EulerGamma"}], "-", 
  RowBox[{"Gamma", "[", 
   RowBox[{"0", ",", "x"}], "]"}], "-", 
  RowBox[{"Log", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{
  3.6824675011307163`*^9, {3.6824675896357784`*^9, 3.682467629492058*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], " ", 
    RowBox[{"Integrate", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", " ", "-", "k"}], ")"}]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"(", "x", ")"}], "^", "k"}], ")"}], "/", 
        RowBox[{"k", "!"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.682467830856575*^9, 3.6824678343717766`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      FractionBox[
       RowBox[{
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "k"], " ", 
        SuperscriptBox["x", "k"]}], 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"-", "k"}], "+", "z"}], ")"}], " ", 
        RowBox[{"k", "!"}]}]], 
      RowBox[{"\[DifferentialD]", "k"}]}]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]], "Output",
 CellChangeTimes->{3.682467852527815*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ExpIntegralE", "[", 
    RowBox[{
     RowBox[{"1", "+", "z"}], ",", "20."}], "]"}], " ", ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "8"}], ",", "8"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6824679293222075`*^9, 3.6824679320573635`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwBMQTO+yFib1JlAgAAAEIAAAACAAAALj8W6v//H8AtqB/POxHlPW/5I4j5
+h/Ah+p0hnAP5T2wszEm8/UfwDSCIYalDeU9MihNYubrH8Bm1EBeEArlPTcR
hNrM1x/AKO7Zb+kC5T1A4/HKma8fwHS7kwqp9OQ9UofNqzNfH8BPOPmvXdjk
PXfPhG1nvh7A9IdDV5mg5D3U1AvqwWEdwLLTJuBSK+Q9HcBvFDccHMCX1sMW
HcLjPbVrxAUP3RrAldh6Csde4z1gjDHw2YIZwGRJG0IQ9+I9+JJ7iL8/GMDv
a8N43pniPaMO3hmY4RbAyFNaopY44j2cSjFy04kVwLxCtOml3OE9gmxheClJ
FMCS7YLz6InhPXsDqndy7RLAdvmjElMz4T1hgM8k1qgRwMiuCYhK5eA9lb3l
mJxqEMBAt+p8SpvgPbrfKAysIg7Agj2SmqpN4D0jEEBCVJ4LwLIh7GefB+A9
siqIauLjCMAzxJDMWnzfPd/FsSA2NgbAH5SHe+/w3j3lLJUyv7YDwBP/fT/9
ct49EX6pNi4BAcCsRma5ou7dPSw27yyl8/y/zdTmIup23T2DRO3QuXj3v2uN
Hzkp+dw9FVSukFkX8r/x9AaPioHcPbL2xQ/IJOq/Lhu/uzsV3D2l2+WN6YTe
v4fB2308o9s9XVEctNtjxL9aQJoW5DvbPbkKe9XCdcM/u1LgglrZ2j014gEe
gVjfP+e4+fdwcdo9I/C7+TrC6T9TF3HGKRPaPUmj2c1OWPI/ImxL3syv2T1F
TRID9bX3PwU6gBj9UNk9j1/XgDC3/D9aH1aQ5/rYPcdOHQ1QEgFAqWHhegOg
2D3tIRV+0poDQAP19fJkTdg9dXQrYY8WBkApiepRaf7XPdfcEFJmyAhAwtkm
C+Cq1z1geTznB0wLQOcKj2zlXtc9wys3isMFDkCtfqBRlw7XPSYJvOikSBBA
ylN5dXjF1j0dvGtFBYgRQDDuW6l4f9Y9APoCqXLiEkAQtR77XTXWPfdRvV7F
JRRAOY7YzNvx1T3bNF8bJYQVQCAoAfFwqtU9cFcQESLcFkBBLs8/BmbVPRmU
5FgEHRhAym4HK6sn1T2uW6Cn83gZQBGoB9iZ5dQ9Vz1/SMi9GkBnMorWUqnU
PbFebSI6/BtAuPiy/oBv1D34CkMDuVUdQBV/AvMmMtQ9UtE7Nh2YHkCsGNs9
KPrTPTB4eWGbrh5AK1reb0v20z0OH7eMGcUeQNUbGhdw8tM9yWwy4xXyHkCn
8wHCverTPUAIKZAOTB9A5jYjc2rb0z0er2a7jGIfQL2hdjiZ19M9/FWk5gp5
H0AAN59sydPTPbejHz0Hph9AoxRJHi7M0z2USl1ohbwfQOBfOJpiyNM9cvGa
kwPTH0DA2tiBmMTTPVCY2L6B6R9AJO5i1M/A0z0uPxbq//8fQJGRD5EIvdM9
hWgEuA==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 7.5*^-11},
  PlotRange->{{-8, 8}, {7.180792442017571*^-11, 1.5328491909958292`*^-10}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.6824679330824223`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1.4", "+", "1.7", "+", "1.7"}]], "Input",
 CellChangeTimes->{{3.6824681568862233`*^9, 3.6824681633215914`*^9}}],

Cell[BoxData["4.8`"], "Output",
 CellChangeTimes->{3.6824681640666337`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], "  ", 
       RowBox[{"Binomial", "[", 
        RowBox[{"x", ",", "k"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.682468273464891*^9, 3.6824683472571115`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "+", "x"}], "]"}], 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "x", "-", "z"}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "z"}], "]"}]}]]], "Output",
 CellChangeTimes->{{3.6824682908298845`*^9, 3.682468348082159*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Series", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
      RowBox[{"(", 
       RowBox[{"z", "-", "k"}], ")"}]}], 
     RowBox[{
      RowBox[{"x", "^", "k"}], "/", 
      RowBox[{"k", "!"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "0", ",", "20"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6824686818192472`*^9, 3.6824687482300463`*^9}}],

Cell[BoxData[
 InterpretationBox[
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "k"], " ", 
      SuperscriptBox["x", "k"], " ", "z"}], 
     RowBox[{
      SuperscriptBox["k", "2"], " ", 
      RowBox[{"Gamma", "[", "k", "]"}]}]]}], "-", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "2"]}], 
    RowBox[{
     SuperscriptBox["k", "3"], " ", 
     RowBox[{"Gamma", "[", "k", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "3"]}], 
    RowBox[{"6", " ", 
     SuperscriptBox["k", "4"], " ", 
     RowBox[{"Gamma", "[", "k", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "6"}], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        SuperscriptBox["\[Pi]", "2"]}]}], ")"}], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "4"]}], 
    RowBox[{"6", " ", 
     SuperscriptBox["k", "5"], " ", 
     RowBox[{"Gamma", "[", "k", "]"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "k"], " ", 
       RowBox[{"(", 
        RowBox[{"120", "-", 
         RowBox[{"20", " ", 
          SuperscriptBox["k", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["k", "4"], " ", 
          SuperscriptBox["\[Pi]", "4"]}]}], ")"}], " ", 
       SuperscriptBox["x", "k"]}], ")"}], " ", 
     SuperscriptBox["z", "5"]}], 
    RowBox[{"120", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "6"], " ", 
       RowBox[{"Gamma", "[", "k", "]"}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "k"], " ", 
       RowBox[{"(", 
        RowBox[{"120", "-", 
         RowBox[{"20", " ", 
          SuperscriptBox["k", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], "+", 
         RowBox[{
          SuperscriptBox["k", "4"], " ", 
          SuperscriptBox["\[Pi]", "4"]}]}], ")"}], " ", 
       SuperscriptBox["x", "k"]}], ")"}], " ", 
     SuperscriptBox["z", "6"]}], 
    RowBox[{"120", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "7"], " ", 
       RowBox[{"Gamma", "[", "k", "]"}]}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "5040"}], "+", 
       RowBox[{"840", " ", 
        SuperscriptBox["k", "2"], " ", 
        SuperscriptBox["\[Pi]", "2"]}], "-", 
       RowBox[{"42", " ", 
        SuperscriptBox["k", "4"], " ", 
        SuperscriptBox["\[Pi]", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["k", "6"], " ", 
        SuperscriptBox["\[Pi]", "6"]}]}], ")"}], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "7"]}], 
    RowBox[{"5040", " ", 
     SuperscriptBox["k", "8"], " ", 
     RowBox[{"Gamma", "[", "k", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "5040"}], "+", 
       RowBox[{"840", " ", 
        SuperscriptBox["k", "2"], " ", 
        SuperscriptBox["\[Pi]", "2"]}], "-", 
       RowBox[{"42", " ", 
        SuperscriptBox["k", "4"], " ", 
        SuperscriptBox["\[Pi]", "4"]}], "+", 
       RowBox[{
        SuperscriptBox["k", "6"], " ", 
        SuperscriptBox["\[Pi]", "6"]}]}], ")"}], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "8"]}], 
    RowBox[{"5040", " ", 
     SuperscriptBox["k", "9"], " ", 
     RowBox[{"Gamma", "[", "k", "]"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "k"], " ", 
       RowBox[{"(", 
        RowBox[{"362880", "-", 
         RowBox[{"60480", " ", 
          SuperscriptBox["k", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], "+", 
         RowBox[{"3024", " ", 
          SuperscriptBox["k", "4"], " ", 
          SuperscriptBox["\[Pi]", "4"]}], "-", 
         RowBox[{"72", " ", 
          SuperscriptBox["k", "6"], " ", 
          SuperscriptBox["\[Pi]", "6"]}], "+", 
         RowBox[{
          SuperscriptBox["k", "8"], " ", 
          SuperscriptBox["\[Pi]", "8"]}]}], ")"}], " ", 
       SuperscriptBox["x", "k"]}], ")"}], " ", 
     SuperscriptBox["z", "9"]}], 
    RowBox[{"362880", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "9"], " ", 
       RowBox[{"k", "!"}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "k"], " ", 
       RowBox[{"(", 
        RowBox[{"362880", "-", 
         RowBox[{"60480", " ", 
          SuperscriptBox["k", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"]}], "+", 
         RowBox[{"3024", " ", 
          SuperscriptBox["k", "4"], " ", 
          SuperscriptBox["\[Pi]", "4"]}], "-", 
         RowBox[{"72", " ", 
          SuperscriptBox["k", "6"], " ", 
          SuperscriptBox["\[Pi]", "6"]}], "+", 
         RowBox[{
          SuperscriptBox["k", "8"], " ", 
          SuperscriptBox["\[Pi]", "8"]}]}], ")"}], " ", 
       SuperscriptBox["x", "k"]}], ")"}], " ", 
     SuperscriptBox["z", "10"]}], 
    RowBox[{"362880", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "11"], " ", 
       RowBox[{"Gamma", "[", "k", "]"}]}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "39916800"}], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        SuperscriptBox["\[Pi]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"6652800", "-", 
          RowBox[{"332640", " ", 
           SuperscriptBox["k", "2"], " ", 
           SuperscriptBox["\[Pi]", "2"]}], "+", 
          RowBox[{"7920", " ", 
           SuperscriptBox["k", "4"], " ", 
           SuperscriptBox["\[Pi]", "4"]}], "-", 
          RowBox[{"110", " ", 
           SuperscriptBox["k", "6"], " ", 
           SuperscriptBox["\[Pi]", "6"]}], "+", 
          RowBox[{
           SuperscriptBox["k", "8"], " ", 
           SuperscriptBox["\[Pi]", "8"]}]}], ")"}]}]}], ")"}], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "11"]}], 
    RowBox[{"39916800", " ", 
     SuperscriptBox["k", "12"], " ", 
     RowBox[{"Gamma", "[", "k", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "39916800"}], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        SuperscriptBox["\[Pi]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"6652800", "-", 
          RowBox[{"332640", " ", 
           SuperscriptBox["k", "2"], " ", 
           SuperscriptBox["\[Pi]", "2"]}], "+", 
          RowBox[{"7920", " ", 
           SuperscriptBox["k", "4"], " ", 
           SuperscriptBox["\[Pi]", "4"]}], "-", 
          RowBox[{"110", " ", 
           SuperscriptBox["k", "6"], " ", 
           SuperscriptBox["\[Pi]", "6"]}], "+", 
          RowBox[{
           SuperscriptBox["k", "8"], " ", 
           SuperscriptBox["\[Pi]", "8"]}]}], ")"}]}]}], ")"}], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "12"]}], 
    RowBox[{"39916800", " ", 
     SuperscriptBox["k", "13"], " ", 
     RowBox[{"Gamma", "[", "k", "]"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "k"], " ", 
       RowBox[{"(", 
        RowBox[{"6227020800", "+", 
         RowBox[{
          SuperscriptBox["k", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1037836800"}], "+", 
            RowBox[{
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["\[Pi]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"51891840", "-", 
               RowBox[{"1235520", " ", 
                SuperscriptBox["k", "2"], " ", 
                SuperscriptBox["\[Pi]", "2"]}], "+", 
               RowBox[{"17160", " ", 
                SuperscriptBox["k", "4"], " ", 
                SuperscriptBox["\[Pi]", "4"]}], "-", 
               RowBox[{"156", " ", 
                SuperscriptBox["k", "6"], " ", 
                SuperscriptBox["\[Pi]", "6"]}], "+", 
               RowBox[{
                SuperscriptBox["k", "8"], " ", 
                SuperscriptBox["\[Pi]", "8"]}]}], ")"}]}]}], ")"}]}]}], ")"}],
        " ", 
       SuperscriptBox["x", "k"]}], ")"}], " ", 
     SuperscriptBox["z", "13"]}], 
    RowBox[{"6227020800", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "14"], " ", 
       RowBox[{"Gamma", "[", "k", "]"}]}], ")"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "k"], " ", 
       RowBox[{"(", 
        RowBox[{"6227020800", "+", 
         RowBox[{
          SuperscriptBox["k", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "1037836800"}], "+", 
            RowBox[{
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["\[Pi]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"51891840", "-", 
               RowBox[{"1235520", " ", 
                SuperscriptBox["k", "2"], " ", 
                SuperscriptBox["\[Pi]", "2"]}], "+", 
               RowBox[{"17160", " ", 
                SuperscriptBox["k", "4"], " ", 
                SuperscriptBox["\[Pi]", "4"]}], "-", 
               RowBox[{"156", " ", 
                SuperscriptBox["k", "6"], " ", 
                SuperscriptBox["\[Pi]", "6"]}], "+", 
               RowBox[{
                SuperscriptBox["k", "8"], " ", 
                SuperscriptBox["\[Pi]", "8"]}]}], ")"}]}]}], ")"}]}]}], ")"}],
        " ", 
       SuperscriptBox["x", "k"]}], ")"}], " ", 
     SuperscriptBox["z", "14"]}], 
    RowBox[{"6227020800", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "15"], " ", 
       RowBox[{"Gamma", "[", "k", "]"}]}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[Pi]", 
         SuperscriptBox["k", "15"]]}], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "3"], 
        RowBox[{"6", " ", 
         SuperscriptBox["k", "13"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "5"], 
        RowBox[{"120", " ", 
         SuperscriptBox["k", "11"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "7"], 
        RowBox[{"5040", " ", 
         SuperscriptBox["k", "9"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "9"], 
        RowBox[{"362880", " ", 
         SuperscriptBox["k", "7"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "11"], 
        RowBox[{"39916800", " ", 
         SuperscriptBox["k", "5"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "13"], 
        RowBox[{"6227020800", " ", 
         SuperscriptBox["k", "3"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "15"], 
        RowBox[{"1307674368000", " ", "k"}]]}], ")"}], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "15"]}], 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"k", "!"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1307674368000"}], "+", 
       RowBox[{
        SuperscriptBox["k", "2"], " ", 
        SuperscriptBox["\[Pi]", "2"], " ", 
        RowBox[{"(", 
         RowBox[{"217945728000", "+", 
          RowBox[{
           SuperscriptBox["k", "2"], " ", 
           SuperscriptBox["\[Pi]", "2"], " ", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"-", "10897286400"}], "+", 
             RowBox[{
              SuperscriptBox["k", "2"], " ", 
              SuperscriptBox["\[Pi]", "2"], " ", 
              RowBox[{"(", 
               RowBox[{"259459200", "-", 
                RowBox[{"3603600", " ", 
                 SuperscriptBox["k", "2"], " ", 
                 SuperscriptBox["\[Pi]", "2"]}], "+", 
                RowBox[{"32760", " ", 
                 SuperscriptBox["k", "4"], " ", 
                 SuperscriptBox["\[Pi]", "4"]}], "-", 
                RowBox[{"210", " ", 
                 SuperscriptBox["k", "6"], " ", 
                 SuperscriptBox["\[Pi]", "6"]}], "+", 
                RowBox[{
                 SuperscriptBox["k", "8"], " ", 
                 SuperscriptBox["\[Pi]", "8"]}]}], ")"}]}]}], ")"}]}]}], 
         ")"}]}]}], ")"}], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "16"]}], 
    RowBox[{"1307674368000", " ", 
     SuperscriptBox["k", "17"], " ", 
     RowBox[{"Gamma", "[", "k", "]"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[Pi]", 
         SuperscriptBox["k", "17"]]}], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "3"], 
        RowBox[{"6", " ", 
         SuperscriptBox["k", "15"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "5"], 
        RowBox[{"120", " ", 
         SuperscriptBox["k", "13"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "7"], 
        RowBox[{"5040", " ", 
         SuperscriptBox["k", "11"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "9"], 
        RowBox[{"362880", " ", 
         SuperscriptBox["k", "9"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "11"], 
        RowBox[{"39916800", " ", 
         SuperscriptBox["k", "7"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "13"], 
        RowBox[{"6227020800", " ", 
         SuperscriptBox["k", "5"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "15"], 
        RowBox[{"1307674368000", " ", 
         SuperscriptBox["k", "3"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "17"], 
        RowBox[{"355687428096000", " ", "k"}]]}], ")"}], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "17"]}], 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"k", "!"}]}]], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "k"], " ", 
       RowBox[{"(", 
        RowBox[{"355687428096000", "+", 
         RowBox[{
          SuperscriptBox["k", "2"], " ", 
          SuperscriptBox["\[Pi]", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"-", "59281238016000"}], "+", 
            RowBox[{
             SuperscriptBox["k", "2"], " ", 
             SuperscriptBox["\[Pi]", "2"], " ", 
             RowBox[{"(", 
              RowBox[{"2964061900800", "+", 
               RowBox[{
                SuperscriptBox["k", "2"], " ", 
                SuperscriptBox["\[Pi]", "2"], " ", 
                RowBox[{"(", 
                 RowBox[{
                  RowBox[{"-", "70572902400"}], "+", 
                  RowBox[{
                   SuperscriptBox["k", "2"], " ", 
                   SuperscriptBox["\[Pi]", "2"], " ", 
                   RowBox[{"(", 
                    RowBox[{"980179200", "-", 
                    RowBox[{"8910720", " ", 
                    SuperscriptBox["k", "2"], " ", 
                    SuperscriptBox["\[Pi]", "2"]}], "+", 
                    RowBox[{"57120", " ", 
                    SuperscriptBox["k", "4"], " ", 
                    SuperscriptBox["\[Pi]", "4"]}], "-", 
                    RowBox[{"272", " ", 
                    SuperscriptBox["k", "6"], " ", 
                    SuperscriptBox["\[Pi]", "6"]}], "+", 
                    RowBox[{
                    SuperscriptBox["k", "8"], " ", 
                    SuperscriptBox["\[Pi]", "8"]}]}], ")"}]}]}], ")"}]}]}], 
              ")"}]}]}], ")"}]}]}], ")"}], " ", 
       SuperscriptBox["x", "k"]}], ")"}], " ", 
     SuperscriptBox["z", "18"]}], 
    RowBox[{"355687428096000", " ", 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["k", "19"], " ", 
       RowBox[{"Gamma", "[", "k", "]"}]}], ")"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[Pi]", 
         SuperscriptBox["k", "19"]]}], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "3"], 
        RowBox[{"6", " ", 
         SuperscriptBox["k", "17"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "5"], 
        RowBox[{"120", " ", 
         SuperscriptBox["k", "15"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "7"], 
        RowBox[{"5040", " ", 
         SuperscriptBox["k", "13"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "9"], 
        RowBox[{"362880", " ", 
         SuperscriptBox["k", "11"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "11"], 
        RowBox[{"39916800", " ", 
         SuperscriptBox["k", "9"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "13"], 
        RowBox[{"6227020800", " ", 
         SuperscriptBox["k", "7"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "15"], 
        RowBox[{"1307674368000", " ", 
         SuperscriptBox["k", "5"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "17"], 
        RowBox[{"355687428096000", " ", 
         SuperscriptBox["k", "3"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "19"], 
        RowBox[{"121645100408832000", " ", "k"}]]}], ")"}], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "19"]}], 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"k", "!"}]}]], "+", 
   FractionBox[
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "k"], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        FractionBox["\[Pi]", 
         SuperscriptBox["k", "20"]]}], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "3"], 
        RowBox[{"6", " ", 
         SuperscriptBox["k", "18"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "5"], 
        RowBox[{"120", " ", 
         SuperscriptBox["k", "16"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "7"], 
        RowBox[{"5040", " ", 
         SuperscriptBox["k", "14"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "9"], 
        RowBox[{"362880", " ", 
         SuperscriptBox["k", "12"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "11"], 
        RowBox[{"39916800", " ", 
         SuperscriptBox["k", "10"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "13"], 
        RowBox[{"6227020800", " ", 
         SuperscriptBox["k", "8"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "15"], 
        RowBox[{"1307674368000", " ", 
         SuperscriptBox["k", "6"]}]], "-", 
       FractionBox[
        SuperscriptBox["\[Pi]", "17"], 
        RowBox[{"355687428096000", " ", 
         SuperscriptBox["k", "4"]}]], "+", 
       FractionBox[
        SuperscriptBox["\[Pi]", "19"], 
        RowBox[{"121645100408832000", " ", 
         SuperscriptBox["k", "2"]}]]}], ")"}], " ", 
     SuperscriptBox["x", "k"], " ", 
     SuperscriptBox["z", "20"]}], 
    RowBox[{"\[Pi]", " ", 
     RowBox[{"k", "!"}]}]], "+", 
   InterpretationBox[
    SuperscriptBox[
     RowBox[{"O", "[", "z", "]"}], "21"],
    SeriesData[$CellContext`z, 0, {}, 1, 21, 1],
    Editable->False]}],
  SeriesData[$CellContext`z, 
   0, {((-(-1)^$CellContext`k) $CellContext`k^(-2)) \
($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), ((-(-1)^$CellContext`k) $CellContext`k^(-3)) \
($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((
       Rational[
        1, 6] (-1)^$CellContext`k) $CellContext`k^(-4)) (-6 + \
$CellContext`k^2 Pi^2)) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((
       Rational[
        1, 6] (-1)^$CellContext`k) $CellContext`k^(-5)) (-6 + \
$CellContext`k^2 Pi^2)) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((
       Rational[-1, 120] (-1)^$CellContext`k) $CellContext`k^(-6)) (
      120 - (20 $CellContext`k^2) 
      Pi^2 + $CellContext`k^4 Pi^4)) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((
       Rational[-1, 120] (-1)^$CellContext`k) $CellContext`k^(-7)) (
      120 - (20 $CellContext`k^2) 
      Pi^2 + $CellContext`k^4 Pi^4)) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((
       Rational[1, 5040] (-1)^$CellContext`k) $CellContext`k^(-8)) (-5040 + (
        840 $CellContext`k^2) Pi^2 - (42 $CellContext`k^4) 
      Pi^4 + $CellContext`k^6 Pi^6)) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((
       Rational[1, 5040] (-1)^$CellContext`k) $CellContext`k^(-9)) (-5040 + (
        840 $CellContext`k^2) Pi^2 - (42 $CellContext`k^4) 
      Pi^4 + $CellContext`k^6 Pi^6)) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((
       Rational[-1, 362880] (-1)^$CellContext`k) $CellContext`k^(-9)) (
      362880 - (60480 $CellContext`k^2) 
      Pi^2 + (3024 $CellContext`k^4) Pi^4 - (72 $CellContext`k^6) 
      Pi^6 + $CellContext`k^8 Pi^8)) ($CellContext`x^$CellContext`k/
     Factorial[$CellContext`k]), (((
       Rational[-1, 362880] (-1)^$CellContext`k) $CellContext`k^(-11)) (
      362880 - (60480 $CellContext`k^2) 
      Pi^2 + (3024 $CellContext`k^4) Pi^4 - (72 $CellContext`k^6) 
      Pi^6 + $CellContext`k^8 Pi^8)) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((
       Rational[
        1, 39916800] (-1)^$CellContext`k) $CellContext`k^(-12)) (-39916800 + \
($CellContext`k^2 Pi^2) (6652800 - (332640 $CellContext`k^2) 
        Pi^2 + (7920 $CellContext`k^4) Pi^4 - (110 $CellContext`k^6) 
        Pi^6 + $CellContext`k^8 Pi^8))) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((
       Rational[
        1, 39916800] (-1)^$CellContext`k) $CellContext`k^(-13)) (-39916800 + \
($CellContext`k^2 Pi^2) (6652800 - (332640 $CellContext`k^2) 
        Pi^2 + (7920 $CellContext`k^4) Pi^4 - (110 $CellContext`k^6) 
        Pi^6 + $CellContext`k^8 Pi^8))) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((
       Rational[-1, 6227020800] (-1)^$CellContext`k) $CellContext`k^(-14)) (
      6227020800 + ($CellContext`k^2 
        Pi^2) (-1037836800 + ($CellContext`k^2 Pi^2) (
          51891840 - (1235520 $CellContext`k^2) 
          Pi^2 + (17160 $CellContext`k^4) Pi^4 - (156 $CellContext`k^6) 
          Pi^6 + $CellContext`k^8 Pi^8)))) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((
       Rational[-1, 6227020800] (-1)^$CellContext`k) $CellContext`k^(-15)) (
      6227020800 + ($CellContext`k^2 
        Pi^2) (-1037836800 + ($CellContext`k^2 Pi^2) (
          51891840 - (1235520 $CellContext`k^2) 
          Pi^2 + (17160 $CellContext`k^4) Pi^4 - (156 $CellContext`k^6) 
          Pi^6 + $CellContext`k^8 Pi^8)))) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((-1)^$CellContext`k/
      Pi) (((-1) $CellContext`k^(-15)) 
       Pi + (Rational[1, 6] $CellContext`k^(-13)) 
       Pi^3 + (Rational[-1, 120] $CellContext`k^(-11)) 
       Pi^5 + (Rational[1, 5040] $CellContext`k^(-9)) 
       Pi^7 + (Rational[-1, 362880] $CellContext`k^(-7)) 
       Pi^9 + (Rational[1, 39916800] $CellContext`k^(-5)) 
       Pi^11 + (Rational[-1, 6227020800] $CellContext`k^(-3)) 
       Pi^13 + (Rational[1, 1307674368000]/$CellContext`k) 
       Pi^15)) ($CellContext`x^$CellContext`k/
     Factorial[$CellContext`k]), (((
       Rational[
        1, 1307674368000] (-1)^$CellContext`k) $CellContext`k^(-17)) \
(-1307674368000 + ($CellContext`k^2 Pi^2) (
        217945728000 + ($CellContext`k^2 
          Pi^2) (-10897286400 + ($CellContext`k^2 Pi^2) (
            259459200 - (3603600 $CellContext`k^2) 
            Pi^2 + (32760 $CellContext`k^4) Pi^4 - (210 $CellContext`k^6) 
            Pi^6 + $CellContext`k^8 Pi^8))))) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((-1)^$CellContext`k/
      Pi) (((-1) $CellContext`k^(-17)) 
       Pi + (Rational[1, 6] $CellContext`k^(-15)) 
       Pi^3 + (Rational[-1, 120] $CellContext`k^(-13)) 
       Pi^5 + (Rational[1, 5040] $CellContext`k^(-11)) 
       Pi^7 + (Rational[-1, 362880] $CellContext`k^(-9)) 
       Pi^9 + (Rational[1, 39916800] $CellContext`k^(-7)) 
       Pi^11 + (Rational[-1, 6227020800] $CellContext`k^(-5)) 
       Pi^13 + (Rational[1, 1307674368000] $CellContext`k^(-3)) 
       Pi^15 + (Rational[-1, 355687428096000]/$CellContext`k) 
       Pi^17)) ($CellContext`x^$CellContext`k/
     Factorial[$CellContext`k]), (((
       Rational[-1, 
         355687428096000] (-1)^$CellContext`k) $CellContext`k^(-19)) (
      355687428096000 + ($CellContext`k^2 
        Pi^2) (-59281238016000 + ($CellContext`k^2 Pi^2) (
          2964061900800 + ($CellContext`k^2 
            Pi^2) (-70572902400 + ($CellContext`k^2 Pi^2) (
              980179200 - (8910720 $CellContext`k^2) 
              Pi^2 + (57120 $CellContext`k^4) Pi^4 - (272 $CellContext`k^6) 
              Pi^6 + $CellContext`k^8 
               Pi^8)))))) ($CellContext`x^$CellContext`k/
     Gamma[$CellContext`k]), (((-1)^$CellContext`k/
      Pi) (((-1) $CellContext`k^(-19)) 
       Pi + (Rational[1, 6] $CellContext`k^(-17)) 
       Pi^3 + (Rational[-1, 120] $CellContext`k^(-15)) 
       Pi^5 + (Rational[1, 5040] $CellContext`k^(-13)) 
       Pi^7 + (Rational[-1, 362880] $CellContext`k^(-11)) 
       Pi^9 + (Rational[1, 39916800] $CellContext`k^(-9)) 
       Pi^11 + (Rational[-1, 6227020800] $CellContext`k^(-7)) 
       Pi^13 + (Rational[1, 1307674368000] $CellContext`k^(-5)) 
       Pi^15 + (Rational[-1, 355687428096000] $CellContext`k^(-3)) 
       Pi^17 + (Rational[1, 121645100408832000]/$CellContext`k) 
       Pi^19)) ($CellContext`x^$CellContext`k/
     Factorial[$CellContext`k]), (((-1)^$CellContext`k/
      Pi) (((-1) $CellContext`k^(-20)) 
       Pi + (Rational[1, 6] $CellContext`k^(-18)) 
       Pi^3 + (Rational[-1, 120] $CellContext`k^(-16)) 
       Pi^5 + (Rational[1, 5040] $CellContext`k^(-14)) 
       Pi^7 + (Rational[-1, 362880] $CellContext`k^(-12)) 
       Pi^9 + (Rational[1, 39916800] $CellContext`k^(-10)) 
       Pi^11 + (Rational[-1, 6227020800] $CellContext`k^(-8)) 
       Pi^13 + (Rational[1, 1307674368000] $CellContext`k^(-6)) 
       Pi^15 + (Rational[-1, 355687428096000] $CellContext`k^(-4)) 
       Pi^17 + (Rational[1, 121645100408832000] $CellContext`k^(-2)) 
       Pi^19)) ($CellContext`x^$CellContext`k/Factorial[$CellContext`k])}, 1, 
   21, 1],
  Editable->False]], "Output",
 CellChangeTimes->{
  3.6824686891516666`*^9, {3.682468719831422*^9, 3.6824687520322638`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", 
  RowBox[{"pp", ",", "qq"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"pp", "[", 
   RowBox[{"n_", ",", "j_", ",", "k_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"pp", "[", 
    RowBox[{"n", ",", "j", ",", "k", ",", "z"}], "]"}], "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "<", "j"}], ",", "0", ",", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "k"}], ")"}]}], "-", 
      RowBox[{"pp", "[", 
       RowBox[{
        RowBox[{"Floor", "[", 
         RowBox[{"n", "/", "j"}], "]"}], ",", "2", ",", 
        RowBox[{"k", "+", "1"}], ",", "z"}], "]"}], "+", 
      RowBox[{"pp", "[", 
       RowBox[{"n", ",", 
        RowBox[{"j", "+", "1"}], ",", "k", ",", "z"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppx", "[", 
   RowBox[{"n_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], "  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1", "/", "z"}], "-", 
     RowBox[{"pp", "[", 
      RowBox[{"n", ",", "2", ",", "1", ",", "z"}], "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppz", "[", 
   RowBox[{"n_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"ppx", "[", 
     RowBox[{"n", ",", "z2"}], "]"}], ",", 
    RowBox[{"z2", "\[Rule]", "z"}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qq", "[", 
   RowBox[{"n_", ",", "j_", ",", "k_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"qq", "[", 
    RowBox[{"n", ",", "j", ",", "k", ",", "z"}], "]"}], "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "<", "j"}], ",", "0", ",", 
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "k"}], ")"}]}], "-", 
      RowBox[{"qq", "[", 
       RowBox[{
        RowBox[{"n", "-", "j"}], ",", "1", ",", 
        RowBox[{"k", "+", "1"}], ",", "z"}], "]"}], "+", 
      RowBox[{"qq", "[", 
       RowBox[{"n", ",", 
        RowBox[{"j", "+", "1"}], ",", "k", ",", "z"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qqx", "[", 
   RowBox[{"n_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], "  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1", "/", "z"}], "-", 
     RowBox[{"qq", "[", 
      RowBox[{"n", ",", "1", ",", "1", ",", "z"}], "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"qqz", "[", 
   RowBox[{"n_", ",", "z_"}], "]"}], ":=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"qqx", "[", 
     RowBox[{"n", ",", "z2"}], "]"}], ",", 
    RowBox[{"z2", "\[Rule]", "z"}]}], "]"}]}]}], "Input",
 CellChangeTimes->{{3.6825008677939916`*^9, 3.682501023217881*^9}, {
  3.6825011094298124`*^9, 3.6825012154468765`*^9}, {3.6825013324205666`*^9, 
  3.6825013420501175`*^9}, {3.682501504664418*^9, 3.682501514219965*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"ppx", "[", 
    RowBox[{"100", ",", "z"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "3"}], ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825009173558264`*^9, 3.6825009688617725`*^9}, {
  3.6825010088380585`*^9, 3.682501083989357*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
2n/xEMclc5MnhYdw6mTVSqo8L/GofN+rgDBmXxhq8Zm4xEvYDUiajtsPYAfh
4yf71ngJa5UHnuXiA7jxLrdOlyIfYeS29t+jun4semBF7DLiI1TWRqf2avfj
I2LxYj7X+QipvTaSihN9+PEjlq0ND/kInvB6WHzeh4/n6BxJzuIjpuVzY5K5
+vCDLeM7mgf4iCEn5bLbpb049M7ffMF5PuJLRtz4Mc9e3L3l6NNCLn7iw29e
oc0qvfjvjelcQpqfKNh1W29dbw8mF3AXKqnxEykBDIehiB785rH5ie7t/MR/
jU6h74178IUv3Xt79vAToeLd7yL/dGNPkruC4gF+4tYp80GXzG4sNHf3esIJ
fsLjDV5neLYb3ze2+3nUgZ9wmNqyRVqqG6e47f6r78JPHNZJOjnX0IUfs/tp
7nHlJ/belA6ovduFF87F/7nkxk9s/xia+XJbFz5ceaE5g4nV+Fm6rv3oxNbn
VOT/Mv+XO+JNOpjQiZXcXxkdPs9PCDwfV1M70olVa089SzvLT7CMHT/MytOJ
rfyTbq2c5CcYGo03e8o7sNed4m07D/ITo3RIzvXuwGrnvvOc28tPdJTmNYeo
MvFytr4nk28N+/plh/52XF32fe2IKj9RbP6f0o7odqwy3B3MJ8FPpMfyW4ia
tGOn8HNcYSR+4kXfHZ8fK22Y5K3+vGmSj4ikzcdXZbfhP1mvLjS08BH3XJ1r
nzq14XAuk2DfAj6Cnt/D8JZpw9/PFPK1x/ER51Yt5MybWrHQ8x7Wlqt8hI1x
xR6afys++ZaN7nyUj9gXqu2+ur0VL/0SPxupxUdoyslWpr/6guMWt6RfG+Il
yI7hP/yPfcETrVTGhnxeQiSdJH6K7wv+LC4cbh7ASyzs+O7M79OCvTRGLtQo
8hLf/U5Gjam1YJcjHF7CEzxET/3n4rLBZnw0Y+ZkehYPUXbyHb+bWTN2eeKw
rVCbh0DlYocGZprwDSnOj65T3AT7x/KQIfMmrDp2ybztFTcR/kVkeZTzM144
gm0j2LiJQ92lWt/ONuIOFcnxxsx1hNTQufMTRAOOrQg+H3t0HfFqqrhr6no9
VvzzfGvEUy7Ced5RaLazDsuNT57M3M5FaKwImDK063BvoIqR+hdOomDd2cKF
6Rq8wejGpOgyB1GrxPvon8Mn/MH+ZuwVOXYiXO1dI4n4iClWy2knn7IRh7RO
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
p4D5psuOgntK0M+0sKnQHArsyyguoDD7fw0nPazcQ4HRxt4BfZk3KIpquezX
R4GEkLlFl4+v0cKgg87wAAV8cbd7kscrRJwITXsxQoHq4geBGyPi0WHrwceS
U8z1b3E5X2XEIt8dAR7cLFRwuzp6eV0OOx5aepLmzEoFj/Kg/IP8Tti4IHP8
IzsVdn9N+a+9h44FtLps73FTQXLQpu5brj9+paJutiJChbPmm6u5bsXiOuEW
ypQyFc6U3b/PJpaINzWN2e5XpcLdvsBs9r1vcGzo8uO3alQwEDxlM3k5Cdtx
0QTObaLC3pv7SWpNKXhu1Wd5YDsVfGvlg345ZWCp73KtzfupoHrcre42Xx6+
+UZLYJMlFbT03u7wicrDww57zcKsmfPLnfUWxPJxer87NjtChVrXmUpfyXcY
WivTKu2owH0gPJ+FpxA7l7v453tSAQ/otdknFOPZS5NX9tCpYFIa+N5SrARf
l3e92OFDBdLgSRPlwBIcesP94JIvFaT0f2hdOVuKc/V9yDsDqXB5gvqPwl6O
d04uijYGUSEGaaxUnyvHH59c47J7QIWRNQbP5upy3LV0Y/p2JBWMyjb/0LmL
8VqBX2nVf1RwbPL82uFK4KBzHNmHn1OBbMPYshpLYGGJ+6/H4qmw6OPKM19C
YNrlkBCuN1S44kL2PcJZgTNofLfikqkwUw2nSjdU4G1tYZ4bUqmwrKt9bHZ/
BTbbGmWzP4sK0hnnVotDK/CXYRHzvhwqSAQWhVmlVWDb6Fh0KZ8KSTQetoya
Cuw291glooiJo3UM8L8KvJQgLUMupcL6B/fue0lX4rvWT/lzypnj7mklP7Qq
cWzWi/kvVVTYsuJTtfF0JVY4Tf5+9hMVnl+5X/jbuxInC7zqna+hQqcedN69
X4k3lys1BdRTgf1p5kjLk0pcfOlNpcRnKqxsOZYzllqJd8uvL0huZs4HNdWy
4krc0JDydnsrFfat+ey2qa3ER2+oPa9tpwK1vl+4sKMSD6qnR57ookKfieG7
7uFK7NK70f9HDxVOHC5wIKYqMSMk68qNfipMzHs5XFysxL76Whf5h6jQoFoq
2PuvErNP5tq9GKYC75svXYJcVTj8ifbBTWNUIIIHDHj4q7CkWcEe4hsV+H53
t9cJV+GEJV29A5NUqH963figeBVWSynSGP5JBU4TGeOXklU4/9gOsvcMU3/r
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
zD4hU01PEzh9QZHxgEZU/w+gGMII
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-3, 12}, {-3.6790424616413393`, 336.10999013853166`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.682500925321282*^9, 3.6825009650035515`*^9}, {
   3.682501011601217*^9, 3.682501089543675*^9}, 3.682501127078822*^9, 
   3.682501221560226*^9, 3.682501524779569*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"qqx", "[", 
  RowBox[{"9", ",", "z"}], "]"}]], "Input",
 CellChangeTimes->{{3.682501178994791*^9, 3.6825011862132044`*^9}, {
  3.6825012213072114`*^9, 3.6825013103973074`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", 
       RowBox[{
        RowBox[{"-", "9"}], "+", "z"}]]}], "+", 
     FractionBox["9", 
      RowBox[{
       RowBox[{"-", "8"}], "+", "z"}]], "-", 
     FractionBox["36", 
      RowBox[{
       RowBox[{"-", "7"}], "+", "z"}]], "+", 
     FractionBox["84", 
      RowBox[{
       RowBox[{"-", "6"}], "+", "z"}]], "-", 
     FractionBox["126", 
      RowBox[{
       RowBox[{"-", "5"}], "+", "z"}]], "+", 
     FractionBox["126", 
      RowBox[{
       RowBox[{"-", "4"}], "+", "z"}]], "-", 
     FractionBox["84", 
      RowBox[{
       RowBox[{"-", "3"}], "+", "z"}]], "+", 
     FractionBox["36", 
      RowBox[{
       RowBox[{"-", "2"}], "+", "z"}]], "-", 
     FractionBox["9", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "z"}]], "+", 
     FractionBox["1", "z"]}], ")"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]], "Output",
 CellChangeTimes->{
  3.6825011813089237`*^9, {3.6825012224842787`*^9, 3.6825012748772755`*^9}, {
   3.6825013067560987`*^9, 3.68250131097434*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ppz", "[", 
  RowBox[{"100", ",", 
   RowBox[{"1", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825012574242773`*^9, 3.682501279620547*^9}, {
  3.6825013148595624`*^9, 3.6825014132761917`*^9}, {3.6825014936207867`*^9, 
  3.6825014984420624`*^9}}],

Cell[BoxData[
 FractionBox["113678", 
  RowBox[{"1155", " ", "\[Pi]"}]]], "Output",
 CellChangeTimes->{{3.682501260291441*^9, 3.682501279909563*^9}, {
  3.6825013201248636`*^9, 3.682501413545207*^9}, {3.6825014940998144`*^9, 
  3.6825015164310913`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6825015336180744`*^9, 3.68250154525074*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.6825015376563053`*^9, 3.682501537708308*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{"ppx", "[", 
      RowBox[{"100", ",", "z"}], "]"}], ",", "z"}], "]"}], ",", 
   RowBox[{"z", "\[Rule]", "0"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682501946008662*^9, 3.682501976343397*^9}}],

Cell[BoxData[
 FractionBox["428", "15"]], "Output",
 CellChangeTimes->{{3.6825019521820154`*^9, 3.682501976559409*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
     RowBox[{"(", 
      RowBox[{"z", "-", "k"}], ")"}]}], 
    RowBox[{"x", "^", "k"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682502045595358*^9, 3.682502075630076*^9}, {
  3.6825033694930806`*^9, 3.6825034359818835`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"HurwitzLerchPhi", "[", 
   RowBox[{
    RowBox[{"-", "x"}], ",", "1", ",", 
    RowBox[{"-", "z"}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6825034027709837`*^9, 3.682503436322903*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", "n"}], "/", 
     RowBox[{"(", 
      RowBox[{"a", "-", "n"}], ")"}]}], 
    RowBox[{"z", "^", "n"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825020735249557`*^9, 3.682502073591959*^9}, {
  3.6825034782132993`*^9, 3.682503512547263*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"HurwitzLerchPhi", "[", 
   RowBox[{
    RowBox[{"-", "z"}], ",", "1", ",", 
    RowBox[{"-", "a"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.682503512952286*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], 
       RowBox[{
        RowBox[{"x", "^", "k"}], "/", 
        RowBox[{"Gamma", "[", 
         RowBox[{"k", "+", "1"}], "]"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6825035634531746`*^9, 3.6825035947329636`*^9}, {
  3.682503718054017*^9, 3.68250372614748*^9}, {3.6825039435469146`*^9, 
  3.682503971578518*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["x", "z"], 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "z"}], "]"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"ExpIntegralE", "[", 
     RowBox[{
      RowBox[{"1", "+", "z"}], ",", "x"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]}]], "Output",
 CellChangeTimes->{{3.6825035655632954`*^9, 3.682503595125986*^9}, {
  3.6825037192860875`*^9, 3.6825037263354907`*^9}, {3.682503954040515*^9, 
  3.6825039719665403`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "-", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", ".3"}]}]], "Input",
 CellChangeTimes->{{3.6825037637146287`*^9, 3.6825037696989713`*^9}}],

Cell[BoxData["1.2980553326475577`"], "Output",
 CellChangeTimes->{3.6825037699519854`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{"-", "z"}], "]"}], 
   RowBox[{"(", 
    RowBox[{"-", "z"}], ")"}]}], "/.", 
  RowBox[{"z", "\[Rule]", ".3"}]}]], "Input",
 CellChangeTimes->{{3.6825037711630545`*^9, 3.6825037810036173`*^9}}],

Cell[BoxData["1.298055332647558`"], "Output",
 CellChangeTimes->{{3.6825037778134356`*^9, 3.682503781337637*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "z"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "-", "z"}], "]"}]}], "z"], "+", 
    RowBox[{
     SuperscriptBox["x", "z"], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "x"}], "]"}]}]}], "/.", 
   RowBox[{"z", "\[Rule]", ".3"}]}], "/.", 
  RowBox[{"x", "\[Rule]", "1.4"}]}]], "Input",
 CellChangeTimes->{{3.682503795764462*^9, 3.682503802458845*^9}}],

Cell[BoxData[
 RowBox[{"4.89095584727494`", "\[VeryThinSpace]", "+", 
  RowBox[{"5.989693423136285`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.682503797171542*^9, 3.682503802823866*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", 
      SuperscriptBox["x", "z"]}], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{"-", "z"}], "]"}]}], "+", 
    RowBox[{
     SuperscriptBox["x", "z"], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "x"}], "]"}]}]}], "/.", 
   RowBox[{"z", "\[Rule]", ".3"}]}], "/.", 
  RowBox[{"x", "\[Rule]", "1.4"}]}]], "Input",
 CellChangeTimes->{{3.6825038120533934`*^9, 3.6825038267002316`*^9}}],

Cell[BoxData[
 RowBox[{"4.89095584727494`", "\[VeryThinSpace]", "+", 
  RowBox[{"5.989693423136285`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.682503815453588*^9, 3.6825038287203465`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox["x", "z"]}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"-", "z"}], ",", "0", ",", " ", "x"}], "]"}]}], "/.", 
   RowBox[{"z", "\[Rule]", ".3"}]}], "/.", 
  RowBox[{"x", "\[Rule]", "1.4"}]}]], "Input",
 CellChangeTimes->{{3.6825038409150443`*^9, 3.682503849785552*^9}}],

Cell[BoxData[
 RowBox[{"4.89095584727494`", "\[VeryThinSpace]", "+", 
  RowBox[{"5.989693423136285`*^-16", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.6825038470113935`*^9, 3.6825038499795628`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "@", 
  RowBox[{"FullSimplify", "@", 
   RowBox[{"Expand", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{
         RowBox[{"-", 
          SuperscriptBox["x", "z"]}], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{"-", "z"}], "]"}]}], "+", 
        RowBox[{
         SuperscriptBox["x", "z"], " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{"-", "z"}], ",", "x"}], "]"}]}]}], ")"}], "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6825038917379513`*^9, 3.682503927186979*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"ExpIntegralE", "[", 
     RowBox[{
      RowBox[{"1", "+", "z"}], ",", "x"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "z"], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"-", "z"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]}]], "Output",
 CellChangeTimes->{{3.682503910399019*^9, 3.682503927785013*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     FractionBox[
      SuperscriptBox["x", "z"], 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "z"}], "]"}]], "+", 
     FractionBox[
      RowBox[{
       RowBox[{"ExpIntegralE", "[", 
        RowBox[{
         RowBox[{"1", "+", "z"}], ",", "x"}], "]"}], " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.682504031103923*^9, 3.6825040376032944`*^9}}],

Cell[BoxData[
 RowBox[{"EulerGamma", "+", 
  RowBox[{"ExpIntegralE", "[", 
   RowBox[{"1", ",", "x"}], "]"}], "+", 
  RowBox[{"Log", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{{3.682504033229044*^9, 3.682504037866309*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sin", "[", 
    RowBox[{".5", "  ", "Pi"}], "]"}], "/", "Pi"}], " ", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
      RowBox[{"(", 
       RowBox[{".5", "-", "k"}], ")"}]}], 
     RowBox[{
      RowBox[{"10.", "^", "k"}], "/", 
      RowBox[{"Gamma", "[", 
       RowBox[{"k", "+", "1"}], "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.682505183099813*^9, 3.682505190493236*^9}, {
  3.6825052443463163`*^9, 3.6825053065768757`*^9}}],

Cell[BoxData["3.568249501511903`"], "Output",
 CellChangeTimes->{
  3.6825052089622927`*^9, {3.6825052687197104`*^9, 3.682505306793888*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"10", "^", ".5"}], "/", 
  RowBox[{
   RowBox[{"(", ".5", ")"}], "!"}]}]], "Input",
 CellChangeTimes->{{3.682505284331603*^9, 3.6825052908309746`*^9}}],

Cell[BoxData["3.568248232305542`"], "Output",
 CellChangeTimes->{3.682505291344004*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{3.682505326638023*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"x", "^", "z"}], "/", 
     RowBox[{"z", "!"}]}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.6825057617979126`*^9, 3.6825057677092505`*^9}}],

Cell[BoxData[
 RowBox[{"EulerGamma", "+", 
  RowBox[{"Log", "[", "x", "]"}]}]], "Output",
 CellChangeTimes->{3.6825057679372635`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"Binomial", "[", 
     RowBox[{"x", ",", "z"}], "]"}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.6825057348133693`*^9, 3.682505778261854*^9}}],

Cell[BoxData[
 RowBox[{"EulerGamma", "+", 
  RowBox[{"PolyGamma", "[", 
   RowBox[{"0", ",", 
    RowBox[{"1", "+", "x"}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.682505778764883*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{"x", "^", "z"}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{3.6825058438846073`*^9}],

Cell[BoxData[
 RowBox[{"Log", "[", "x", "]"}]], "Output",
 CellChangeTimes->{3.6825058442336273`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"D", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"Binomial", "[", 
      RowBox[{"x", ",", "z"}], "]"}], 
     RowBox[{"z", "!"}]}], ",", "z"}], "]"}], "/.", 
  RowBox[{"z", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.6825058516120496`*^9, 3.682505853155138*^9}}],

Cell[BoxData[
 RowBox[{"PolyGamma", "[", 
  RowBox[{"0", ",", 
   RowBox[{"1", "+", "x"}]}], "]"}]], "Output",
 CellChangeTimes->{3.6825058535691614`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "@", 
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"ppx", "[", 
       RowBox[{"100", ",", "z"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], ")"}]}], 
     RowBox[{"Product", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"z", "-", "k"}], ")"}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "6"}], "}"}]}], "]"}]}], "]"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "2"}]}]], "Input",
 CellChangeTimes->{{3.6825074892887197`*^9, 3.682507581248979*^9}, {
  3.682508281378024*^9, 3.6825082888854537`*^9}}],

Cell[BoxData["13584"], "Output",
 CellChangeTimes->{{3.682507492310892*^9, 3.6825075813899875`*^9}, {
  3.6825082827081003`*^9, 3.6825082891734705`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"po", "[", "n_", "]"}], ":=", 
  RowBox[{"List", "@@", 
   RowBox[{
    RowBox[{"NRoots", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Expand", "@", 
        RowBox[{"FullSimplify", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"ppx", "[", 
            RowBox[{"n", ",", "z"}], "]"}], "/", 
           RowBox[{"(", 
            RowBox[{
             RowBox[{"Sin", "[", 
              RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], ")"}]}], 
          RowBox[{"Product", "[", 
           RowBox[{
            RowBox[{"z", "-", "k"}], ",", 
            RowBox[{"{", 
             RowBox[{"k", ",", "0", ",", 
              RowBox[{"Log2", "@", "n"}]}], "}"}]}], "]"}]}], "]"}]}], 
       "\[Equal]", "0"}], ",", "z"}], "]"}], "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "2"}], "]"}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.6825076798486185`*^9, 3.682507717000744*^9}, {
  3.682507749223587*^9, 3.682507764032434*^9}, {3.6825080008079767`*^9, 
  3.6825080024100685`*^9}, {3.682508195014085*^9, 3.682508224622778*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"6", "!"}], " ", 
      RowBox[{
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"z", "/", "r"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"po", "[", "100", "]"}]}], "}"}]}], "]"}], "/", 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"z", "-", "k"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "6"}], "}"}]}], "]"}]}], " ", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}]}], "]"}], "]"}], ",", 
   RowBox[{"z", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825077677866488`*^9, 3.682507875551812*^9}, {
  3.682508089620056*^9, 3.682508097511508*^9}, {3.6825081310624266`*^9, 
  3.6825083439296017`*^9}}],

Cell[BoxData[
 RowBox[{"283.0000000000003`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.682507777355196*^9, 3.6825077991014395`*^9}, {
   3.682507844013008*^9, 3.682507875790826*^9}, 3.6825080040701632`*^9, 
   3.6825080980785403`*^9, {3.6825081381828337`*^9, 3.682508295698844*^9}, {
   3.6825083315228925`*^9, 3.6825083448576555`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"6", "!"}], " ", 
      RowBox[{
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"1", "-", 
          RowBox[{"z", "/", "r"}]}], ",", 
         RowBox[{"{", 
          RowBox[{"r", ",", 
           RowBox[{"po", "[", "100", "]"}]}], "}"}]}], "]"}], "/", 
       RowBox[{"Product", "[", 
        RowBox[{
         RowBox[{"z", "-", "k"}], ",", 
         RowBox[{"{", 
          RowBox[{"k", ",", "0", ",", "6"}], "}"}]}], "]"}]}], " ", 
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}]}], "]"}], "]"}], ",", 
   RowBox[{"z", "\[Rule]", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682507774436029*^9, 3.68250777445403*^9}, {
  3.682507902202337*^9, 3.6825079119358935`*^9}, {3.6825083753724003`*^9, 
  3.682508473106991*^9}}],

Cell[BoxData[
 RowBox[{"323.99999999999994`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.682507912334916*^9, {3.6825083979966946`*^9, 3.68250847345201*^9}, 
   3.6825087671108065`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "/", "r"}], ",", 
   RowBox[{"{", 
    RowBox[{"r", ",", 
     RowBox[{"po", "[", "100", "]"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825079430716743`*^9, 3.682507977350635*^9}, {
  3.6825080115985937`*^9, 3.6825080707979803`*^9}, {3.682508109157174*^9, 
  3.6825081162105775`*^9}, {3.6825087434334526`*^9, 3.6825088516006393`*^9}}],

Cell[BoxData[
 RowBox[{"26.083333333333343`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.682508788338021*^9, 3.682508851832652*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682508744629521*^9, 3.682508744649522*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"pps", "[", 
   RowBox[{"n_", ",", "j_", ",", "k_", ",", "z_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"pps", "[", 
    RowBox[{"n", ",", "j", ",", "k", ",", "z", ",", "s"}], "]"}], "=", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"n", "<", "j"}], ",", "0", ",", 
     RowBox[{
      RowBox[{
       RowBox[{"j", "^", 
        RowBox[{"-", "s"}]}], 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"(", 
           RowBox[{"z", "-", "k"}], ")"}]}], "-", 
         RowBox[{"pps", "[", 
          RowBox[{
           RowBox[{"Floor", "[", 
            RowBox[{"n", "/", "j"}], "]"}], ",", "2", ",", 
           RowBox[{"k", "+", "1"}], ",", "z", ",", "s"}], "]"}]}], ")"}]}], 
      "+", 
      RowBox[{"pps", "[", 
       RowBox[{"n", ",", 
        RowBox[{"j", "+", "1"}], ",", "k", ",", "z", ",", "s"}], "]"}]}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppsx", "[", 
   RowBox[{"n_", ",", "z_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], "  ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"1", "/", "z"}], "-", 
     RowBox[{"pps", "[", 
      RowBox[{"n", ",", "2", ",", "1", ",", "z", ",", "s"}], "]"}]}], 
    ")"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ppsz", "[", 
   RowBox[{"n_", ",", "z_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"Limit", "[", 
   RowBox[{
    RowBox[{"ppsx", "[", 
     RowBox[{"n", ",", "z2", ",", "s"}], "]"}], ",", 
    RowBox[{"z2", "\[Rule]", "z"}]}], 
   "]"}]}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.6825088757870226`*^9, 3.6825089336553326`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{"N", "[", 
    RowBox[{
     RowBox[{"D", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"D", "[", 
         RowBox[{
          RowBox[{"ppsx", "[", 
           RowBox[{"n", ",", "z", ",", "s"}], "]"}], ",", "s"}], "]"}], "/.", 
        RowBox[{"s", "\[Rule]", "0"}]}], ",", "z"}], "]"}], "/.", 
     RowBox[{"z", "\[Rule]", "0"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825088933710284`*^9, 3.6825088989343467`*^9}, {
  3.682508936670505*^9, 3.682508957880718*^9}, {3.682508999782115*^9, 
  3.6825090544232397`*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    {Opacity[0.2], 
     LineBox[{{{1., 0.}, {1., 0}}, {{2., -0.6931471805599453}, {2., 0}}, {{
        3., -1.791759469228055}, {3., 0}}, {{4., -2.4849066497880004`}, {
        4., 0}}, {{5., -4.0943445622221}, {5., 0}}, {{6., -4.0943445622221}, {
        6., 0}}, {{7., -6.040254711277413}, {7., 0}}, {{
        8., -6.733401891837358}, {8., 0}}, {{9., -7.8320141805054675`}, {
        9., 0}}, {{10., -7.832014180505469}, {10., 0}}, {{
        11., -10.22990945330384}, {11., 0}}, {{12., -10.22990945330384}, {
        12., 0}}, {{13., -12.794858810765376`}, {13., 0}}, {{
        14., -12.794858810765376`}, {14., 0}}, {{15., -12.794858810765376`}, {
        15., 0}}, {{16., -13.48800599132532}, {16., 0}}, {{
        17., -16.32121933538154}, {17., 0}}, {{18., -16.321219335381535`}, {
        18., 0}}, {{19., -19.265658314547977`}, {19., 0}}, {{
        20., -19.265658314547977`}, {20., 0}}, {{21., -19.265658314547977`}, {
        21., 0}}, {{22., -19.265658314547977`}, {22., 0}}, {{
        23., -22.401152530477127`}, {23., 0}}, {{24., -22.401152530477127`}, {
        24., 0}}, {{25., -24.010590442911226`}, {25., 0}}, {{
        26., -24.01059044291123}, {26., 0}}, {{27., -25.10920273157933}, {
        27., 0}}, {{28., -25.10920273157934}, {28., 0}}, {{
        29., -28.476498561565812`}, {29., 0}}, {{30., -28.476498561565812`}, {
        30., 0}}, {{31., -31.910485766050954`}, {31., 0}}, {{
        32., -32.6036329466109}, {32., 0}}, {{33., -32.6036329466109}, {
        33., 0}}, {{34., -32.6036329466109}, {34., 0}}, {{
        35., -32.6036329466109}, {35., 0}}, {{36., -32.6036329466109}, {
        36., 0}}, {{37., -36.21455085925512}, {37., 0}}, {{
        38., -36.21455085925513}, {38., 0}}, {{39., -36.21455085925513}, {
        39., 0}}, {{40., -36.21455085925513}, {40., 0}}, {{
        41., -39.928122925959435`}, {41., 0}}, {{42., -39.928122925959435`}, {
        42., 0}}, {{43., -43.689323041653005`}, {43., 0}}, {{
        44., -43.689323041653}, {44., 0}}, {{45., -43.689323041653005`}, {
        45., 0}}, {{46., -43.689323041653005`}, {46., 0}}, {{
        47., -47.53947064336307}, {47., 0}}, {{48., -47.53947064336306}, {
        48., 0}}, {{49., -49.48538079241836}, {49., 0}}, {{
        50., -49.48538079241838}, {50., 0}}, {{51., -49.48538079241837}, {
        51., 0}}, {{52., -49.48538079241837}, {52., 0}}, {{
        53., -53.45567270597049}, {53., 0}}, {{54., -53.455672705970485`}, {
        54., 0}}, {{55., -53.4556727059705}, {55., 0}}, {{
        56., -53.45567270597049}, {56., 0}}, {{57., -53.4556727059705}, {
        57., 0}}, {{58., -53.45567270597051}, {58., 0}}, {{
        59., -57.53321014987622}, {59., 0}}, {{60., -57.53321014987621}, {
        60., 0}}, {{61., -61.64408401404951}, {61., 0}}, {{
        62., -61.64408401404951}, {62., 0}}, {{63., -61.64408401404952}, {
        63., 0}}, {{64., -62.337231194609465`}, {64., 0}}, {{
        65., -62.33723119460948}, {65., 0}}, {{66., -62.33723119460947}, {
        66., 0}}, {{67., -66.54192381400043}, {67., 0}}, {{
        68., -66.54192381400046}, {68., 0}}, {{69., -66.54192381400046}, {
        69., 0}}, {{70., -66.54192381400044}, {70., 0}}, {{
        71., -70.80460369104175}, {71., 0}}, {{72., -70.80460369104176}, {
        72., 0}}, {{73., -75.09506313219015}, {73., 0}}, {{
        74., -75.09506313219015}, {74., 0}}, {{75., -75.09506313219015}, {
        75., 0}}, {{76., -75.09506313219015}, {76., 0}}, {{
        77., -75.09506313219015}, {77., 0}}, {{78., -75.09506313219016}, {
        78., 0}}, {{79., -79.46451098465717}, {79., 0}}, {{
        80., -79.46451098465718}, {80., 0}}, {{81., -80.56312327332529}, {
        81., 0}}, {{82., -80.56312327332526}, {82., 0}}, {{
        83., -84.98196388112186}, {83., 0}}, {{84., -84.9819638811219}, {
        84., 0}}, {{85., -84.98196388112189}, {85., 0}}, {{
        86., -84.98196388112189}, {86., 0}}, {{87., -84.98196388112187}, {
        87., 0}}, {{88., -84.98196388112189}, {88., 0}}, {{
        89., -89.47060025085403}, {89., 0}}, {{90., -89.470600250854}, {
        90., 0}}, {{91., -89.47060025085403}, {91., 0}}, {{
        92., -89.47060025085403}, {92., 0}}, {{93., -89.47060025085402}, {
        93., 0}}, {{94., -89.47060025085403}, {94., 0}}, {{
        95., -89.47060025085399}, {95., 0}}, {{96., -89.47060025085403}, {
        96., 0}}, {{97., -94.04531122935742}, {97., 0}}, {{
        98., -94.0453112293574}, {98., 0}}, {{99., -94.04531122935737}, {
        99., 0}}, {{100., -94.04531122935737}, {100., 0}}},
      VertexColors->None]}, 
    {Opacity[0.2], LineBox[{},
      VertexColors->None]}}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, PointBox[CompressedData["
1:eJxdy11I01EcxvE/qwtRtGUqolbLTHKK6Cyb70/zZTrn3JvbLDPTaXdFF0Vp
L4eMgrSSLiIIIuoioojM8kJF/4FGQZSZF0YFCWFoLya+lFpRsR9xzjlwOHz4
nmdD/X5no0ZRFP/f++8NnG8FingwnbX025Q6MRBgEDQ6/VLI7Z9kLY5dfdUX
Nb5CDTgCbYbGt1fqtORoyXHQPZ05Y0yKJutQq335UZmOIcdD5zh6etm1npyA
eMGJ8C+s7ew+mEDeLFmPw9VTvd8vJZFTJKdKTkPUr9ef3izqyelosaXsy3Gm
kQ1oFpyB9x8+p2qKMshbJG+VnCl5G2pjb37tbMokGyVnIX1uU1i3xkjOhkFw
DuoGhx/OxWaRc9EgOA+Jpywvlo/kkvMlF6DjVs3lyMkCMnAvTz9WWIGAmWRl
u9QlKyapm5A8Fbr3UKyJeiFSeDPJSpHUizAz2tT7bKGQerFoVoyujU/6csaK
qZfgPm9WInWzaGbGgOHR7tAhM/VS9PNmpbgwZJjX9ZdSL8NF3qwMHUK3iGYW
7Jx80OLqsVAvxw7erBw1QreK/5lV6hXYJfQKtD3/ko1BK3UbzvJmNgTH2X0H
RmzUK0WzSoQI3Y7ZlVa/PrkyYNgxz5vZMcdbtaO91Th+97qd9g6c5w3JzIFz
vFUHFoebrx3vctDeiSXecOLH7J3WyMdO2ktWJSsu0ZDMXFgU9i6smja397xz
0d4NLW+4EXfDkBmc4Ka9GzG8VTfqXwadGMuvon0VGnmjCn7eTLJahQZh7xE7
PIjoabWvq/XQ3oNw3qrUFa9oeLFG2Etd9WK1sPdJex9Gw8L3TJz00t6HEd6q
D8O8ler//gNpvdpt
     "]], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{1, 0},
  Method->{"MessagesHead" -> DiscretePlot},
  PlotRange->{{1, 100}, {-94.04531122935742, 0}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}}]], "Output",
 CellChangeTimes->{{3.682508945444007*^9, 3.6825089500532703`*^9}, {
  3.6825089948018303`*^9, 3.682509056133338*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"(", 
      RowBox[{"z", "-", "2"}], ")"}]}], "/", 
    RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", "z"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682509155889044*^9, 3.6825091745571113`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Sin", "[", 
   RowBox[{"\[Pi]", " ", "z"}], "]"}], 
  RowBox[{"\[Pi]", " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "2"}], "+", "z"}], ")"}]}]]], "Output",
 CellChangeTimes->{{3.6825091622714086`*^9, 3.6825091750031366`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Re", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "k"}], " ", 
      RowBox[{
       RowBox[{
        RowBox[{"Sin", "[", 
         RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], " ", "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "k"}], ")"}]}]}], "]"}], "/.", 
    RowBox[{"z", "\[Rule]", "3.5"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", 
     RowBox[{"-", "5"}], ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682509584639567*^9, 3.682509693026766*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.24720000000000014`, 0.24, 0.6], 
    {Opacity[0.2], 
     LineBox[{{{-4., -0.04244131815783876}, {-4., 
         0}}, {{-2., -0.05787452476068922}, {-2., 0}}, {{
        0., -0.09094568176679733}, {0., 0}}, {{2., -0.2122065907891938}, {
        2., 0}}, {{5., -0.2122065907891938}, {5., 0}}, {{
        7., -0.09094568176679733}, {7., 0}}, {{9., -0.05787452476068922}, {
        9., 0}}, {{11., -0.04244131815783876}, {11., 0}}},
      VertexColors->None]}, 
    {Opacity[0.2], 
     LineBox[{{{-5., 0.03744822190397538}, {-5., 0}}, {{-3., 
        0.04897075172058318}, {-3., 0}}, {{-1., 
        0.07073553026306459}, {-1., 0}}, {{1., 0.12732395447351627`}, {
        1., 0}}, {{3., 0.6366197723675814}, {3., 0}}, {{4., 
        0.6366197723675814}, {4., 0}}, {{6., 0.12732395447351627`}, {
        6., 0}}, {{8., 0.07073553026306459}, {8., 0}}, {{10., 
        0.04897075172058318}, {10., 0}}, {{12., 0.03744822190397538}, {
        12., 0}}},
      VertexColors->None]}}, 
   {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, 
    PointBox[{{-5., 0.03744822190397538}, {-4., -0.04244131815783876}, {-3., 
     0.04897075172058318}, {-2., -0.05787452476068922}, {-1., 
     0.07073553026306459}, {0., -0.09094568176679733}, {1., 
     0.12732395447351627`}, {2., -0.2122065907891938}, {3., 
     0.6366197723675814}, {4., 0.6366197723675814}, {
     5., -0.2122065907891938}, {6., 0.12732395447351627`}, {
     7., -0.09094568176679733}, {8., 0.07073553026306459}, {
     9., -0.05787452476068922}, {10., 0.04897075172058318}, {
     11., -0.04244131815783876}, {12., 0.03744822190397538}}], {}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  Method->{"MessagesHead" -> DiscretePlot},
  PlotRange->{{-5, 12}, {-0.2122065907891938, 0.6366197723675814}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}}]], "Output",
 CellChangeTimes->{{3.6825096211256533`*^9, 3.6825096933607855`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "-", "z"}], "]"}]}], 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
      RowBox[{"(", 
       RowBox[{"z", "-", "k"}], ")"}]}], 
     RowBox[{
      RowBox[{"x", "^", "k"}], "/", 
      RowBox[{"k", "!"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", 
      RowBox[{"-", "1000"}], ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.682509721576399*^9, 3.6825097827929*^9}, {
  3.682509854000973*^9, 3.68250985411298*^9}, {3.6825098944252853`*^9, 
  3.682509939830882*^9}, {3.6825100385265274`*^9, 3.682510079640879*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["x", "z"], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}], "+", 
     RowBox[{"z", " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "x"}], "]"}]}]}], ")"}]}], 
  RowBox[{"z", " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", "z"}], "]"}], " ", 
   RowBox[{"Gamma", "[", "z", "]"}]}]]], "Output",
 CellChangeTimes->{{3.682509716158089*^9, 3.682509768872104*^9}, 
   3.682509803507085*^9, 3.6825098546190085`*^9, {3.682509896186386*^9, 
   3.682509940119899*^9}, {3.6825100415146985`*^9, 3.6825100800129004`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Table", "[", 
  RowBox[{
   RowBox[{"Limit", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", " ", "-", "3"}], "]"}], "/", "Pi"}], 
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "-", "k"}], ")"}]}], 
      RowBox[{
       RowBox[{"x", "^", "k"}], "/", 
       RowBox[{"k", "!"}]}]}], ",", 
     RowBox[{"k", "\[Rule]", "k2"}]}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"k2", ",", 
     RowBox[{"-", "15"}], ",", "15"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682509792384449*^9, 3.682509827327448*^9}, {
  3.68250986600766*^9, 3.68250986618367*^9}, {3.6825099691675606`*^9, 
  3.6825100123200283`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", ",", "0", 
   ",", "0", ",", "0", ",", "0", ",", "0", ",", 
   FractionBox[
    RowBox[{"2", " ", 
     RowBox[{"Sin", "[", "3", "]"}]}], 
    RowBox[{"\[Pi]", " ", 
     SuperscriptBox["x", "3"]}]], ",", "0", ",", "0", ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{"Sin", "[", "3", "]"}], 
     RowBox[{"3", " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    RowBox[{"x", " ", 
     RowBox[{"Sin", "[", "3", "]"}]}], 
    RowBox[{"4", " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "2"], " ", 
      RowBox[{"Sin", "[", "3", "]"}]}], 
     RowBox[{"10", " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "3"], " ", 
     RowBox[{"Sin", "[", "3", "]"}]}], 
    RowBox[{"36", " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "4"], " ", 
      RowBox[{"Sin", "[", "3", "]"}]}], 
     RowBox[{"168", " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "5"], " ", 
     RowBox[{"Sin", "[", "3", "]"}]}], 
    RowBox[{"960", " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "6"], " ", 
      RowBox[{"Sin", "[", "3", "]"}]}], 
     RowBox[{"6480", " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "7"], " ", 
     RowBox[{"Sin", "[", "3", "]"}]}], 
    RowBox[{"50400", " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "8"], " ", 
      RowBox[{"Sin", "[", "3", "]"}]}], 
     RowBox[{"443520", " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "9"], " ", 
     RowBox[{"Sin", "[", "3", "]"}]}], 
    RowBox[{"4354560", " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "10"], " ", 
      RowBox[{"Sin", "[", "3", "]"}]}], 
     RowBox[{"47174400", " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "11"], " ", 
     RowBox[{"Sin", "[", "3", "]"}]}], 
    RowBox[{"558835200", " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "12"], " ", 
      RowBox[{"Sin", "[", "3", "]"}]}], 
     RowBox[{"7185024000", " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "13"], " ", 
     RowBox[{"Sin", "[", "3", "]"}]}], 
    RowBox[{"99632332800", " ", "\[Pi]"}]], ",", 
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "14"], " ", 
      RowBox[{"Sin", "[", "3", "]"}]}], 
     RowBox[{"1482030950400", " ", "\[Pi]"}]]}], ",", 
   FractionBox[
    RowBox[{
     SuperscriptBox["x", "15"], " ", 
     RowBox[{"Sin", "[", "3", "]"}]}], 
    RowBox[{"23538138624000", " ", "\[Pi]"}]]}], "}"}]], "Output",
 CellChangeTimes->{{3.682509790247327*^9, 3.682509827565461*^9}, 
   3.6825098665116887`*^9, {3.6825099725617547`*^9, 3.6825100141841354`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{"-", "3"}], ")"}], "!"}]], "Input",
 CellChangeTimes->{{3.682509834939883*^9, 3.6825098358069324`*^9}}],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{3.6825098360499463`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], 
       RowBox[{"1", "/", 
        RowBox[{"k", "!"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.682510408309678*^9, 3.68251044751692*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "z"}], "]"}]], "+", 
  FractionBox[
   RowBox[{
    RowBox[{"ExpIntegralE", "[", 
     RowBox[{
      RowBox[{"1", "+", "z"}], ",", "1"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]}]], "Output",
 CellChangeTimes->{3.682510447787936*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], 
       RowBox[{
        RowBox[{"Pochhammer", "[", 
         RowBox[{"x", ",", "k"}], "]"}], "/", 
        RowBox[{"k", "!"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6825105358449726`*^9, 3.682510538476123*^9}, 
   3.6825105877169394`*^9}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"Hypergeometric2F1", "[", 
    RowBox[{"x", ",", 
     RowBox[{"-", "z"}], ",", 
     RowBox[{"1", "-", "z"}], ",", 
     RowBox[{"-", "1"}]}], "]"}], " ", 
   RowBox[{"Sin", "[", 
    RowBox[{"\[Pi]", " ", "z"}], "]"}]}], 
  RowBox[{"\[Pi]", " ", "z"}]]], "Output",
 CellChangeTimes->{3.682510544841487*^9, 3.6825105946273346`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Hypergeometric2F1", "[", 
      RowBox[{"x", ",", 
       RowBox[{"-", "z"}], ",", 
       RowBox[{"1", "-", "z"}], ",", 
       RowBox[{"-", "1"}]}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Pi]", " ", "z"}], "]"}]}], 
    RowBox[{"\[Pi]", " ", "z"}]], "/.", 
   RowBox[{"x", "\[Rule]", "7."}]}], "/.", 
  RowBox[{"z", "\[Rule]", "3.3"}]}]], "Input",
 CellChangeTimes->{{3.6825105557401104`*^9, 3.6825105666127324`*^9}, {
  3.682510602100762*^9, 3.6825106125633607`*^9}}],

Cell[BoxData["112.36606556985751`"], "Output",
 CellChangeTimes->{{3.68251056167245*^9, 3.682510566907749*^9}, 
   3.6825106129183807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Pochhammer", "[", 
   RowBox[{"7", ",", "3.3"}], "]"}], "/", 
  RowBox[{
   RowBox[{"(", "3.3", ")"}], "!"}]}]], "Input",
 CellChangeTimes->{{3.6825105697699127`*^9, 3.682510570928979*^9}, {
  3.68251061744164*^9, 3.6825106203788075`*^9}}],

Cell[BoxData["112.36635138749992`"], "Output",
 CellChangeTimes->{3.6825106205728188`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], 
       RowBox[{"Binomial", "[", 
        RowBox[{"x", ",", "k"}], "]"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6825106424360695`*^9, 3.6825106471783404`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "+", "x"}], "]"}], 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "x", "-", "z"}], "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "z"}], "]"}]}]]], "Output",
 CellChangeTimes->{3.682510648321406*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Sin", "[", 
     RowBox[{"Pi", " ", "z"}], "]"}], "/", 
    RowBox[{"(", 
     RowBox[{"Pi", " ", 
      RowBox[{"(", "z", ")"}]}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682511075492839*^9, 3.6825111291499076`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
fSAi6r5ZnzW/wmVei/D39I/kf/bnB+0=
     "]], LineBox[CompressedData["
1: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
v7kHro4cmFpelkCyOXlfWd9dd/0PwHr3Gg==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-5, 5}, {-0.2172330860784782, 0.4633119123417302}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.682511087124504*^9, 3.682511129676938*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Binomial", "[", 
    RowBox[{"0", ",", "z"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "5"}], ",", "5"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825113332765827`*^9, 3.682511351133604*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwVV3k8VO8bxQxibDNTKIpoo4gUSvVWytIilaXFEpUiSSlZSiUkSfZK+CZL
yDIzMYPwPGUJo6gkJLRJJSS78JvfX/dzPs9zzz3vec5773sXOp/ee0xESEho
SFhI6P/XS993Dc7MMDFO7n4X/ji2sdtffvjDPyZWDhuk/VXeSizkOkd540w8
9ciIXqBiRVTXek6d/svEeif11ulFR8nzsOhZXd1MHPX/t6ZJ6xyZpf1+Ab5k
4vXk6s3TBkEk9tzhHVfuM/HpMMutXiuWTM3SsLC7y8QR16Gi5S9jiUvSH0vD
OCY2zt8RSNzjiEF1oM1ABBPlipsXnc+KJ20K6U6HA5mYuXb7slyVe0T16Y8L
m1yZeIdldnp0NIk8FvZKEzJgYt8ifS4mpxLDfdli9/SYWHXti6tobyqpTvt0
QleHiXvk/CebDdNIl6mllrMGE5+8+BOj8DqNyEdocSuUmPi4483ihsl0Ejiv
50WIkECPkpPQYsNMIueuoqkyxUBSfKlS81ImSSqzCeeNM/Dx/GP0hGeZpOhw
lWXPIAMzafwPOWZZ5HfGw1bzbwwMdj3KcN2dTfbr2f+SqmOgRekv1Qsbckh3
UOyu9GoGXlN4c1fVJ4d4NfPzN1QwMF6cnsrk5JAI33XnPEoZGDfzcPqVei6p
AIWphjwGHjdhPD0+nUss6bsdTzxmoPZofaSmXh7pcA55JpQp6LeVj1h2PI+M
iQ4H66YwcCTVRq2hPo9o73wjExPDQP3iR7w7EfmkNEnizPJIBn6S+5FHLcsn
5v2b3laEM7DdmBn73898cjQ6/85QMAP7q9rP5yxkkYSWcFUbHwZez07LtD3P
Iss0KwP7zjEwxuFkmM4NFin0n/wacoaBIR8XuSckskjjArcsnhsDw3Q7ji94
ziKix0xXzbVn4BKPdtcmcTZ546Br++sAA70UvBzoCmySvF/pYpkNA1+HHpzq
Wcwm+jv7q5wsGdgSPrHJZQubiJi0/tTbxcANoa/6JC3Z5BWpkBXbzsB3/roH
zOzZxEXvzoFsYwYyZ6ncvunNJqu0rgZc3MTA7BUG3pGBbDK95GSqxQYGNhwU
2rMigk3uzCO/B/UZmJD936qlaWxydLYGo0pPoFf22/HgPDbRkWEa3NFhYFsc
/vYpYpMa4e9XjDQZOLT6hvMCPpvETjamSy9l4P79OjENb9nk8HBJXac6Ax1a
vt+Z3c4mK/rT+tmqDDzxK0fh9xc2Ge+JmB00n4Fux4ef7v/FJtWffdbazBP4
m8bRsR1kk+h2Z4dlCgykWFkt6hljE81G/cx6OQYWK4ZbIJVDRmpVXyZLM/DZ
v6g+MUkOeV4hOegpyUAnfaeuDhkOiSgbkjcWF+gvlug0ZXLIIV6H0RyqwL8M
jczNChyyjF1z+LsQA7+W9k/y53HIUDYnuHiKjoMl85O653MIpiVm35ygo0Kh
5J4oVQ4JTw5psB+l490D6Z18NQ7Zf9dzaOUQHR8u9WbGL+KQRdEH54r8oeNY
fEpx/2IOGbi5dWPTbzr26vxMaVnCIWXB2kcyftKRJHCSLZdySNhlxVCf73QU
j5gJshVgG1+R3O1f6eha67vit6Bfzav3tfInOhr2nD5NF+A+9+aRvo90tFzV
olkpeF6JCyo9a6Nj7oG9G0XVOSTkcPammPd0VNTQCG8S6N17MPbYsSY6Bqpb
jesu4BAVq4Awg9d0bGX6npqvxCG9u07kS7yio/2t32/iBX4Ume5t+lBHx912
RfLJAr+CNq8fz31BR83v0cv0ZDnE0mjJgiuVdBS+8nPCWuC38ho5473P6Lg5
41OgmCiH9GhPHF9UTsebhnuKts6wScGyr+EjJYL1x9fGyY2zyVW1V+waHh1F
C2MU3QTztVAuak4ooKO1MmfTHsH858k/nHRn0wXvm09y1YJ8cCS8t9Ef01Ey
lfl8vyBPAZTDbl8e0XFUfj3Xu45Ntk+Z3y5MoyN1Y6WP2jM2+Twwv/VAMh2L
Alxz1XPZhNlS5f4wio7jTvMtGi6zCS5PCQ2KEOj5cCk3yYtN3C9fTHO5KfD/
70XGjIsgf0v02jWD6Zij63XFfyeb+J1/sOOJDx1fagRdcWSwydJa/+Nx5+lo
oLTzdp0ImzQp2167cJaOYvvkpOoGWUS7UvqpkTsdPRZIrL7+mkU+M/w1Kx0F
83NbShMOY5HbLjYmGXYC/yU9t8lfYJH1JbrOoQfo+Cjs1tizIywS79Rzb+c+
OpoZ8aY/GrHIdpa1xDsTwfrerFc68iqfcHbp9HzToqOf76SwtnUecUyhUWs0
6Yjqauf91PKI1HC3SvZSOpZPFtbM9OUSl8QkW4+FdFw9mllcFJxL5v2SfDEy
WzBvUSmP6awcEhj6LV38nxz29i7fUP4qm6xsx2c/xuTwklH9KbnIbNK+MvEj
f1gOx1fF78yxzCb67/fOieyXw728C71VDVnk52IMUvwihwcCH91PrcokeysS
jmjUyeHvk1np2lEZZFHT144X1XKC75VnzbnNGWTkq/ZBlwo5vOe0hjs1kE7u
iVVYppbK4Y5r6uGdu9JJl/mvDfPz5TBBrStu7kwqOdVopEiPlUOXNj0drc0p
JPRje/2YvRzufEp7vTojnvj3b3CP/CKLr0siFZND3CHRyaBn00dZXCGuf+Kw
5xkofatz9E+zLDaMsz6bJZ+DaZ663d46WSxfQN+3758fBF6R2DmbLYuHrp0w
Suy8BmH0d8vvBsjiXiPZtR/3RUKCnvuv/+bK4jp330J3ahI8TT923JIpixl2
63XkXiZBu4LjFyFpWczcvFvWIi4ZFvzb88FJSBZ73vvkbWE8gIeVBnz17zJ4
S70sOCc5BbKsKY8fFcjg8dla+5Zmp0HRhQS3/N0yOGns+/elXzaoHT2T3mIm
g7dHJbeFfMiGW5ZmXcJbZPDYtt/umUaPwVljxNpqtQwmXjMIXDDxGGgf9mwe
V5TBVieG0ZXTueCwUULR+LM0skarFtYrs6BGs2uv+wdp9PuYurzOlAWrFHi3
4pqk8Y6azVGXsywQHzhK6amWRjmnPUNe1SxgpWBf+GNpjHJSEy13ZQNF1Keq
+Zw0elwKlP5xnwMefyyEhDykcS/HuXI5cqDl42IjjePS6Hlb+d/oFw7kcN+y
/A9IY+pRkXnLNJ+AzYmViaobBXyH1D5WsZ4AWom9NzeQxpy899Z6r5+A5uaP
dC8daYyl/OpX/fMEZubevF6lJo0+aqdkfVYWQCa/+6ybuDSu85M4MJpeAIyi
stwYIWm8GGG62PR5AVxKi+0pHZfCxefCzsh0FMDeS1scZHul0PbPs/MzzEKY
1E42L2iUwuSLk7a7fQvBRel80MdaKVzU3GVIogqhUXwniFVIobWsTk1yZiGk
dY2vPlAohd9DwrZnvSsEi2hr1el7UugbZEN/u4wLfqtkzU1jpNBj0fn7r4y4
kPGm5kxkuBQ+tUZ7QwsuTDPWV6hdlkLX9wnX9p3hguaT4V8nfaTw6oo97pRA
Ltjsy59deEYKU6Vv31kQzYXcGDUX06NSKFSm/D2GxYUWvfaISHspfB2vm9tb
zgVqUxyv1UYKDxw+Op5bzwW72RIS7uZSKNX76/bxbi6EFjzXLdwihWaXT9xz
GORCgdXFg9NGUvhlm8Ojp1NckIrrfxypLYXMQ9t80hk8MFyT1dS6VApxj7+i
rjIPjr5znlJbKIXTpeUXVBfzIPK88hL3eVLYpmgq46XFg9I5zRaFTCn0zNPc
v2wND3oKb1+YlhLwlx55R9bzYLaN+QNTMYHfN99JFG/hwaYRkdrIGRomHdlz
KcaMByfjS/+0jtEw4Pz9p6928SBe33ue+iANLz48beW2lwfPm1cau/+iYYZu
yIdjNjzo8/5xsvArDb+dvNuDB3gwTyE1dvojDftVjin42/HAhGdXZvqehutl
CsVjHXhw1la+O7KRhhHrHe1ph3mQPNog01ZLw1m6u7BLgOvu3DBQr6Ahe/bl
dqYTD0YMjA+7l9Jwbpmsc5qgrtbyL7SwkIaGSYai0Y48sPDhsqfzaLg8yTqg
3Z4HfoqebaaZNHzT0nPj2iEeZBRpUKJSaDhvW3JPyH4evNn/ZXlbAg27jHY7
dlvxYHos0Uo9lob6faK8FEseaNyzueR+i4ZSZUJlRTt4YLVWLqMwhIZtFwq3
LDfhwZXW2lfTl2lYdrVp/jjhQY7vtVFTXxrKtu9YpraWBy1zN6hGnaXhYoXt
mzJ0eUAtGTFrO0nD7GWbzYI1eKBzkHVG/RgN45b+WAKqPAhNUK8otBX0Jyco
GkvzoGDdx1/TljTcwQiTuSXCg662+Nlm22m4RXPyge4oFwyVJF3a1tPQec6j
yLAOLhx9WhGhrk/Dn9oH/m58zYXIQ5d47itpaOdweWpXBRd67g/MmllIw6fS
PVsupnNh9vpsXTMlgZ+eZzLux3FhU/uRg1GzaZjOmxGWD+bCXeX3j9XFabhO
tXGhsjMXTJPKLMx6JVH40a6As7O5MHCr/R+1WxJPn8kpbRfiQkLAZPazTklM
DfR5WNRbCL2Oa8WN3kpii4jOhurnhRCtVghaJZL4PAhsyYlCWM9sOvXziSSO
5bxz3mBZCN8of5Ue5UqiIr9sfr5BIRh+0/FRTZHEjblR3X3UQuh4lKPDDJXE
qpoc2x93CyD0Lr+j4aokxhyzs4+4WAC6N36Gh/tLomVi4ECWYwEEuS37IXpa
Eg1E1U6ZLCoATa20lDFrSbzwyHfdwkdPwJtzn9GhLom+08F19TEcUE0twYT5
kniX+62deZoDtTGtHrYKkmjoLMppNeeA8nkFfqOkJHZpf1D/OsWG5wYx1yr+
SGDn9s9WYofZIFMWNpQJEphWvemNkjQLMl74NnsdksDjyaejlFSz4d4qb+Ms
Kwn8dqvIMZiVBeFJZ1kduyRQ0bPT8R/JgrNeJ8PMN0mgmQLdUNkuEzao2G9U
WSyBSbZLXrjfyIAm700ZdX2z8KjJSgluyUMQWSLuvTBwFn46rucgNTcOHIJi
5zRkiiN1vZJy39Fbgv+JEXGfh+L4U9fnWW/4bUImbSdUE8Xx3cMIycy2SKJ6
Vqnz7G1xLH3ilBpKiSGfHR9mynuL4/nST8U3bO4QFyOWkYOxOG6R3e33bvI/
4jHId/r9UQw3bo6MTgvLJB25Wlbx78WQXzntc4qeRXa73jYhr8VQdTKU9+1O
FtHp2rs8qlIMFT4PvGlOzSaDL1uHVj8WwzN38h/Z83KId9b36xd9xFB4fMmK
WcdYJOAwJY/GFMOXXZ2tLsYFhNVgGtEkJYYrvHQzHS4VkM8bwz2SxMRw0Mxk
8h+3gJjMn7Ny5YQoZotNr1iqUUhk2paw9n4SRQ+ubb+4BJck79vOuZcvivf7
PtWxCnmk8XlEtHOWKNrPi9rs+INHRFa9Pbs8VRTL/WpeJioXERc5O72yeFFM
f3/wClwtItovTxV0XRLFWteF6hdNigmYRHGX7hTFv1YO6v8VlZDBwnfxA9tE
8b1q44Z7X0vIosXzLhQTUexNIXlSck9JKCXVYIeeKErXrXE9eOwpscSCIo95
ophl8Sn/lEQpCVw5ftdgtihmpBx6K6NbSgqSN/gKyYgi7/r6tSr7S4nipeq1
0cKimDxnsj80rZR0rW0pKeyhYsvCgCgH/TLCyFK+H/CZiskdumT/gTKyVdHJ
37SdigcoQcU8/zKSOfLDqLWBio19jjdTy8uI55PJ0n9cKnZO3QqU3VBOHqpt
SqpiUbGUOctJ8VA5aYoKuhSRTcXq0CLjAJ9yYugpvVE1mYqvzbf22LHLiZCW
ChgHUzG7lq1grgTkovxmh+AAKupU2Xfp6gMZnXGeqr5AxQD1EMM9lkD63mQY
bXejovjiw8+0A4G4lta03TxCxaZdhtE/7wH5mv7T96UdFT2N+la1sIB88NEu
stxNxd6qaeut7UBsnC1to82o+Em4KxEHgLzZcXbk7WaB/gHHBWtEkNQs4K62
XU3FsJJ/KQ9mI9k6q+XtXS0q1g0Wb9efjwT+jJ9tW0LF5Y9Vww4vRsKt3MC2
n0vFn9zY156rkazKc7T8j0HFU8Hyn62NkOTeudrfRaPi7Ba9hJebkSy7mhqh
JkrF8ocHg96bIklzq9I6Ok1B+R5/La9dSFStvtenj1JwFVNu8YO9SO5vkHD/
PkBBylalKXtbJPJLl9M0flIwNEJ3e84hJNFyu7LdvlDQa4V/apgjEpkJD/Oc
dgraphQ9HHNGcuNLZM/vdxRUeW3ydfgYEupLzvWVDRTMmqUuHngCyRVu05Iz
NRS8O9aXk+iGZPK/kSrOMwoKPRzy3eaOxPuG4rGhEgr+Wa055+IpJINn11H1
Cyj4rmvNsk0eSE7Z2aVeyKWgRfwZxygB7tkWsKU4g4K5JX2upwX46MoHnyb+
o2B9ve94q+D+TsXnV9bfo6DWZNLzRgH/QZGvKgHRAr2PMy/uO4mk+ZcowE1B
fTDnk5Mrkj3vljoIB1PQfiokb9IFSX25+dSWAAomnep8qHoUiVnmycSgCxR8
lKJ9tfEwksqoW0bVnhT8/QdkaPZIiH9+m7gbBZvbC5iN+5GUHH3ta36Egp7q
sw6pWCHRt/ireNOOgkHNkZwxCyQcgzlF9dYU7Nsn+uuQORKthQa2MrspqLR6
+r2ZMZJFQ35xUZspSKs6tALWIHnwMXH123UUfLXN29xMG4nSi/K3s1dTUH11
SMjBJUgYCSKMu0so6MbR7p07B8mta4vYrSoUdFb+96mahmTWKRNLpbkUfHtb
K/qfMJIZEhaRTBPwe6QUU9qA+GnkaHVRKTgaeaPoYQWQEcar+oXTIignshP3
5gDp/UanpQ+IID0vEL/5AWm7ee/643ci2HkqgP1eCsjbKtWcww0imB92nyv6
p5zUzzxqnFMrgqKpOr1HmspJuRd37pVSEZw5xXFm3xXs30NvH1ulimC6WdX7
WIVycj/uYKNEkgjqGTYnmA2XkdiGT0Pl8SKo+uXJpNabMhJiPLBBI0wEj7+7
lxFxo4y4LZdunPIUwYkwJwVWXyk5cix2iOMmgoccjBeMV5USu/+U5p44KoJR
XUvtvRNLiQVT0/mNrQgeKP+lIWtaSlZNmgxlbBRB3sD5e9XRT8lk3RVFSykR
LP0ypPuMWkKGqLM2iIqJYNq57/NuNBSTvo23nUpmhHFt3YupW/eKSRcnKXvR
X2GcY519fc/yYlKZULJ+vFUY+2veRzZtKyLhbkOHHz4Sxj4xd/pVWy4JTvMP
tk0RRgPLrgsX5LkkoEMkW+q+MI57z9pX1FRIPPfS/3pHCOOfhnOu83cXEqt1
2sE7zgvjw00vl0QbFRBlyRNZQ1uEseWC2rH5Q2ziUF4frrZeGCft/ZyaU9gk
5ayup+UaYWwdgLMNFmyy5MOEfs5SYWQ/UD0SmsEiK3NuVR6REsbo7XaeNxLy
yBaLJ51v3glh7VIR3x+DmcQ1enoO+4QQ+iiU5q93vUdOrtEU/aA8A1aVqzKX
yCTBWdHiR96yM9DjtTF+3stk8Htnup0hMgOnFOGBvckDCDt/7Lb592lAhZCU
X2IPIbvwwdwi9jSkKc7XVr+ZDj/WKGjHmUzDbOf0jAX3c+C4PtV2t+eU4JzS
kRO9vxA8xGLGfzpPwd6Yk6PragrBu3lhYoj1FGxJrLfiGHAhxJt8Kls3BWXV
VhtE5AXnYa7fyRWiU/DR2HbVm4Yi+Kb/57JEwj8gxOxK2JpSOGLQkVlRMQn2
2+KPTR54Bi6ZBjYmvEmoDi8KOxf6DNzmRlFqsydB1K2Bmsd9Bp6Txg6voiah
+5UnxZ7xHC5CFrPVcRLy69/eDK1+DrGm5wP6JiegUvWrqMjCSrhT9Gr5mf4J
eBV571bv9kpI0FjW+vfzBBzTu1957VwlPKB90BuvnYD3O5+feFJdCbkNm35Q
7k7A7iWxNcMuVVBtK2U1d/UE3O7T3DEZVw21NceEE5dOgOeskCnVkmqoXwt5
C5QmwM48w7brYzW8UTorsUhkAry2zTm8dNEL6Ox8X67dOA4sg+Zg7uMX8NlS
151dMQ5CymV6N+pfQPezsLmreeNw8U69Q2/vC+hN3XBubfI47DrkneO4ogbG
jqdqbHUfhz5l3s+29BqYbPnXXO04DsWNsRsZFTUwbW4TZL5vHFQuqOi87qwB
6gqJTot14/CTbhH3SaEW6AMesQdmjcNLi25r7cBamO1Us7l9cgw8o3L9g+7X
guKbhf0O/WNwer0F90BBLSwoaDI/2jwGz8O7Nl/6WguaPutmPNLGIGO4buDm
xjrAjxaaX+LH4OuH0qeB1nVgY3zE2vbGGJxTSNRuOVkHgTLhj4nHGJQEbRRJ
iK8DxXMPmp8cHoPaK3JfKY/rIK+1QHjZvjHIdJs6/aK8DlrTPtrKGY6BsLxd
qs3XOvCQHAwM0hyDMJ2iTpWROqB6iuWNKY/B8vvMgQ3ifNAxWkn9JCzQ/076
rddSPlQ/MF5pPTQK/10/tfuGPh/sxPYfrO0ehWvp9n/7tvIh9PUVFps/Com2
q9UzHPmwwCDuw+LyUUgufuQxfJIPBYlZYgmsUZCc13Q48gIftouU68qkjoJr
9s2u84F86Dr+xi4wbhRa3C+/Twvng/fL7usj10ch6ZrJKuV4PkjpTXLc/EYh
zetYV1syHx7ele3ocB+F9gPWTZ0ZfDCYVpfY5zgKS5g3KZp5fKg/Yrj6xZ5R
+GYT4FJUwAfn2p2ORltHIbeCNXajhA9j2k5h+fqjsLGjoCgJ+BARe75QXWMU
PEXWZA5W8GHRxI2uO0qj8GbbBP/6Cz6UOCbTpGQE+nf+XW5XxwfLKo7+FaFR
SJAyeutRz4duzRdOQ4MjMH5DpbH8JR8uRn4IP/FtBGp9l63e8YoPjJF+Xvv7
EVDsmD+bKcCZh6hfLOtGwPK2TOgcQf/GZ4oyVaUj0MO1ebyHz4emJVpr1+aP
QNS6jMTqGj64hW8+mpsyAhkK4gFeVXwQGrS+vTB2BJryvpyzfcaHOFu3kriQ
EWiekco+U8oHzbKAbxK+I/C9Cc2fcfmAajFyASdHQL4j/9o2Fh9sQh8ZDdqP
wMxTys2pTD70/n7q4mI5AvSJo/E9D/gQuK8xqm2LoD4q1CV6lw+KxV9LLdYI
9D6/nW4VwYetQdJMg3kj4PJzQ+41Hz60/Vi48bHUCKie5l50dueD5259V5WZ
YSg26fx8WpCH+/McQfzrMOzYN17INBbk64rXT//mYXD38HuZqSfI17frcwZq
hmH7vuZGV3U+DLJYJ1tyhyFsdOXcU0KCfMlXxe98MAz+M8lL8n7XwYKLrc8w
ehg8/d6xFNvqYLupiGLWhWFYq7pr5DirDlI+7qv03TwMonvEDbv21sGqr6sm
mlYPg6U2/ZOCUR1U/qTr6CwbhutCGowotTroHm243y0zDE6hTXdM+gX7kbHT
a1/7EIwymrIKLtfCU8XlWXkNQ3D6N3O0z6kWdqpIdkpUDIHRa9qqE8a14LGi
ZjtmDYHTQVMHeWotcEy2qmldGAJx++UlBy/WgPEu9f2hbkPwvbTpRvD+Gmja
JxLxxV7AX51/9rdeDYwcxvF7W4fg+UTIJ6+eF2Dkv/61GGMIrjq0q9qavYDK
/NVXunL+QscyF3mnL1VgzWVyjR78henFHzJ3P6mC7tLBX/Exf2E3Za+sX2AV
zKpj2e7y+wuHbmb4BC6ogl1fV6wsMf0LnjN3bY/sqoRmxcUdMZ8HQfSaR//F
kOdwXIU6u//dIES7LD+st/05jC3+Yr69dhDif1ukL5V+DvP0UgqFWIPwxWzi
QV3kM3DYNf/WqUuDcPMqq0r4NsL3q3PWmyoOQp95wufhV6UgeSm/P0ZyEPb8
kzfcuKoUtH3MU7v+/YG7O2W0+TFPwdvjkqTfpz9w51HBTd6eEhA79K0lJ/sP
vJtynZks4sGi1YXnGRv+gNoP7VVO+hxw7rbK/+g0AF7lyArqvAMhn/qcNa0G
4KFs9H3fhFjIbg+Vv2AyAJc9GYW2u6Ng8E3pJbnlA1B+q2C8e1cwiFw2vxvS
0w82U/+13wk7Tojuj9d7pPvhm91t410G/5GSuGXbemx+w3RCp27AXy6Zdej7
EeH1v8GobnT+p188YqOaEThv4W/4FuRjf/xbERnMVsedv3phalP9ndcfSogG
LjBiX+6FhuTQN1Xvysndn7N1/TJ/QXR34d38SxXkPBGeLzXxAxZUL9N/O8En
Oj9ah1YmdYPQZy+f78PN5NyAloZCUDc81tVRObTuPSkavWo/7dYN8geMXNsC
3pPNYprV9Ybd0ON/8sKYeAvZq+53x7XpG0yFzbJKmNdKztvPW5dK+wZaowHn
OJs+EOFl3tmfNb/CFV6z8PeMj+R/Ej0J7Q==
     "]], LineBox[CompressedData["
1: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
IGDs+MzqqghKFE4dYH532v9/Hen4mw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-5, 5}, {-0.21723308607847816`, 0.4633119123417302}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.6825113454692802`*^9, 3.6825113514196205`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.68251136346931*^9, 3.6825113823813915`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682511380867305*^9, 3.682511380885306*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"FactorialPower", "[", 
   RowBox[{"x", ",", "3"}], "]"}], "/.", 
  RowBox[{"x", "\[Rule]", "5"}]}]], "Input",
 CellChangeTimes->{{3.6825169569114137`*^9, 3.682516985263485*^9}}],

Cell[BoxData["60"], "Output",
 CellChangeTimes->{{3.682516960891424*^9, 3.6825169857434855`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"5", " ", "4", " ", "3"}]], "Input",
 CellChangeTimes->{{3.6825169926534986`*^9, 3.6825169941255026`*^9}}],

Cell[BoxData["60"], "Output",
 CellChangeTimes->{3.682516994475503*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], " ", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], 
       RowBox[{
        RowBox[{"x", "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"k", "!"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}], "/.", 
  RowBox[{"x", "\[Rule]", "n"}]}]], "Input",
 CellChangeTimes->{{3.6825172653173943`*^9, 3.6825173085075345`*^9}, {
   3.6825173451246176`*^9, 3.682517380123705*^9}, {3.682517597015085*^9, 
   3.68251760711211*^9}, {3.6825177400476627`*^9, 3.6825177408686647`*^9}, {
   3.682518311881709*^9, 3.682518341812789*^9}, 3.6825191238361998`*^9}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   SuperscriptBox["n", "z"], 
   RowBox[{"z", " ", 
    RowBox[{"Gamma", "[", "z", "]"}]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["n", "z"], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"-", "z"}], ",", "n"}], "]"}]}], 
   RowBox[{
    RowBox[{"Gamma", "[", 
     RowBox[{"1", "-", "z"}], "]"}], " ", 
    RowBox[{"Gamma", "[", "z", "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.682517301620514*^9, 3.6825173088785353`*^9}, {
   3.682517339423606*^9, 3.6825173804837055`*^9}, {3.6825176016560974`*^9, 
   3.6825176073721104`*^9}, 3.682517741199665*^9, {3.6825183173857207`*^9, 
   3.68251834224179*^9}, 3.6825191242672005`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"ExpIntegralE", "[", 
      RowBox[{
       RowBox[{"1", "+", "z"}], ",", "12"}], "]"}], " ", 
     RowBox[{"Sin", "[", 
      RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "130"}], ",", 
     RowBox[{"-", "128"}]}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825189102347484`*^9, 3.682518953992859*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
P88ODIHtmvIqy8ABio41b8CIeHt3uwUVR5vbFWPw05UkH31LKr7hb5nVCZ7b
WCNdDy5MMbvyEpwaNeYobkXFVWVGQTTw2cZunlhwc4eu61PwESRn3Afu/aJp
/gScvrllm4g1FY+yqGpVgt+savo7gxfFj8iWg81i7M9lgjdpy+8uAS9Jt3A8
AxOIB7kKwd+ey9sNgyUi963mggmWFqeWwYdzxaZJYOquNwLMNlSsWy88mA6+
m+qWswFs3S/QkQI+caZs6jf8/uwPvtpE8GKgFecXcChha0kc2B+zsHeCExQ4
siPBA43uXwrBpJMs8Rf/xaOaUBkILvVjCg4GxxjX+BwB1yb/cfUH65nPiC7A
87bf+2F+Drz3iXl/Abi/fUHrDPhjThzJEDw5MSNLBBsa7PL4DPH8vWlytwNY
bHe1WRiYQ3yMywasUj1izQwWPD60ehLMW6V8JRr2Z7/zwLQJuHjebGQZ9k/l
8ptBfTD3qapgF7BxDu44Dm5a+a73Avbfoa6zVg08sSnvtBA4YpmWrQDuC3AK
ewD5c1LW4NYh8ErrzvhZyDdxr+4SKfDolLy1OLjzw0DtbnDU0zaHIMjPm9uJ
z3eCT+Z45qdA/gacnOgggI/eKG/Jg/ze0fJ9kONffsSebL8D+f91LWyMBax9
8uXjHKiPpqN/p5nAjiOstxKhftzLONd+8MN+sLPGGOhAPqVL7BkDi9L2GpzS
gP3ourdvCLwzQesdO9SjPau83AB4M4d4zgOoV6Zw9eMYjA2EB4ePUbGpi43b
U/CC1aWfAwoQb9nEkgwwh5hDk4Ik1J8X98Pr4NT5jk5b6DepRZm118DinhkX
g0Wp+MiOgo4ocLAteSBTmIrj1uumvcHTpHuu5/mh3rqnZXXBJuS05OKNVLzA
ev6YJngHl9A3Q2YqbtH6paUCbte+4zq2TsHe1Zss5P7d/56bqUwrFFybIxy8
C1zS/KXlA/Rjy3OodolApLEMPw4WG6TgxMQCq3mwj61CBAf096bixW9TYAfR
Q6VT0P+lxkjSw+AdZeapKd0UvOrwidoBTrlcFO9Do+Bi08DLeeCHIY5u129T
8G+5DG1D8IHZBUbOWQqWQZ+HtMEX/Fvjw1wp2N336CV1cD9V5qypEwX33H3/
SAHMfOxH17A1BReKSUgKgz98c+IrhfPwBOEx23c+Im3Lpqsx3SIUfOtnX1cO
eM1AVqHoNRkbdme8zAYLDsm0TveQ8bfCk003wDvei52R6SRjbbPOiqvgK0vv
PhTQyHjidmN6EDhZNspF+z4ZH7S4bWfy7/9iilL+8WRcWx44vsIL833kw4BC
eTJmuGxZtQcPmBVKNMH88kEoK9EKfLr9P5OjwSQ88VaYH4G3fAmRL/Ml4VUj
WRldcA36YxNHJOG9ChZEGfCflUz6sh4Jh28gt2wAfyIbVk5tJWGJIvGUsm3Q
P79e59LIh3lpXGX3Gg/0S42xn4TqLMyiu8OhZivMcwu/Y4f7MrBFZv3KBW7o
jwLsYnXjNzBhzSZFmAvmEdF5CjkwFTdoF6gMchJppjNDPpVuSXggf3zwEgfM
x5pHz9/eeRXXzM99FN8M74PbI/11CHH4klDJn1E2Io1n64b/anZF4Wpnuy1X
WYm0L8c5LfK3huHX0TVHtVmINF31REvS9vNQLx9fbtxEpN3hqwxcKfPCrI2r
+vc2EGk/PzK/zTB1xlotHaMezETaed39LFM2ZrhvSUPHFWwRmiM4xTDFPpLV
RafBOpz7jYxMTTE5Ic/dHEytE62Q1juBvxkGTaiAwyv5Wz2VjXF+966vXOAD
uovLdEV9zPTOf+ERE8TX6+6NjGE1nM322fwBeKV/gd16VhUfPHaqqhQceOgv
f+8fFWxH0Q26CX6yM9NsXVAZP3TYuZwA5jr0vE7QVQkTPzX/sgdTmDlSLu89
iH/wHLO3AqcJW0qdsN+Pk4/frzMD81jalySnSOHaQlK4DrjjzeFvLisSmOeM
z+pB8E+Fri8lnUK4OGvk9D5wxVHHWWQggNVabRpFwU05OyX6WgnYc9/xyO3g
4EMs2Uu5nHjd9skQD3hcNIh86P4mnJl4QJMTXKnQEauS8Kdnf13+LRZw/zfj
MPZL0z3Pp/iZmMBVrjrT8vUcPf8DbQercw==
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{-130., 0},
  PlotRange->{{-130, -128}, {-2.9780252258763273`*^75, 3.194077485370222*^76}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.682518921786783*^9, 3.68251895475286*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["n", "z"], " ", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "n"}], "]"}]}], 
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}], " ", 
     RowBox[{"Gamma", "[", "z", "]"}]}]], "/.", 
   RowBox[{"n", "\[Rule]", 
    RowBox[{"-", "3.3"}]}]}], "/.", 
  RowBox[{"z", "\[Rule]", "1.3"}]}]], "Input",
 CellChangeTimes->{{3.682519168433296*^9, 3.682519190471345*^9}}],

Cell[BoxData[
 RowBox[{"3.1123738815340762`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.2738753271613965`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.6825191731003056`*^9, 3.6825191907393456`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["n", "z"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "n"}], "]"}]}], 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"-", "z"}], "]"}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"z", "+", "1"}], "]"}]}]]}], "/.", 
   RowBox[{"n", "\[Rule]", 
    RowBox[{"-", "3.3"}]}]}], "/.", 
  RowBox[{"z", "\[Rule]", "1.3"}]}]], "Input",
 CellChangeTimes->{{3.682519202774374*^9, 3.6825192393594646`*^9}}],

Cell[BoxData[
 RowBox[{"3.112373881534077`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.273875327161397`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.682519208820395*^9, 3.682519239889466*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["n", "z"], " ", 
      RowBox[{"GammaRegularized", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "n"}], "]"}]}], 
     RowBox[{"Gamma", "[", 
      RowBox[{"z", "+", "1"}], "]"}]]}], "/.", 
   RowBox[{"n", "\[Rule]", 
    RowBox[{"-", "3.3"}]}]}], "/.", 
  RowBox[{"z", "\[Rule]", "1.3"}]}]], "Input",
 CellChangeTimes->{{3.682519254292494*^9, 3.682519264057513*^9}}],

Cell[BoxData[
 RowBox[{"3.112373881534077`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.2738753271613974`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.6825192648975143`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     SuperscriptBox["n", "z"], 
     RowBox[{"z", " ", 
      RowBox[{"Gamma", "[", "z", "]"}]}]], "+", 
    FractionBox[
     RowBox[{
      SuperscriptBox["n", "z"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "n"}], "]"}]}], 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "-", "z"}], "]"}], " ", 
      RowBox[{"Gamma", "[", "z", "]"}]}]]}], "/.", 
   RowBox[{"n", "\[Rule]", "13.3"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "1.3"}]}]], "Input",
 CellChangeTimes->{3.68251932217966*^9, 3.682519361679746*^9}],

Cell[BoxData["24.77670233622338`"], "Output",
 CellChangeTimes->{3.6825193226836615`*^9, 3.682519362975749*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["n", "z"], " "}], 
     RowBox[{"Gamma", "[", 
      RowBox[{"z", "+", "1"}], "]"}]], 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"GammaRegularized", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "n"}], "]"}]}], ")"}]}], "/.", 
   RowBox[{"n", "\[Rule]", "13.3"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "1.3"}]}]], "Input",
 CellChangeTimes->{{3.6825193380916944`*^9, 3.6825193536947303`*^9}}],

Cell[BoxData["24.776702336223387`"], "Output",
 CellChangeTimes->{{3.682519347111717*^9, 3.6825193544387317`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["n", "z"], " "}], 
     RowBox[{"Gamma", "[", 
      RowBox[{"z", "+", "1"}], "]"}]], 
    RowBox[{"(", 
     RowBox[{"GammaRegularized", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "0", ",", "n"}], "]"}], ")"}]}], "/.", 
   RowBox[{"n", "\[Rule]", "13.3"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "1.3"}]}]], "Input",
 CellChangeTimes->{{3.682520038801588*^9, 3.6825200423195972`*^9}}],

Cell[BoxData["24.776702336223387`"], "Output",
 CellChangeTimes->{3.6825200427095976`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"1", "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "-", "z"}], "]"}]}], "/", 
    RowBox[{"GammaRegularized", "[", 
     RowBox[{
      RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "k"}], ")"}]}], 
      RowBox[{
       RowBox[{"x", "^", "k"}], "/", 
       RowBox[{"(", 
        RowBox[{"k", "!"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6825200802236757`*^9, 3.6825201296697817`*^9}, {
  3.68252017027849*^9, 3.6825203060037947`*^9}, {3.6825203960757837`*^9, 
  3.682520443180889*^9}, {3.682520541702114*^9, 3.6825205652681694`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "z"], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"-", "z"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]}]], "Output",
 CellChangeTimes->{{3.6825202539886737`*^9, 3.682520325336836*^9}, {
   3.682520400355791*^9, 3.682520443460889*^9}, {3.682520544353121*^9, 
   3.68252056560817*^9}, 3.6825208055316763`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"17", "^", 
   RowBox[{"(", 
    RowBox[{"5", "/", "3"}], ")"}]}], "/", 
  RowBox[{"Gamma", "[", 
   RowBox[{
    RowBox[{"5", "/", "3"}], "+", "1"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6825202128815846`*^9, 3.6825202169985924`*^9}, {
  3.6825203107008023`*^9, 3.6825203141008105`*^9}, {3.682520378966741*^9, 
  3.6825204407888823`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{"17", " ", 
   SuperscriptBox["17", 
    RowBox[{"2", "/", "3"}]]}], 
  RowBox[{"Gamma", "[", 
   FractionBox["8", "3"], "]"}]]], "Output",
 CellChangeTimes->{
  3.6825202172735944`*^9, {3.6825203143808107`*^9, 3.682520323386832*^9}, {
   3.6825203810447454`*^9, 3.6825204387038774`*^9}, 3.682520806691678*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"-", "z"}], "]"}], "/", 
      RowBox[{"Gamma", "[", "z", "]"}]}], "/", "z"}], "/", 
    RowBox[{"Gamma", "[", 
     RowBox[{"-", "z"}], "]"}]}], "/", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825204583389196`*^9, 3.682520507689041*^9}}],

Cell[BoxData[
 FractionBox["1", 
  RowBox[{"z", " ", 
   RowBox[{"Gamma", "[", "z", "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}]]], "Output",
 CellChangeTimes->{{3.682520455687915*^9, 3.6825205081660423`*^9}, 
   3.6825206738634033`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "z"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"-", "z"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]}], "/.", 
   RowBox[{"x", "\[Rule]", "12.3"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "2.2"}]}]], "Input",
 CellChangeTimes->{{3.682520576954192*^9, 3.6825205808431997`*^9}}],

Cell[BoxData["103.1014598088635`"], "Output",
 CellChangeTimes->{3.682520581129201*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"12.3", "^", "2.2"}], "/", 
  RowBox[{"(", 
   RowBox[{"2.2", "!"}], ")"}]}]], "Input",
 CellChangeTimes->{{3.682520587015211*^9, 3.6825205934922237`*^9}}],

Cell[BoxData["103.10145980886348`"], "Output",
 CellChangeTimes->{3.682520593802225*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{"z", " ", 
   RowBox[{"Gamma", "[", "z", "]"}], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{
     RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825206752954054`*^9, 3.6825206957624474`*^9}}],

Cell[BoxData[
 RowBox[{"z", " ", 
  RowBox[{"Gamma", "[", "z", "]"}], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{
    RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}]], "Output",
 CellChangeTimes->{{3.6825206801694145`*^9, 3.6825206965624485`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"-", "1"}], "/", 
      RowBox[{"Gamma", "[", 
       RowBox[{"z", "+", "1"}], "]"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], "/", 
    RowBox[{"GammaRegularized", "[", 
     RowBox[{
      RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "k"}], ")"}]}], 
      RowBox[{
       RowBox[{"x", "^", "k"}], "/", 
       RowBox[{"(", 
        RowBox[{"k", "!"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.6825207217905006`*^9, 3.682520734284526*^9}, 
   3.6825207759986143`*^9}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["x", "z"], 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "+", "z"}], "]"}], " ", 
   RowBox[{"GammaRegularized", "[", 
    RowBox[{
     RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}]]], "Output",
 CellChangeTimes->{3.6825207356965275`*^9, 3.6825207765106153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   FractionBox[
    SuperscriptBox["x", "z"], 
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{"1", "+", "z"}], "]"}], " ", 
     RowBox[{"GammaRegularized", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}]], "/.", 
   RowBox[{"x", "\[Rule]", "12.3"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "2.2"}]}]], "Input",
 CellChangeTimes->{{3.6825207473935547`*^9, 3.6825207518845625`*^9}, 
   3.6825207854456334`*^9}],

Cell[BoxData["103.10145975324677`"], "Output",
 CellChangeTimes->{3.6825207521465635`*^9, 3.682520785805634*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", "z"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"-", "z"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]}], "/.", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"-", "40.2"}]}]}], "/.", 
  RowBox[{"x", "\[Rule]", "62.3"}]}]], "Input",
 CellChangeTimes->{{3.6825208250187173`*^9, 3.6825208482897663`*^9}}],

Cell[BoxData["5.791294712220925`*^-27"], "Output",
 CellChangeTimes->{{3.6825208280187235`*^9, 3.682520848810768*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "-", "z"}], "]"}]}], "/", 
     RowBox[{"GammaRegularized", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], " ", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], 
       RowBox[{
        RowBox[{"x", "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"k", "!"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6825208837958508`*^9, 3.6825208938398705`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "z"], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"-", "z"}], "]"}], " ", 
    RowBox[{"Sin", "[", 
     RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]}]], "Output",
 CellChangeTimes->{{3.682520884899852*^9, 3.682520893951871*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"-", 
    FractionBox[
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"-", "z"}], "]"}], " ", 
      RowBox[{"Sin", "[", 
       RowBox[{"\[Pi]", " ", "z"}], "]"}]}], "\[Pi]"]}], ",", 
   RowBox[{"z", "\[Rule]", 
    RowBox[{"1", "/", "2"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825209086429014`*^9, 3.682520936797958*^9}}],

Cell[BoxData[
 FractionBox["2", 
  SqrtBox["\[Pi]"]]], "Output",
 CellChangeTimes->{{3.6825209096629033`*^9, 3.682520937197959*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "2"}], ")"}], "!"}]}]], "Input",
 CellChangeTimes->{{3.6825209401159644`*^9, 3.682520945097975*^9}}],

Cell[BoxData[
 FractionBox["2", 
  SqrtBox["\[Pi]"]]], "Output",
 CellChangeTimes->{{3.68252094222497*^9, 3.6825209452979755`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"-", "z"}], "]"}], "/", 
        RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
       RowBox[{"Gamma", "[", 
        RowBox[{"-", "z"}], "]"}]}], "/", 
      RowBox[{"-", "z"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], " ", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], 
       RowBox[{
        RowBox[{"x", "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"k", "!"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6825209661590195`*^9, 3.682521014053124*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["x", "z"], 
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "+", "z"}], "]"}]]], "Output",
 CellChangeTimes->{{3.682520973322033*^9, 3.682521014429126*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
      RowBox[{"-", "z"}]}], "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], " ", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], 
       RowBox[{
        RowBox[{"x", "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"k", "!"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6825210364521685`*^9, 3.6825210392321744`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["x", "z"], 
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "+", "z"}], "]"}]]], "Output",
 CellChangeTimes->{3.682521039742175*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{"1", "+", "z"}], "]"}], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], ")"}]}], " ", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], 
       RowBox[{
        RowBox[{"x", "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"k", "!"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.6825210478481913`*^9, 3.6825210704132357`*^9}}],

Cell[BoxData[
 FractionBox[
  SuperscriptBox["x", "z"], 
  RowBox[{"Gamma", "[", 
   RowBox[{"1", "+", "z"}], "]"}]]], "Output",
 CellChangeTimes->{{3.6825210502051964`*^9, 3.682521070683236*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullSimplify", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"Sin", "[", 
        RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], "/", 
      RowBox[{"GammaRegularized", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], " ", 
     RowBox[{"Sum", "[", " ", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{"(", 
           RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
         RowBox[{"(", 
          RowBox[{"z", "-", "k"}], ")"}]}], 
        RowBox[{
         RowBox[{"x", "^", "k"}], "/", 
         RowBox[{"(", 
          RowBox[{"k", "!"}], ")"}]}]}], ",", 
       RowBox[{"{", 
        RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}], "/.", 
   RowBox[{"x", "\[Rule]", "13.3"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "4.2"}]}]], "Input",
 CellChangeTimes->{{3.682521130839367*^9, 3.682521133332371*^9}, {
  3.6825214608070726`*^9, 3.6825214878751335`*^9}}],

Cell[BoxData["1611.577489955751`"], "Output",
 CellChangeTimes->{
  3.6825211338323717`*^9, {3.6825214650800805`*^9, 3.682521488275134*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullSimplify", "@", 
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", 
        RowBox[{"z", "!"}]}], "/", 
       RowBox[{"(", " ", 
        RowBox[{"Gamma", "[", 
         RowBox[{
          RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}], ")"}]}], " ", 
      RowBox[{"Sum", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
          RowBox[{"(", 
           RowBox[{"z", "-", "k"}], ")"}]}], 
         RowBox[{
          RowBox[{"x", "^", "k"}], "/", 
          RowBox[{"(", 
           RowBox[{"k", "!"}], ")"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "]"}]}], 
   "/.", 
   RowBox[{"x", "\[Rule]", "13.3"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "4.2"}]}]], "Input",
 CellChangeTimes->{
  3.682521307551742*^9, {3.682521446395043*^9, 3.682521483179126*^9}}],

Cell[BoxData["1611.5774899557532`"], "Output",
 CellChangeTimes->{
  3.682521307967743*^9, {3.682521448000047*^9, 3.6825214835891266`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "/", 
     RowBox[{"z", "!"}]}], "/", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"-", "z"}], ",", "0", ",", "8."}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682521596732375*^9, 3.6825216160144186`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-3, 3}, {-0.32050489756645995`, 0.3186705368363702}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.682521616246419*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], "/", 
    RowBox[{"GammaRegularized", "[", 
     RowBox[{
      RowBox[{"-", "z"}], ",", "0", ",", "8."}], "]"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"z", ",", 
     RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825216233814316`*^9, 3.682521643773473*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwtW3k41N/3Z2YsKbKlaJMiUVmLQucdSklKRQpR2hCphGhRSbKlEiqFVpUP
osV+3pbs28z7LZHsWRLKNmNJv/k+z++veV7Pveee5XXOuffMM7PsyOk9xxgC
AgIRTAGB/306p0YO/fsnQha5NW74+zogX3ZKQcVgWoSMvBwdp3L3EBZvfWHv
zRMhX221WhVwxwNVWrLKf/0WIUPY0an7Ii/jzzmdzxrbRchlMotjlcMj0NN1
nW1GkQi5kA6Xzrr2BC8rN5HHb4qQKlVKLw45pODDR8vvVkuIkNtF1UKt2Hn4
RvNB4icxEfL1v3/tphb5mP1Z4l2isAhJqhnZ95bkY9PQRO35GWGya4XL1405
iAqmdeJLBoXJpIMnxsdqSXz06+Itj2phUtuk5JV+ciHGGX0JmBsmTF5pmhfe
u6kEkzk7IiduCpOP3EZ1NnmXYO6JgvjO6/z1ZsXtB/4rweY7yfmf/IXJFDky
/LtCKS7uvjbt6CZM6mrt3zl3pBSfRGj4ppkLk5pbf85PiCnH+Nbg01az+Pt1
LR83/1eFTrNFawOEhMlQhzT/gsYqVNK7uTZNUJhsNni35JhQNb6MuDEgMSlE
Gl+9rNljV40pRtfcqn4KkX1zdOZVCdVg7iP/E2ZVQuRg312nUotavFw6WeJd
JkRSyqevnvKqRWLkgsrLYiEytGzJs4pHtVhs7vuDlSdEbqzfHJ7WV4uVE17O
hf8JkXszm2vmbK7Dpv0ejka3+fuNr/WEcuow7vpA/qlQIXJM8UeJdFcdHko9
tSTuphCpM7ol6txYHXYIu32fvCJEOiHHsXA+G/s+nLDL9BQic4iHcZEH2ciT
ObxfZ48QGVwi1FL7lY3Z0PbxiKUQab9sjUNXDxsvujnK3TUXIn+qzgmvG2ej
QJFD/W9jIbI5kvTXkOWgyNmDe1N0hEj16zekWTs5KFe3d9eqeUKkcLTkpoGP
HJSvWdngJiVEug33F2kUcXBR1dShFHEh0nX0fM72Wg4uK3vmoSMsROppv3/A
7OHganIk3IjLIh+toezDZCnUyC+dFzDCIvd05X66uZRC7dxHjwuHWOS/F/4F
B9Qo1Ms0+c+sl0V+UHoQdBUoNE67V2XVyCIjhT95fD9B4ZaUE/ui6lmkoAlR
H3qGwm3JBs1f2Cwy9e8fI0l/CncmdfbbVbDINTuVSh6GU2iboDP7eA6LNFAt
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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-3, 3}, {-0.3205048975664599, 0.31867053683637037`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.6825216447894745`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
      RowBox[{"(", 
       RowBox[{"z", "-", "k"}], ")"}]}], " ", 
     RowBox[{
      RowBox[{"17.", "^", "k"}], "/", 
      RowBox[{"k", "!"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "55"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.682521754468712*^9, 3.682521786410781*^9}, {
  3.6825219094170313`*^9, 3.68252192375806*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   FractionBox["1.`", "z"], ",", 
   RowBox[{"-", 
    FractionBox["17.`", 
     RowBox[{
      RowBox[{"-", "1.`"}], "+", "z"}]]}], ",", 
   FractionBox["144.5`", 
    RowBox[{
     RowBox[{"-", "2.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["818.8333333333333`", 
     RowBox[{
      RowBox[{"-", "3.`"}], "+", "z"}]]}], ",", 
   FractionBox["3480.0416666666665`", 
    RowBox[{
     RowBox[{"-", "4.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["11832.141666666666`", 
     RowBox[{
      RowBox[{"-", "5.`"}], "+", "z"}]]}], ",", 
   FractionBox["33524.40138888889`", 
    RowBox[{
     RowBox[{"-", "6.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["81416.40337301587`", 
     RowBox[{
      RowBox[{"-", "7.`"}], "+", "z"}]]}], ",", 
   FractionBox["173009.85716765872`", 
    RowBox[{
     RowBox[{"-", "8.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["326796.3968722443`", 
     RowBox[{
      RowBox[{"-", "9.`"}], "+", "z"}]]}], ",", 
   FractionBox["555553.8746828152`", 
    RowBox[{
     RowBox[{"-", "10.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["858583.2608734418`", 
     RowBox[{
      RowBox[{"-", "11.`"}], "+", "z"}]]}], ",", 
   FractionBox["1.2163262862373758`*^6", 
    RowBox[{
     RowBox[{"-", "12.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["1.590580528156568`*^6", 
     RowBox[{
      RowBox[{"-", "13.`"}], "+", "z"}]]}], ",", 
   FractionBox["1.9314192127615472`*^6", 
    RowBox[{
     RowBox[{"-", "14.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["2.188941774463087`*^6", 
     RowBox[{
      RowBox[{"-", "15.`"}], "+", "z"}]]}], ",", 
   FractionBox["2.32575063536703`*^6", 
    RowBox[{
     RowBox[{"-", "16.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["2.32575063536703`*^6", 
     RowBox[{
      RowBox[{"-", "17.`"}], "+", "z"}]]}], ",", 
   FractionBox["2.196542266735528`*^6", 
    RowBox[{
     RowBox[{"-", "18.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["1.9653272912896832`*^6", 
     RowBox[{
      RowBox[{"-", "19.`"}], "+", "z"}]]}], ",", 
   FractionBox["1.6705281975962305`*^6", 
    RowBox[{
     RowBox[{"-", "20.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["1.352332350435044`*^6", 
     RowBox[{
      RowBox[{"-", "21.`"}], "+", "z"}]]}], ",", 
   FractionBox["1.0449840889725339`*^6", 
    RowBox[{
     RowBox[{"-", "22.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["772379.5440231771`", 
     RowBox[{
      RowBox[{"-", "23.`"}], "+", "z"}]]}], ",", 
   FractionBox["547102.1770164173`", 
    RowBox[{
     RowBox[{"-", "24.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["372029.4803711637`", 
     RowBox[{
      RowBox[{"-", "25.`"}], "+", "z"}]]}], ",", 
   FractionBox["243250.0448580685`", 
    RowBox[{
     RowBox[{"-", "26.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["153157.43565137647`", 
     RowBox[{
      RowBox[{"-", "27.`"}], "+", "z"}]]}], ",", 
   FractionBox["92988.44307405001`", 
    RowBox[{
     RowBox[{"-", "28.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["54510.46662961554`", 
     RowBox[{
      RowBox[{"-", "29.`"}], "+", "z"}]]}], ",", 
   FractionBox["30889.2644234488`", 
    RowBox[{
     RowBox[{"-", "30.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["16939.274038665473`", 
     RowBox[{
      RowBox[{"-", "31.`"}], "+", "z"}]]}], ",", 
   FractionBox["8998.989333041034`", 
    RowBox[{
     RowBox[{"-", "32.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["4635.842989748411`", 
     RowBox[{
      RowBox[{"-", "33.`"}], "+", "z"}]]}], ",", 
   FractionBox["2317.9214948742056`", 
    RowBox[{
     RowBox[{"-", "34.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["1125.847583224614`", 
     RowBox[{
      RowBox[{"-", "35.`"}], "+", "z"}]]}], ",", 
   FractionBox["531.6502476338453`", 
    RowBox[{
     RowBox[{"-", "36.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["244.27173539933435`", 
     RowBox[{
      RowBox[{"-", "37.`"}], "+", "z"}]]}], ",", 
   FractionBox["109.27946057338644`", 
    RowBox[{
     RowBox[{"-", "38.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["47.63463666019409`", 
     RowBox[{
      RowBox[{"-", "39.`"}], "+", "z"}]]}], ",", 
   FractionBox["20.24472058058249`", 
    RowBox[{
     RowBox[{"-", "40.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["8.394152435851275`", 
     RowBox[{
      RowBox[{"-", "41.`"}], "+", "z"}]]}], ",", 
   FractionBox["3.3976331287969446`", 
    RowBox[{
     RowBox[{"-", "42.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["1.3432503067336758`", 
     RowBox[{
      RowBox[{"-", "43.`"}], "+", "z"}]]}], ",", 
   FractionBox["0.518983073056193`", 
    RowBox[{
     RowBox[{"-", "44.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["0.19606027204345067`", 
     RowBox[{
      RowBox[{"-", "45.`"}], "+", "z"}]]}], ",", 
   FractionBox["0.07245705705953612`", 
    RowBox[{
     RowBox[{"-", "46.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["0.026207871702385404`", 
     RowBox[{
      RowBox[{"-", "47.`"}], "+", "z"}]]}], ",", 
   FractionBox["0.0092819545612615`", 
    RowBox[{
     RowBox[{"-", "48.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["0.003220269949825418`", 
     RowBox[{
      RowBox[{"-", "49.`"}], "+", "z"}]]}], ",", 
   FractionBox["0.001094891782940642`", 
    RowBox[{
     RowBox[{"-", "50.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["0.0003649639276468807`", 
     RowBox[{
      RowBox[{"-", "51.`"}], "+", "z"}]]}], ",", 
   FractionBox["0.0001193151301922494`", 
    RowBox[{
     RowBox[{"-", "52.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["0.00003827089081638188`", 
     RowBox[{
      RowBox[{"-", "53.`"}], "+", "z"}]]}], ",", 
   FractionBox["0.000012048243405157257`", 
    RowBox[{
     RowBox[{"-", "54.`"}], "+", "z"}]], ",", 
   RowBox[{"-", 
    FractionBox["3.7240025070486067`*^-6", 
     RowBox[{
      RowBox[{"-", "55.`"}], "+", "z"}]]}]}], "}"}]], "Output",
 CellChangeTimes->{{3.682521767349739*^9, 3.6825217867407813`*^9}, {
  3.682521910089032*^9, 3.682521924182061*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "/", 
  RowBox[{"Gamma", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "/", "2"}], ",", "0", ",", "17."}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6825219457611094`*^9, 3.682521961170143*^9}}],

Cell[BoxData["0.2820947917305142`"], "Output",
 CellChangeTimes->{{3.682521953387123*^9, 3.6825219620161476`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Log", "[", "x", "]"}], "^", 
     RowBox[{"(", 
      RowBox[{"z", "-", "1"}], ")"}]}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"z", "-", "1"}], ")"}], "!"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.6825224029504194`*^9, 3.682522417116446*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", "z", "]"}], "-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"z", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
      RowBox[{"-", "z"}]], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "z"]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "1"}], "+", "z"}], ")"}], "!"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "z", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.68252241877845*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"GammaRegularized", "[", 
     RowBox[{"z", ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " ", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", 
    RowBox[{"-", "z"}]}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"Log", "[", "n", "]"}], ")"}], 
    RowBox[{"-", "z"}]], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "z"]}], "]"}]], "Input",
 CellChangeTimes->{{3.682522427782468*^9, 3.6825224692375574`*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], 
   RowBox[{"-", "z"}]], " ", 
  RowBox[{"GammaRegularized", "[", 
   RowBox[{"z", ",", "0", ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{{3.682522432692479*^9, 3.6825224696005583`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"-", "z"}]], " ", 
     RowBox[{"GammaRegularized", "[", 
      RowBox[{"z", ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], "/.", 
    RowBox[{"n", "\[Rule]", "100"}]}], "/.", 
   RowBox[{"z", "\[Rule]", "2.5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682522476349573*^9, 3.682522483541587*^9}, {
  3.682522531479678*^9, 3.6825225315996785`*^9}}],

Cell[BoxData[
 RowBox[{"532.1483803067648`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.682522479515581*^9, 3.6825224837615876`*^9}, 
   3.6825225320296793`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Hypergeometric1F1", "[", 
     RowBox[{"z", ",", 
      RowBox[{"z", "+", "1"}], ",", 
      RowBox[{"Log", "[", "n", "]"}]}], "]"}], 
    RowBox[{
     RowBox[{
      RowBox[{"Log", "[", "n", "]"}], "^", "z"}], "/", 
     RowBox[{"z", "!"}]}]}], "/.", 
   RowBox[{"n", "\[Rule]", "100."}]}], "/.", 
  RowBox[{"z", "\[Rule]", "2.5"}]}]], "Input",
 CellChangeTimes->{{3.6825224898645983`*^9, 3.6825225266316705`*^9}}],

Cell[BoxData[
 RowBox[{"532.1483803067648`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.221678316682466`*^-17", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.6825225127376437`*^9, 3.682522527023671*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], 
      RowBox[{"-", "z"}]], " ", 
     RowBox[{"GammaRegularized", "[", 
      RowBox[{"z", ",", "0", ",", 
       RowBox[{"-", "n"}]}], "]"}]}], "/.", 
    RowBox[{"n", "\[Rule]", "3."}]}], "/.", 
   RowBox[{"z", "\[Rule]", "2.5"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.68252265536805*^9, 3.682522713133174*^9}}],

Cell[BoxData[
 RowBox[{"47.50730871640121`", "\[VeryThinSpace]", "+", 
  RowBox[{"0.`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.6825226600100603`*^9, 3.682522713423174*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"n", "^", "z"}], "/", 
    RowBox[{"z", "!"}]}], "/.", 
   RowBox[{"n", "\[Rule]", "3."}]}], "/.", 
  RowBox[{"z", "\[Rule]", "2.5"}]}]], "Input",
 CellChangeTimes->{{3.6825226833911095`*^9, 3.682522696438139*^9}}],

Cell[BoxData["4.690584114268032`"], "Output",
 CellChangeTimes->{3.6825226967481394`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"Sin", "[", 
       RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], "/", 
     RowBox[{"GammaRegularized", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], " ", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], 
       RowBox[{
        RowBox[{"x", "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"k", "!"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], "/.", 
   RowBox[{"x", "\[Rule]", "13.3"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "4.2"}]}]], "Input",
 CellChangeTimes->{{3.682522767431279*^9, 3.682522769704283*^9}}],

Cell[BoxData["1611.5774899557507`"], "Output",
 CellChangeTimes->{3.6825227706382847`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", "z"}], "/", 
    RowBox[{"z", "!"}]}], "/.", 
   RowBox[{"x", "\[Rule]", "13.3"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "4.2"}]}]], "Input",
 CellChangeTimes->{{3.682522774107293*^9, 3.6825227795013027`*^9}}],

Cell[BoxData["1611.5774899557532`"], "Output",
 CellChangeTimes->{3.6825227797813034`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"bb", "[", 
   RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Sin", "[", 
      RowBox[{"Pi", " ", "z"}], "]"}], "/", "Pi"}], "/", 
    RowBox[{"GammaRegularized", "[", 
     RowBox[{"z", ",", "0", ",", "x"}], "]"}]}], " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
       RowBox[{"(", 
        RowBox[{"z", "-", "k"}], ")"}]}], 
      RowBox[{"Hypergeometric1F1", "[", 
       RowBox[{"k", ",", 
        RowBox[{"k", "+", "1"}], ",", 
        RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
      RowBox[{
       RowBox[{
        RowBox[{"Log", "[", "x", "]"}], "^", "k"}], "/", 
       RowBox[{"k", "!"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "80"}], "}"}]}], 
    "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"bb2", "[", 
   RowBox[{"x_", ",", "z_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"-", "z"}]], " ", 
   RowBox[{"GammaRegularized", "[", 
    RowBox[{"z", ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "x", "]"}]}]}], "]"}]}]}]}], "Input",
 CellChangeTimes->{{3.682522800130344*^9, 3.6825228410934296`*^9}, {
  3.6825228824765143`*^9, 3.6825230641408634`*^9}, {3.6825232927384386`*^9, 
  3.6825232931564627`*^9}, {3.682523347162552*^9, 3.682523397467429*^9}, {
  3.6825234844484043`*^9, 3.682523505618615*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bb", "[", 
  RowBox[{"131.1", ",", "7.2"}], "]"}]], "Input",
 CellChangeTimes->{{3.682523303162035*^9, 3.6825233326007185`*^9}, {
  3.682523399080521*^9, 3.682523435639612*^9}}],

Cell[BoxData["961.3771201106811`"], "Output",
 CellChangeTimes->{{3.6825233065292273`*^9, 3.682523436071637*^9}, {
  3.6825234863985157`*^9, 3.6825235070416965`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"bb2", "[", 
  RowBox[{"131.1", ",", "7.2"}], "]"}]], "Input",
 CellChangeTimes->{{3.682522930619604*^9, 3.682522968660679*^9}, 
   3.6825233350398583`*^9, {3.682523422503861*^9, 3.6825234314883747`*^9}}],

Cell[BoxData[
 RowBox[{"961.2975100506462`", "\[VeryThinSpace]", "+", 
  RowBox[{"5.684341886080802`*^-14", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.6825229424936285`*^9, 3.6825229834867077`*^9}, 
   3.6825232975757155`*^9, 3.682523335398879*^9, {3.682523404207814*^9, 
   3.682523432120411*^9}, {3.682523487766594*^9, 3.68252350815376*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{"1", "/", 
       RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "-", "z"}], "]"}]}], " ", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
      RowBox[{"(", 
       RowBox[{"z", "-", "k"}], ")"}]}], 
     RowBox[{"Hypergeometric1F1", "[", 
      RowBox[{"k", ",", 
       RowBox[{"k", "+", "1"}], ",", 
       RowBox[{"Log", "[", "x", "]"}]}], "]"}], 
     RowBox[{
      RowBox[{
       RowBox[{"Log", "[", "x", "]"}], "^", "k"}], "/", 
      RowBox[{"k", "!"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.6825235919905553`*^9, 3.6825236243914084`*^9}, {
  3.6825237295440135`*^9, 3.6825237303360205`*^9}}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "0"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "k"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "k"}], "]"}], "-", 
      RowBox[{"k", " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{"k", ",", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "x", "]"}]}]}], "]"}]}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "x", "]"}]}], ")"}], 
     RowBox[{"-", "k"}]], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "x", "]"}], "k"]}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "k"}], "+", "z"}], ")"}], " ", 
    RowBox[{"k", "!"}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"1", "-", "z"}], "]"}], " ", 
    RowBox[{"Gamma", "[", "z", "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.682523603490213*^9, 3.6825236155039*^9}, {
  3.68252420812763*^9, 3.682524208211632*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"D", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"-", "1"}], "/", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", 
        RowBox[{"1", "+", "z"}], "]"}], " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], ")"}]}], " ", 
    RowBox[{"Sum", "[", " ", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"(", 
          RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"z", "-", "k"}], ")"}]}], 
       RowBox[{
        RowBox[{"x", "^", "k"}], "/", 
        RowBox[{"(", 
         RowBox[{"k", "!"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], ",", "x"}],
   "]"}]], "Input",
 CellChangeTimes->{{3.6825247092162647`*^9, 3.682524720202284*^9}, {
  3.6825247608243647`*^9, 3.6825247619143667`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", "x"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "-", "z"}], "]"}], "+", 
      RowBox[{"z", " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "z"}], ",", "x"}], "]"}]}]}], ")"}]}], 
   RowBox[{"x", " ", "z", " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"1", "+", "z"}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{"Gamma", "[", 
      RowBox[{
       RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}], "2"]}]], "+", 
  FractionBox[
   SuperscriptBox["\[ExponentialE]", 
    RowBox[{"-", "x"}]], 
   RowBox[{"x", " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"1", "+", "z"}], "]"}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", 
     RowBox[{
      RowBox[{"-", "1"}], "+", "z"}]], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "-", "z"}], "]"}], "+", 
      RowBox[{"z", " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "z"}], ",", "x"}], "]"}]}]}], ")"}]}], 
   RowBox[{
    RowBox[{"Gamma", "[", 
     RowBox[{"1", "+", "z"}], "]"}], " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}]]}]], "Output",
 CellChangeTimes->{{3.682524714232273*^9, 3.6825247211972866`*^9}, 
   3.682524762481368*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{"-", "x"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"1", "-", "z"}], "]"}], "+", 
        RowBox[{"z", " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{"-", "z"}], ",", "x"}], "]"}]}]}], ")"}]}], 
     RowBox[{"x", " ", "z", " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "z"}], "]"}], " ", 
      SuperscriptBox[
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}], "2"]}]], "+", 
    FractionBox[
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "x"}]], 
     RowBox[{"x", " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "z"}], "]"}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}]], "-", 
    FractionBox[
     RowBox[{
      SuperscriptBox["x", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "z"}]], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Gamma", "[", 
         RowBox[{"1", "-", "z"}], "]"}], "+", 
        RowBox[{"z", " ", 
         RowBox[{"Gamma", "[", 
          RowBox[{
           RowBox[{"-", "z"}], ",", "x"}], "]"}]}]}], ")"}]}], 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "+", "z"}], "]"}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}]]}], ",", "x"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.682524726577299*^9, 3.6825247326083083`*^9}, {
  3.682524771746383*^9, 3.6825247904334197`*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["x", "z"], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"1", "-", "z"}], "]"}], "+", 
      RowBox[{"z", " ", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "z"}], ",", "x"}], "]"}]}]}], ")"}]}], 
   RowBox[{"z", " ", 
    RowBox[{"Gamma", "[", 
     RowBox[{"1", "+", "z"}], "]"}], " ", 
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"-", "z"}], "]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{
        RowBox[{"-", "z"}], ",", "x"}], "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{{3.682524757770358*^9, 3.6825247909674206`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"D", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"-", "1"}], "/", 
        RowBox[{"z", "!"}]}], "/", 
       RowBox[{"Gamma", "[", 
        RowBox[{
         RowBox[{"-", "z"}], ",", "0", ",", "x"}], "]"}]}], 
      RowBox[{"Sum", "[", 
       RowBox[{
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
          RowBox[{"(", 
           RowBox[{"z", "-", "k"}], ")"}]}], " ", 
         RowBox[{
          RowBox[{"x", "^", "k"}], "/", 
          RowBox[{"k", "!"}]}]}], ",", 
        RowBox[{"{", 
         RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}], ",", 
     "x"}], "]"}], "/.", 
   RowBox[{"x", "\[Rule]", "13.3"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "3.2"}]}]], "Input",
 CellChangeTimes->{{3.682525004323921*^9, 3.682525089389077*^9}}],

Cell[BoxData["122.44672658152145`"], "Output",
 CellChangeTimes->{{3.682525012314935*^9, 3.6825250896990776`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"x", "^", 
     RowBox[{"(", 
      RowBox[{"z", "-", "1"}], ")"}]}], "/", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"z", "-", "1"}], ")"}], "!"}]}], "/.", 
   RowBox[{"x", "\[Rule]", "13.3"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "3.2"}]}]], "Input",
 CellChangeTimes->{{3.682525069199041*^9, 3.6825250948980923`*^9}}],

Cell[BoxData["122.4467265815214`"], "Output",
 CellChangeTimes->{{3.6825250798580585`*^9, 3.682525095298093*^9}}]
}, Open  ]],

Cell[BoxData[" "], "Input",
 CellChangeTimes->{3.6825251284291534`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"1", "/", 
    RowBox[{"Gamma", "[", "z", "]"}]}], "/", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", "-", "z"}], "]"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "13.3"}]}]], "Input",
 CellChangeTimes->{{3.6825254117280245`*^9, 3.6825254531610966`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.2575181074002423`"}]], "Output",
 CellChangeTimes->{{3.682525416065033*^9, 3.6825254534510975`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", 
     RowBox[{"Gamma", "[", 
      RowBox[{"z", "+", "1"}], "]"}]}], "/", 
    RowBox[{"Gamma", "[", 
     RowBox[{"-", "z"}], "]"}]}], "/", 
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}]}], "/.", 
  RowBox[{"z", "\[Rule]", "13.3"}]}]], "Input",
 CellChangeTimes->{{3.6825251272991524`*^9, 3.682525127309152*^9}, {
  3.6825254559471035`*^9, 3.6825254622431135`*^9}, {3.682525506583194*^9, 
  3.6825255496502724`*^9}, {3.682525635417012*^9, 3.6825256423970227`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.25751810740024245`"}]], "Output",
 CellChangeTimes->{
  3.682525463183115*^9, {3.6825255089831967`*^9, 3.682525549942273*^9}, {
   3.682525637028015*^9, 3.6825256428170233`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Gamma", "[", 
  RowBox[{"-", "3.3"}], "]"}]], "Input",
 CellChangeTimes->{{3.6825256440990257`*^9, 3.6825256616530585`*^9}}],

Cell[BoxData["0.4385173921987631`"], "Output",
 CellChangeTimes->{3.6825256619330587`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Gamma", "[", 
  RowBox[{"-", "3.3"}], "]"}]], "Input",
 CellChangeTimes->{{3.682525647089033*^9, 3.682525674814083*^9}}],

Cell[BoxData["0.4385173921987631`"], "Output",
 CellChangeTimes->{{3.682525671473077*^9, 3.682525675066084*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{"k", ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "x", "]"}]}]}], "]"}], "/", 
     RowBox[{"Gamma", "[", "k", "]"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"z", "-", "k"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682526705195543*^9, 3.6825267540646324`*^9}, {
   3.68252679991613*^9, 3.682526824141176*^9}, 3.6825322493678775`*^9}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "0"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{"Gamma", "[", 
    RowBox[{"k", ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "x", "]"}]}]}], "]"}], 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "k"}], "+", "z"}], ")"}], " ", 
    RowBox[{"Gamma", "[", "k", "]"}]}]]}]], "Output",
 CellChangeTimes->{
  3.6825267695726657`*^9, {3.682526801991136*^9, 3.682526824961177*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", " ", 
  RowBox[{"1", ",", 
   RowBox[{"{", 
    RowBox[{"x", ",", "1", ",", "n"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682526856218238*^9, 3.6825268614412465`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "n"}]], "Output",
 CellChangeTimes->{3.682526861611247*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "@", 
  RowBox[{"Integrate", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "n"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "1", ",", 
      RowBox[{"n", "/", "x"}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6825268623012476`*^9, 3.6825268728392677`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"1", "-", "n", "+", 
    RowBox[{"n", " ", 
     RowBox[{"Log", "[", "n", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.6825268695762625`*^9, 3.682526873782269*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "@", 
  RowBox[{"Integrate", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"x", ",", "1", ",", "n"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"y", ",", "1", ",", 
      RowBox[{"n", "/", "x"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"z", ",", "1", ",", 
      RowBox[{"n", "/", 
       RowBox[{"(", 
        RowBox[{"x", " ", "y"}], ")"}]}]}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6825268874792953`*^9, 3.6825268906803007`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", "1"}], "+", "n", "-", 
    RowBox[{"n", " ", 
     RowBox[{"Log", "[", "n", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", "n", " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.682526899014418*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"-", "1"}], "+", "n", "-", 
   RowBox[{"n", " ", 
    RowBox[{"Log", "[", "n", "]"}]}], "+", 
   RowBox[{
    FractionBox["1", "2"], " ", "n", " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "n", "]"}], "2"]}]}], "/.", 
  RowBox[{"n", "\[Rule]", "13.3"}]}]], "Input",
 CellChangeTimes->{{3.682526946146638*^9, 3.682526948528641*^9}}],

Cell[BoxData["22.414614299891124`"], "Output",
 CellChangeTimes->{3.682526948828642*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"(", 
    RowBox[{"-", "1"}], ")"}], "^", 
   RowBox[{"(", 
    RowBox[{"-", "3"}], ")"}]}], 
  RowBox[{"GammaRegularized", "[", 
   RowBox[{"3", ",", "0", ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "13.3", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.682526949637643*^9, 3.6825269678316765`*^9}}],

Cell[BoxData[
 RowBox[{"22.414614299891138`", "\[VeryThinSpace]", "-", 
  RowBox[{"8.234995696945251`*^-15", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.6825269605886636`*^9, 3.6825269683046775`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"pk", "[", 
   RowBox[{"x_", ",", "k_"}], "]"}], ":=", 
  RowBox[{"1", "-", 
   RowBox[{"x", " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{
        RowBox[{"(", 
         RowBox[{"-", 
          RowBox[{"Log", "[", "x", "]"}]}], ")"}], "^", "j"}], "/", 
       RowBox[{"j", "!"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "0", ",", 
        RowBox[{"k", "-", "1"}]}], "}"}]}], "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.6825270868293962`*^9, 3.6825272101196456`*^9}, 
   3.682527384611994*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "@", 
  RowBox[{"pk", "[", 
   RowBox[{"n", ",", "4"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6825272030616293`*^9, 3.6825272239526706`*^9}, {
  3.682527339035895*^9, 3.682527342547901*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", "n", "+", 
  RowBox[{"n", " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{{3.6825272044046316`*^9, 3.6825272242966723`*^9}, {
   3.6825273393678956`*^9, 3.682527343187902*^9}, 3.682527385898996*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"Gamma", "[", 
     RowBox[{"k", ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "x", "]"}]}]}], "]"}], "/", 
    RowBox[{"Gamma", "[", "k", "]"}]}], "/.", 
   RowBox[{"x", "\[Rule]", "13."}]}], "/.", 
  RowBox[{"k", "\[Rule]", "4"}]}]], "Input",
 CellChangeTimes->{{3.6825272480817184`*^9, 3.682527255452731*^9}, {
  3.682527299587822*^9, 3.6825273295738792`*^9}, {3.6825273954980135`*^9, 
  3.6825274023680277`*^9}}],

Cell[BoxData[
 RowBox[{"15.14294505977555`", "\[VeryThinSpace]", "-", 
  RowBox[{"7.417903678847342`*^-15", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{
  3.6825272556827316`*^9, {3.6825272977278185`*^9, 3.6825273299278803`*^9}, {
   3.682527388164*^9, 3.6825274026300287`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Expand", "[", 
     RowBox[{
      RowBox[{"pk", "[", 
       RowBox[{"n", ",", "k"}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"z", "-", "k"}], ")"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "5"}], "}"}]}], "]"}], "//", 
  "TableForm"}]], "Input",
 CellChangeTimes->{{3.682527260201742*^9, 3.682527279509781*^9}, 
   3.682527331724883*^9, {3.6825273916750064`*^9, 3.682527407922037*^9}, {
   3.6825274482361574`*^9, 3.6825275011942616`*^9}}],

Cell[BoxData[
 TagBox[
  TagBox[GridBox[{
     {
      FractionBox["1", "z"]},
     {
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "z"}]], "-", 
       FractionBox["n", 
        RowBox[{
         RowBox[{"-", "1"}], "+", "z"}]]}]},
     {
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "z"}]], "-", 
       FractionBox["n", 
        RowBox[{
         RowBox[{"-", "2"}], "+", "z"}]], "+", 
       FractionBox[
        RowBox[{"n", " ", 
         RowBox[{"Log", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"-", "2"}], "+", "z"}]]}]},
     {
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "3"}], "+", "z"}]], "-", 
       FractionBox["n", 
        RowBox[{
         RowBox[{"-", "3"}], "+", "z"}]], "+", 
       FractionBox[
        RowBox[{"n", " ", 
         RowBox[{"Log", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"-", "3"}], "+", "z"}]], "-", 
       FractionBox[
        RowBox[{"n", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "n", "]"}], "2"]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "3"}], "+", "z"}], ")"}]}]]}]},
     {
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "z"}]], "-", 
       FractionBox["n", 
        RowBox[{
         RowBox[{"-", "4"}], "+", "z"}]], "+", 
       FractionBox[
        RowBox[{"n", " ", 
         RowBox[{"Log", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"-", "4"}], "+", "z"}]], "-", 
       FractionBox[
        RowBox[{"n", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "n", "]"}], "2"]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "z"}], ")"}]}]], "+", 
       FractionBox[
        RowBox[{"n", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "n", "]"}], "3"]}], 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "4"}], "+", "z"}], ")"}]}]]}]},
     {
      RowBox[{
       FractionBox["1", 
        RowBox[{
         RowBox[{"-", "5"}], "+", "z"}]], "-", 
       FractionBox["n", 
        RowBox[{
         RowBox[{"-", "5"}], "+", "z"}]], "+", 
       FractionBox[
        RowBox[{"n", " ", 
         RowBox[{"Log", "[", "n", "]"}]}], 
        RowBox[{
         RowBox[{"-", "5"}], "+", "z"}]], "-", 
       FractionBox[
        RowBox[{"n", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "n", "]"}], "2"]}], 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", "z"}], ")"}]}]], "+", 
       FractionBox[
        RowBox[{"n", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "n", "]"}], "3"]}], 
        RowBox[{"6", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", "z"}], ")"}]}]], "-", 
       FractionBox[
        RowBox[{"n", " ", 
         SuperscriptBox[
          RowBox[{"Log", "[", "n", "]"}], "4"]}], 
        RowBox[{"24", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "5"}], "+", "z"}], ")"}]}]]}]}
    },
    GridBoxAlignment->{
     "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
      "RowsIndexed" -> {}},
    GridBoxSpacings->{"Columns" -> {
        Offset[0.27999999999999997`], {
         Offset[0.5599999999999999]}, 
        Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
        Offset[0.2], {
         Offset[0.4]}, 
        Offset[0.2]}, "RowsIndexed" -> {}}],
   Column],
  Function[BoxForm`e$, 
   TableForm[BoxForm`e$]]]], "Output",
 CellChangeTimes->{{3.6825272666547585`*^9, 3.6825272797937813`*^9}, 
   3.6825273320048833`*^9, {3.6825273887940006`*^9, 3.682527408154038*^9}, {
   3.682527448436158*^9, 3.682527467812193*^9}, 3.6825275015142617`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.682527359931939*^9, 3.6825273723059688`*^9}, 
   3.6825275153982887`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullSimplify", "@", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"pk", "[", 
      RowBox[{"n", ",", "k"}], "]"}], "/", 
     RowBox[{"(", 
      RowBox[{"z", "-", "k"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6825275724603987`*^9, 3.6825276105134773`*^9}}],

Cell[BoxData[
 RowBox[{
  UnderoverscriptBox["\[Sum]", 
   RowBox[{"k", "=", "0"}], "\[Infinity]"], 
  FractionBox[
   RowBox[{"1", "-", 
    FractionBox[
     RowBox[{"Gamma", "[", 
      RowBox[{"k", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], 
     RowBox[{"Gamma", "[", "k", "]"}]]}], 
   RowBox[{
    RowBox[{"-", "k"}], "+", "z"}]]}]], "Output",
 CellChangeTimes->{{3.6825275940149603`*^9, 3.682527611202482*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"-", "z"}], ")"}]}], 
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{"z", ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "x", "]"}]}]}], "]"}], "/", 
     RowBox[{"Gamma", "[", "z", "]"}]}]}], ")"}], "/", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "k"}], "/", 
      RowBox[{"(", 
       RowBox[{"z", "-", "k"}], ")"}]}], " ", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{"-", "1"}], ")"}], "^", 
      RowBox[{"(", 
       RowBox[{"-", "k"}], ")"}]}], 
     RowBox[{
      RowBox[{"Gamma", "[", 
       RowBox[{"k", ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "x", "]"}]}]}], "]"}], "/", 
      RowBox[{"Gamma", "[", "k", "]"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "0", ",", "Infinity"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6825324002041416`*^9, 3.682532602434489*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], 
    RowBox[{"-", "z"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"z", ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "x", "]"}]}]}], "]"}]}], 
  RowBox[{
   RowBox[{"Gamma", "[", "z", "]"}], " ", 
   RowBox[{
    UnderoverscriptBox["\[Sum]", 
     RowBox[{"k", "=", "0"}], "\[Infinity]"], 
    FractionBox[
     RowBox[{"Gamma", "[", 
      RowBox[{"k", ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "x", "]"}]}]}], "]"}], 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "k"}], "+", "z"}], ")"}], " ", 
      RowBox[{"Gamma", "[", "k", "]"}]}]]}]}]]], "Output",
 CellChangeTimes->{{3.6825324766052704`*^9, 3.6825326282235336`*^9}}]
}, Open  ]]
},
WindowSize->{1586, 870},
WindowMargins->{{0, Automatic}, {0, Automatic}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 2799, 90, 192, "Input"],
Cell[CellGroupData[{
Cell[3381, 114, 250, 6, 31, "Input"],
Cell[3634, 122, 99, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3770, 128, 293, 7, 31, "Input"],
Cell[4066, 137, 79, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4182, 143, 124, 2, 31, "Input"],
Cell[4309, 147, 79, 1, 30, "Output"]
}, Open  ]],
Cell[4403, 151, 68, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[4496, 156, 269, 8, 31, "Input"],
Cell[4768, 166, 159, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4964, 174, 557, 16, 31, "Input"],
Cell[5524, 192, 401, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5962, 209, 316, 9, 31, "Input"],
Cell[6281, 220, 212, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6530, 230, 308, 8, 31, "Input"],
Cell[6841, 240, 95, 2, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6973, 247, 219, 7, 31, "Input"],
Cell[7195, 256, 81, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7313, 262, 222, 6, 31, "Input"],
Cell[7538, 270, 101, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[7676, 277, 425, 12, 31, "Input"],
Cell[8104, 291, 416, 12, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8557, 308, 242, 7, 31, "Input"],
Cell[8802, 317, 152, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[8991, 326, 351, 10, 31, "Input"],
Cell[9345, 338, 149, 3, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9531, 346, 252, 7, 31, "Input"],
Cell[9786, 355, 98, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[9921, 362, 472, 14, 31, "Input"],
Cell[10396, 378, 186, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[10619, 386, 368, 11, 31, "Input"],
Cell[10990, 399, 177, 4, 30, "Output"]
}, Open  ]],
Cell[11182, 406, 2194, 73, 112, "Input"],
Cell[CellGroupData[{
Cell[13401, 483, 352, 10, 31, "Input"],
Cell[13756, 495, 151, 3, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13944, 503, 220, 4, 31, "Input"],
Cell[14167, 509, 337, 9, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14541, 523, 387, 12, 47, "Input"],
Cell[14931, 537, 116, 2, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15084, 544, 165, 4, 31, "Input"],
Cell[15252, 550, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15359, 556, 420, 13, 31, "Input"],
Cell[15782, 571, 763, 25, 50, "Output"]
}, Open  ]],
Cell[16560, 599, 683, 22, 50, "Input"],
Cell[17246, 623, 2240, 72, 148, "Input"],
Cell[19489, 697, 435, 13, 31, "Input"],
Cell[CellGroupData[{
Cell[19949, 714, 277, 5, 31, "Input"],
Cell[20229, 721, 312, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20578, 731, 149, 3, 31, "Input"],
Cell[20730, 736, 115, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[20882, 742, 439, 14, 33, "Input"],
Cell[21324, 758, 177, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[21538, 768, 468, 11, 31, "Input"],
Cell[22009, 781, 25467, 426, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47513, 1212, 611, 18, 31, "Input"],
Cell[48127, 1232, 14829, 249, 247, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[62993, 1486, 347, 9, 31, "Input"],
Cell[63343, 1497, 26471, 440, 245, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89851, 1942, 332, 10, 31, "Input"],
Cell[90186, 1954, 13353, 225, 248, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[103576, 2184, 320, 9, 31, "Input"],
Cell[103899, 2195, 142, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104078, 2204, 360, 10, 31, "Input"],
Cell[104441, 2216, 295, 9, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[104773, 2230, 540, 14, 31, "Input"],
Cell[105316, 2246, 147, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105500, 2254, 187, 5, 31, "Input"],
Cell[105690, 2261, 100, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105827, 2267, 309, 9, 31, "Input"],
Cell[106139, 2278, 70, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106246, 2284, 248, 5, 31, "Input"],
Cell[106497, 2291, 806, 27, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[107340, 2323, 944, 30, 56, "Input"],
Cell[108287, 2355, 24053, 565, 628, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132377, 2925, 1062, 30, 31, "Input"],
Cell[133442, 2957, 636, 17, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[134115, 2979, 493, 14, 47, "Input"],
Cell[134611, 2995, 31456, 521, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[166104, 3521, 595, 17, 31, "Input"],
Cell[166702, 3540, 399, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[167138, 3558, 654, 20, 31, "Input"],
Cell[167795, 3580, 268, 7, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[168100, 3592, 820, 26, 31, "Input"],
Cell[168923, 3620, 640, 21, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169600, 3646, 328, 9, 31, "Input"],
Cell[169931, 3657, 1896, 37, 240, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[171864, 3699, 135, 2, 31, "Input"],
Cell[172002, 3703, 75, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[172114, 3709, 722, 23, 31, "Input"],
Cell[172839, 3734, 321, 9, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[173197, 3748, 599, 19, 31, "Input"],
Cell[173799, 3769, 28018, 755, 378, "Output"]
}, Open  ]],
Cell[201832, 4527, 2982, 90, 152, "Input"],
Cell[CellGroupData[{
Cell[204839, 4621, 340, 9, 31, "Input"],
Cell[205182, 4632, 24068, 400, 246, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[229287, 5037, 200, 4, 31, "Input"],
Cell[229490, 5043, 1134, 38, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[230661, 5086, 279, 6, 31, "Input"],
Cell[230943, 5094, 253, 5, 48, "Output"]
}, Open  ]],
Cell[231211, 5102, 93, 1, 31, "Input"],
Cell[231307, 5105, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[231426, 5110, 293, 8, 31, "Input"],
Cell[231722, 5120, 119, 2, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[231878, 5127, 462, 14, 31, "Input"],
Cell[232343, 5143, 229, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[232609, 5154, 462, 14, 31, "Input"],
Cell[233074, 5170, 203, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[233314, 5181, 883, 27, 31, "Input"],
Cell[234200, 5210, 531, 15, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[234768, 5230, 206, 5, 31, "Input"],
Cell[234977, 5237, 90, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235104, 5243, 265, 8, 31, "Input"],
Cell[235372, 5253, 113, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[235522, 5259, 504, 16, 48, "Input"],
Cell[236029, 5277, 209, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[236275, 5285, 498, 16, 31, "Input"],
Cell[236776, 5303, 211, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237024, 5311, 372, 11, 31, "Input"],
Cell[237399, 5324, 213, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[237649, 5332, 702, 21, 33, "Input"],
Cell[238354, 5355, 523, 16, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[238914, 5376, 566, 17, 50, "Input"],
Cell[239483, 5395, 228, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[239748, 5405, 673, 21, 31, "Input"],
Cell[240424, 5428, 140, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[240601, 5435, 185, 5, 31, "Input"],
Cell[240789, 5442, 87, 1, 30, "Output"]
}, Open  ]],
Cell[240891, 5446, 68, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[240984, 5451, 273, 8, 31, "Input"],
Cell[241260, 5461, 133, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241430, 5469, 262, 7, 31, "Input"],
Cell[241695, 5478, 186, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[241918, 5488, 200, 6, 31, "Input"],
Cell[242121, 5496, 101, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242259, 5503, 305, 9, 31, "Input"],
Cell[242567, 5514, 154, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[242758, 5523, 687, 20, 31, "Input"],
Cell[243448, 5545, 153, 2, 30, "Output"]
}, Open  ]],
Cell[243616, 5550, 1079, 29, 31, "Input"],
Cell[CellGroupData[{
Cell[244720, 5583, 933, 26, 31, "Input"],
Cell[245656, 5611, 396, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[246089, 5622, 930, 26, 31, "Input"],
Cell[247022, 5650, 245, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[247304, 5660, 428, 10, 31, "Input"],
Cell[247735, 5672, 191, 3, 30, "Output"]
}, Open  ]],
Cell[247941, 5678, 92, 1, 31, "Input"],
Cell[248036, 5681, 1699, 51, 92, "Input"],
Cell[CellGroupData[{
Cell[249760, 5736, 673, 18, 31, "Input"],
Cell[250436, 5756, 6078, 101, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[256551, 5862, 350, 10, 31, "Input"],
Cell[256904, 5874, 273, 8, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[257214, 5887, 614, 19, 31, "Input"],
Cell[257831, 5908, 2039, 41, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[259907, 5954, 816, 24, 31, "Input"],
Cell[260726, 5980, 661, 18, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[261424, 6003, 814, 25, 31, "Input"],
Cell[262241, 6030, 3025, 96, 51, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265303, 6131, 154, 4, 31, "Input"],
Cell[265460, 6137, 86, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[265583, 6143, 706, 23, 31, "Input"],
Cell[266292, 6168, 376, 12, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[266705, 6185, 810, 26, 31, "Input"],
Cell[267518, 6213, 382, 11, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[267937, 6229, 565, 16, 48, "Input"],
Cell[268505, 6247, 139, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[268681, 6254, 274, 7, 31, "Input"],
Cell[268958, 6263, 90, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[269085, 6269, 728, 23, 31, "Input"],
Cell[269816, 6294, 295, 9, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[270148, 6308, 390, 12, 31, "Input"],
Cell[270541, 6322, 21398, 357, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[291976, 6684, 289, 8, 31, "Input"],
Cell[292268, 6694, 21404, 357, 238, "Output"]
}, Open  ]],
Cell[313687, 7054, 93, 1, 31, "Input"],
Cell[313783, 7057, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[313900, 7062, 212, 5, 31, "Input"],
Cell[314115, 7069, 97, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314249, 7075, 129, 2, 31, "Input"],
Cell[314381, 7079, 71, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[314489, 7085, 1020, 28, 31, "Input"],
Cell[315512, 7115, 696, 19, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[316245, 7139, 466, 14, 47, "Input"],
Cell[316714, 7155, 8717, 148, 207, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[325468, 7308, 504, 16, 50, "Input"],
Cell[325975, 7326, 211, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[326223, 7334, 558, 18, 50, "Input"],
Cell[326784, 7354, 205, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327026, 7362, 480, 15, 50, "Input"],
Cell[327509, 7379, 184, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[327730, 7387, 628, 20, 50, "Input"],
Cell[328361, 7409, 111, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[328509, 7415, 511, 16, 50, "Input"],
Cell[329023, 7433, 114, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329174, 7439, 490, 15, 50, "Input"],
Cell[329667, 7456, 90, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[329794, 7462, 1011, 30, 31, "Input"],
Cell[330808, 7494, 438, 11, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[331283, 7510, 377, 10, 31, "Input"],
Cell[331663, 7522, 348, 9, 60, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332048, 7536, 470, 14, 31, "Input"],
Cell[332521, 7552, 299, 8, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[332857, 7565, 441, 13, 48, "Input"],
Cell[333301, 7580, 87, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333425, 7586, 189, 5, 31, "Input"],
Cell[333617, 7593, 88, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[333742, 7599, 290, 7, 31, "Input"],
Cell[334035, 7608, 248, 6, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[334320, 7619, 971, 32, 31, "Input"],
Cell[335294, 7653, 321, 9, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[335652, 7667, 477, 14, 50, "Input"],
Cell[336132, 7683, 112, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336281, 7689, 464, 14, 48, "Input"],
Cell[336748, 7705, 118, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[336903, 7711, 916, 29, 31, "Input"],
Cell[337822, 7742, 313, 9, 48, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338172, 7756, 401, 12, 47, "Input"],
Cell[338576, 7770, 132, 3, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[338745, 7778, 184, 5, 31, "Input"],
Cell[338932, 7785, 131, 3, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[339100, 7793, 1014, 33, 31, "Input"],
Cell[340117, 7828, 194, 5, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[340348, 7838, 863, 28, 31, "Input"],
Cell[341214, 7868, 170, 5, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[341421, 7878, 897, 29, 31, "Input"],
Cell[342321, 7909, 196, 5, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[342554, 7919, 1005, 30, 31, "Input"],
Cell[343562, 7951, 140, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[343739, 7958, 1039, 33, 31, "Input"],
Cell[344781, 7993, 139, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[344957, 8000, 417, 13, 31, "Input"],
Cell[345377, 8015, 19358, 323, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[364772, 8343, 448, 13, 31, "Input"],
Cell[365223, 8358, 19364, 323, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[384624, 8686, 556, 17, 31, "Input"],
Cell[385183, 8705, 6258, 198, 128, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391478, 8908, 249, 7, 31, "Input"],
Cell[391730, 8917, 114, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[391881, 8923, 425, 13, 31, "Input"],
Cell[392309, 8938, 762, 25, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[393108, 8968, 588, 18, 33, "Input"],
Cell[393699, 8988, 335, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394071, 9003, 551, 16, 33, "Input"],
Cell[394625, 9021, 220, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[394882, 9030, 476, 14, 31, "Input"],
Cell[395361, 9046, 212, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[395610, 9054, 462, 14, 33, "Input"],
Cell[396075, 9070, 192, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396304, 9078, 273, 8, 31, "Input"],
Cell[396580, 9088, 89, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[396706, 9094, 889, 28, 31, "Input"],
Cell[397598, 9124, 90, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[397725, 9130, 275, 8, 31, "Input"],
Cell[398003, 9140, 90, 1, 30, "Output"]
}, Open  ]],
Cell[398108, 9144, 1535, 46, 52, "Input"],
Cell[CellGroupData[{
Cell[399668, 9194, 201, 4, 31, "Input"],
Cell[399872, 9200, 166, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400075, 9207, 227, 4, 31, "Input"],
Cell[400305, 9213, 359, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[400701, 9223, 915, 27, 31, "Input"],
Cell[401619, 9252, 1059, 34, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[402715, 9291, 931, 30, 31, "Input"],
Cell[403649, 9323, 1512, 50, 52, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[405198, 9378, 1693, 53, 52, "Input"],
Cell[406894, 9433, 709, 23, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[407640, 9461, 927, 30, 31, "Input"],
Cell[408570, 9493, 114, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[408721, 9499, 381, 12, 31, "Input"],
Cell[409105, 9513, 113, 1, 30, "Output"]
}, Open  ]],
Cell[409233, 9517, 71, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[409329, 9522, 291, 8, 31, "Input"],
Cell[409623, 9532, 131, 2, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[409791, 9539, 535, 14, 31, "Input"],
Cell[410329, 9555, 209, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410575, 9564, 148, 3, 31, "Input"],
Cell[410726, 9569, 90, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[410853, 9575, 144, 3, 31, "Input"],
Cell[411000, 9580, 112, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[411149, 9586, 552, 15, 31, "Input"],
Cell[411704, 9603, 485, 15, 53, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412226, 9623, 217, 5, 31, "Input"],
Cell[412446, 9630, 110, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[412593, 9638, 343, 9, 31, "Input"],
Cell[412939, 9649, 395, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[413371, 9664, 498, 14, 31, "Input"],
Cell[413872, 9680, 519, 15, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414428, 9700, 382, 11, 47, "Input"],
Cell[414813, 9713, 88, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414938, 9719, 356, 11, 31, "Input"],
Cell[415297, 9732, 215, 3, 30, "Output"]
}, Open  ]],
Cell[415527, 9738, 570, 18, 31, "Input"],
Cell[CellGroupData[{
Cell[416122, 9760, 226, 5, 31, "Input"],
Cell[416351, 9767, 502, 13, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[416890, 9785, 492, 13, 31, "Input"],
Cell[417385, 9800, 290, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[417712, 9810, 549, 15, 31, "Input"],
Cell[418264, 9827, 3917, 129, 182, "Output"]
}, Open  ]],
Cell[422196, 9959, 122, 2, 31, "Input"],
Cell[CellGroupData[{
Cell[422343, 9965, 389, 11, 31, "Input"],
Cell[422735, 9978, 453, 14, 63, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[423225, 9997, 1106, 37, 31, "Input"],
Cell[424334, 10036, 801, 26, 59, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
