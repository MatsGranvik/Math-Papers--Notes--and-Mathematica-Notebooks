(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    272936,       5811]
NotebookOptionsPosition[    265138,       5566]
NotebookOutlinePosition[    265484,       5581]
CellTagsIndexPosition[    265441,       5578]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"Fa3", "[", 
   RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", "a"}], 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Gamma", "[", 
       RowBox[{"a", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"1", "-", "s"}], ")"}]}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "s"}], ")"}], 
      RowBox[{"-", "a"}]]}], 
    RowBox[{"Gamma", "[", "a", "]"}]]}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fa3", "[", 
  RowBox[{"n", ",", "1", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.5891056663251815`*^9, 3.5891056742466345`*^9}, {
  3.5893121168036776`*^9, 3.5893121528127375`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "n"}]], "Output",
 CellChangeTimes->{{3.5893121498945704`*^9, 3.5893121530497513`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fa3", "[", 
  RowBox[{"n", ",", "1", ",", "2"}], "]"}]], "Input",
 CellChangeTimes->{{3.589105678986906*^9, 3.5891056826061125`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", 
  FractionBox["1", "n"]}]], "Output",
 CellChangeTimes->{{3.5891056799709625`*^9, 3.5891056828931293`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fa3", "[", 
  RowBox[{"n", ",", "1", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5891056857112904`*^9, 3.5891056857832947`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "2"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["n", "2"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.589105686007307*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fa3", "[", 
  RowBox[{"n", ",", "1", ",", 
   RowBox[{"-", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.589105688399444*^9, 3.589105689912531*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "3"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["n", "3"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.589105690750579*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fa3", "[", 
  RowBox[{"n", ",", "1", ",", 
   RowBox[{"-", "3"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5891057075275383`*^9, 3.589105713974907*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"-", "1"}], "+", 
    SuperscriptBox["n", "4"]}], ")"}]}]], "Output",
 CellChangeTimes->{{3.589105710037682*^9, 3.5891057150379677`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fa3", "[", 
  RowBox[{"n", ",", "1", ",", 
   RowBox[{
    RowBox[{"-", "1"}], "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5891057178231273`*^9, 3.589105718671176*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["2", "3"]}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    SuperscriptBox["n", 
     RowBox[{"3", "/", "2"}]]}], ")"}]}]], "Output",
 CellChangeTimes->{3.5891057188841877`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fa3", "[", 
  RowBox[{"n", ",", "1", ",", 
   RowBox[{"1", "/", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5891057352561245`*^9, 3.589105735791155*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "2"}], " ", 
  RowBox[{"(", 
   RowBox[{"1", "-", 
    SqrtBox["n"]}], ")"}]}]], "Output",
 CellChangeTimes->{3.5891057360391693`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fa3", "[", 
  RowBox[{"n", ",", "2", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.589105740832443*^9, 3.589105740934449*^9}}],

Cell[BoxData[
 RowBox[{"Gamma", "[", 
  RowBox[{"2", ",", "0", ",", 
   RowBox[{"-", 
    RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.589105741228466*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fa3", "[", 
  RowBox[{"n", ",", "2", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5891057454457073`*^9, 3.5891057625596857`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "4"], " ", 
  RowBox[{"Gamma", "[", 
   RowBox[{"2", ",", "0", ",", 
    RowBox[{
     RowBox[{"-", "2"}], " ", 
     RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}]], "Output",
 CellChangeTimes->{3.5891057629387074`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Fa3", "[", 
     RowBox[{"n", ",", "aa", ",", "ss"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ss", ",", 
      RowBox[{"-", "5"}], ",", "7"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"aa", ",", "1", ",", "6"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.589106093296603*^9, 3.589106125516446*^9}, {
  3.589106165047707*^9, 3.589106178301465*^9}, {3.5891062242210913`*^9, 
  3.58910623730984*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5891061259584713`*^9, {3.589106167845867*^9, 3.5891061788384953`*^9}, {
   3.589106226577226*^9, 3.5891062381708894`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5891061259584713`*^9, {3.589106167845867*^9, 3.5891061788384953`*^9}, {
   3.589106226577226*^9, 3.5891062381718893`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\^2\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5891061259584713`*^9, {3.589106167845867*^9, 3.5891061788384953`*^9}, {
   3.589106226577226*^9, 3.5891062381728897`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5891061259584713`*^9, {3.589106167845867*^9, 3.5891061788384953`*^9}, {
   3.589106226577226*^9, 3.5891062381738896`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Power", "::", "infy"}], "MessageName"], ":", 
  " ", "\<\"Infinite expression \[NoBreak]\\!\\(1\\/0\\^3\\)\[NoBreak] \
encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/infy\\\", ButtonNote -> \
\\\"Power::infy\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5891061259584713`*^9, {3.589106167845867*^9, 3.5891061788384953`*^9}, {
   3.589106226577226*^9, 3.5891062381748896`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Power :: \
infy\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5891061259584713`*^9, {3.589106167845867*^9, 3.5891061788384953`*^9}, {
   3.589106226577226*^9, 3.5891062381748896`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ ComplexInfinity\\)\
\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5891061259584713`*^9, {3.589106167845867*^9, 3.5891061788384953`*^9}, {
   3.589106226577226*^9, 3.5891062381758895`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], ":", 
  " ", "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Infinity :: \
indet\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5891061259584713`*^9, {3.589106167845867*^9, 3.5891061788384953`*^9}, {
   3.589106226577226*^9, 3.5891062381768894`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["n", "6"]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "36"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "6"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "432"]}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "6"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "6"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "7776"], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Gamma", "[", 
        RowBox[{"5", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "6"}], " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "186624"]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "6"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "5598720"]},
    {
     RowBox[{
      FractionBox["1", "5"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["n", "5"]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "25"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "5"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "250"]}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "5"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "5"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "3750"], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Gamma", "[", 
        RowBox[{"5", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "5"}], " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "75000"]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "5"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "1875000"]},
    {
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["n", "4"]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "16"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "128"]}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "1536"], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Gamma", "[", 
        RowBox[{"5", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "4"}], " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "24576"]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "491520"]},
    {
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["n", "3"]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "9"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "54"]}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "486"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"Gamma", "[", 
        RowBox[{"5", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "5832"]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "87480"]},
    {
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", 
        SuperscriptBox["n", "2"]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "16"]}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "96"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "768"]}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"5", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "7680"]},
    {
     RowBox[{
      RowBox[{"-", "1"}], "+", "n"}], 
     RowBox[{"Gamma", "[", 
      RowBox[{"2", ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "24"]}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"5", ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "120"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}]},
    {"Indeterminate", "Indeterminate", "Indeterminate", "Indeterminate", 
     "Indeterminate", "Indeterminate"},
    {
     RowBox[{"1", "-", 
      FractionBox["1", "n"]}], 
     RowBox[{"Gamma", "[", 
      RowBox[{"2", ",", "0", ",", 
       RowBox[{"Log", "[", "n", "]"}]}], "]"}], 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{"Log", "[", "n", "]"}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{"Log", "[", "n", "]"}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "24"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"5", ",", "0", ",", 
        RowBox[{"Log", "[", "n", "]"}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "120"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{"Log", "[", "n", "]"}]}], "]"}]}]},
    {
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["1", 
         SuperscriptBox["n", "2"]]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "16"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "96"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "768"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"5", ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{"2", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "7680"]},
    {
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["1", 
         SuperscriptBox["n", "3"]]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "9"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", "0", ",", 
        RowBox[{"3", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "54"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{"3", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "486"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{"3", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"5", ",", "0", ",", 
        RowBox[{"3", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "5832"], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{"3", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "87480"]},
    {
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["1", 
         SuperscriptBox["n", "4"]]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "16"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", "0", ",", 
        RowBox[{"4", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "128"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{"4", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{"4", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "1536"], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"5", ",", "0", ",", 
        RowBox[{"4", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "24576"], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{"4", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "491520"]},
    {
     RowBox[{
      FractionBox["1", "5"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["1", 
         SuperscriptBox["n", "5"]]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "25"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", "0", ",", 
        RowBox[{"5", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "250"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{"5", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{"5", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "3750"], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"5", ",", "0", ",", 
        RowBox[{"5", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "75000"], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{"5", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "1875000"]},
    {
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        FractionBox["1", 
         SuperscriptBox["n", "6"]]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "36"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", "0", ",", 
        RowBox[{"6", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "432"], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", "0", ",", 
        RowBox[{"6", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"4", ",", "0", ",", 
        RowBox[{"6", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "7776"], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"5", ",", "0", ",", 
        RowBox[{"6", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "186624"], 
     FractionBox[
      RowBox[{"Gamma", "[", 
       RowBox[{"6", ",", "0", ",", 
        RowBox[{"6", " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "5598720"]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.5891061260014734`*^9, {3.5891061678538675`*^9, 3.589106178846496*^9}, {
   3.589106226585227*^9, 3.5891062381788898`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5891064133609095`*^9, 3.5891064205143185`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"j", "^", "5"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "2", ",", "n"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5891064221924148`*^9, 3.589106422237417*^9}, {
  3.5891064591535287`*^9, 3.589106516152789*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "-", 
  FractionBox[
   SuperscriptBox["n", "2"], "12"], "+", 
  FractionBox[
   RowBox[{"5", " ", 
    SuperscriptBox["n", "4"]}], "12"], "+", 
  FractionBox[
   SuperscriptBox["n", "5"], "2"], "+", 
  FractionBox[
   SuperscriptBox["n", "6"], "6"]}]], "Output",
 CellChangeTimes->{{3.589106474829426*^9, 3.5891065164428053`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{"j", "^", 
     RowBox[{"(", 
      RowBox[{"-", "2"}], ")"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "2", ",", "n"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5891065479456077`*^9, 3.589106549633704*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", 
  RowBox[{"HarmonicNumber", "[", 
   RowBox[{"n", ",", "2"}], "]"}]}]], "Output",
 CellChangeTimes->{3.5891065499547224`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Fa3", "[", 
          RowBox[{"n", ",", "a2", ",", "ss"}], "]"}], "-", "1"}], ")"}], "/", 
       "a2"}], ",", 
      RowBox[{"a2", "\[Rule]", "aa"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ss", ",", 
      RowBox[{"-", "2"}], ",", "4"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"aa", ",", 
      RowBox[{"-", "3"}], ",", "1"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5891066418829803`*^9, 3.5891067075457363`*^9}, {
  3.589106744137829*^9, 3.5891067486720886`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \\(\\((\\(-\
\[Infinity]\\))\\)\\)\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5891067540803976`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], ":", 
  " ", "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \\(\\((\\(-\
\[Infinity]\\))\\)\\)\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5891067540853977`*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     FractionBox["28", "3"], 
     RowBox[{"-", "4"}], "4", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "-", 
      RowBox[{"Log", "[", "3", "]"}]}], 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SuperscriptBox["n", "3"]}], ")"}]}]},
    {"3", 
     RowBox[{"-", 
      FractionBox["3", "2"]}], "3", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "-", 
      RowBox[{"Log", "[", "2", "]"}]}], 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        SuperscriptBox["n", "2"]}], ")"}]}]},
    {
     FractionBox["2", "3"], "0", "2", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      RowBox[{"-", "2"}], "+", "n"}]},
    {
     FractionBox["1", "3"], 
     FractionBox["1", "2"], "1", 
     RowBox[{"-", "\[Infinity]"}], "0"},
    {"0", "0", "0", 
     RowBox[{"-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Log", "[", "n", "]"}]}], "]"}]}], 
     RowBox[{"-", 
      FractionBox["1", "n"]}]},
    {
     RowBox[{"-", 
      FractionBox["7", "3"]}], 
     RowBox[{"-", 
      FractionBox["3", "2"]}], 
     RowBox[{"-", "1"}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"0", ",", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], "-", 
      RowBox[{"Log", "[", "2", "]"}]}], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "+", 
        SuperscriptBox["n", "2"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["n", "2"]}]]}]},
    {
     RowBox[{"-", 
      FractionBox["26", "3"]}], 
     RowBox[{"-", "4"}], 
     RowBox[{"-", "2"}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"0", ",", 
         RowBox[{"3", " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], "-", 
      RowBox[{"Log", "[", "3", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "3"]}], "-", 
      FractionBox["1", 
       RowBox[{"3", " ", 
        SuperscriptBox["n", "3"]}]]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.589106652309577*^9, 3.5891066708886395`*^9}, 
   3.5891067406826315`*^9, 3.5891067735905137`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Grid", "[", 
  RowBox[{"Table", "[", 
   RowBox[{
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"Fa3", "[", 
          RowBox[{"n", ",", "a2", ",", "ss"}], "]"}], "-", "1"}], ")"}], "/", 
       "a2"}], ",", 
      RowBox[{"a2", "\[Rule]", "aa"}]}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{"ss", ",", 
      RowBox[{"-", "3"}], ",", "5"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"aa", ",", 
      RowBox[{"-", "6"}], ",", "3"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5891068522570133`*^9, 3.5891068575523157`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"-", 
      FractionBox["1365", "2"]}], "205", 
     RowBox[{"-", 
      FractionBox["255", "4"]}], 
     FractionBox["65", "3"], 
     RowBox[{"-", 
      FractionBox["15", "2"]}], "5", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "4"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "-", 
      RowBox[{"Log", "[", "4", "]"}]}], 
     RowBox[{
      FractionBox["1", "4"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "5"}], "+", 
        SuperscriptBox["n", "4"]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "32"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "15"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{"2", ",", 
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "384"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "130"}], "+", 
        RowBox[{"Gamma", "[", 
         RowBox[{"3", ",", 
          RowBox[{
           RowBox[{"-", "4"}], " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}]},
    {
     RowBox[{"-", 
      FractionBox["364", "3"]}], 
     FractionBox["244", "5"], 
     RowBox[{"-", "20"}], 
     FractionBox["28", "3"], 
     RowBox[{"-", "4"}], "4", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "3"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "-", 
      RowBox[{"Log", "[", "3", "]"}]}], 
     RowBox[{
      FractionBox["1", "3"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        SuperscriptBox["n", "3"]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "18"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "8"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{"2", ",", 
          RowBox[{
           RowBox[{"-", "3"}], " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "162"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "56"}], "+", 
        RowBox[{"Gamma", "[", 
         RowBox[{"3", ",", 
          RowBox[{
           RowBox[{"-", "3"}], " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}]},
    {
     RowBox[{"-", 
      FractionBox["21", "2"]}], 
     FractionBox["33", "5"], 
     RowBox[{"-", 
      FractionBox["15", "4"]}], "3", 
     RowBox[{"-", 
      FractionBox["3", "2"]}], "3", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{
         RowBox[{"-", "2"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "-", 
      RowBox[{"Log", "[", "2", "]"}]}], 
     RowBox[{
      FractionBox["1", "2"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "+", 
        SuperscriptBox["n", "2"]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "8"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{"2", ",", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "48"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "18"}], "+", 
        RowBox[{"Gamma", "[", 
         RowBox[{"3", ",", 
          RowBox[{
           RowBox[{"-", "2"}], " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}]},
    {"0", 
     FractionBox["2", "5"], "0", 
     FractionBox["2", "3"], "0", "2", 
     RowBox[{
      RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      RowBox[{"-", "2"}], "+", "n"}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
     RowBox[{
      FractionBox["1", "6"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "4"}], "+", 
        RowBox[{"Gamma", "[", 
         RowBox[{"3", ",", 
          RowBox[{"-", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}]},
    {
     FractionBox["1", "6"], 
     FractionBox["1", "5"], 
     FractionBox["1", "4"], 
     FractionBox["1", "3"], 
     FractionBox["1", "2"], "1", 
     RowBox[{"-", "\[Infinity]"}], "0", "ComplexInfinity", "ComplexInfinity"},
    {"0", "0", "0", "0", "0", "0", 
     RowBox[{"-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"0", ",", 
        RowBox[{"Log", "[", "n", "]"}]}], "]"}]}], 
     RowBox[{"-", 
      FractionBox["1", "n"]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"2", ",", 
        RowBox[{"Log", "[", "n", "]"}]}], "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "6"]}], " ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"3", ",", 
        RowBox[{"Log", "[", "n", "]"}]}], "]"}]}]},
    {
     RowBox[{"-", 
      FractionBox["21", "2"]}], 
     RowBox[{"-", 
      FractionBox["31", "5"]}], 
     RowBox[{"-", 
      FractionBox["15", "4"]}], 
     RowBox[{"-", 
      FractionBox["7", "3"]}], 
     RowBox[{"-", 
      FractionBox["3", "2"]}], 
     RowBox[{"-", "1"}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"0", ",", 
         RowBox[{"2", " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], "-", 
      RowBox[{"Log", "[", "2", "]"}]}], 
     RowBox[{"-", 
      FractionBox[
       RowBox[{"1", "+", 
        SuperscriptBox["n", "2"]}], 
       RowBox[{"2", " ", 
        SuperscriptBox["n", "2"]}]]}], 
     RowBox[{
      FractionBox["1", "8"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{"2", ",", 
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "48"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "14"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{"3", ",", 
          RowBox[{"2", " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}]},
    {
     RowBox[{"-", 
      FractionBox["364", "3"]}], 
     RowBox[{"-", 
      FractionBox["242", "5"]}], 
     RowBox[{"-", "20"}], 
     RowBox[{"-", 
      FractionBox["26", "3"]}], 
     RowBox[{"-", "4"}], 
     RowBox[{"-", "2"}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"0", ",", 
         RowBox[{"3", " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], "-", 
      RowBox[{"Log", "[", "3", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["2", "3"]}], "-", 
      FractionBox["1", 
       RowBox[{"3", " ", 
        SuperscriptBox["n", "3"]}]]}], 
     RowBox[{
      FractionBox["1", "18"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "8"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{"2", ",", 
          RowBox[{"3", " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "162"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "52"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{"3", ",", 
          RowBox[{"3", " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}]},
    {
     RowBox[{"-", 
      FractionBox["1365", "2"]}], 
     RowBox[{"-", 
      FractionBox["1023", "5"]}], 
     RowBox[{"-", 
      FractionBox["255", "4"]}], 
     RowBox[{"-", "21"}], 
     RowBox[{"-", 
      FractionBox["15", "2"]}], 
     RowBox[{"-", "3"}], 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"0", ",", 
         RowBox[{"4", " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], "-", 
      RowBox[{"Log", "[", "4", "]"}]}], 
     RowBox[{
      RowBox[{"-", 
       FractionBox["3", "4"]}], "-", 
      FractionBox["1", 
       RowBox[{"4", " ", 
        SuperscriptBox["n", "4"]}]]}], 
     RowBox[{
      FractionBox["1", "32"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "15"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{"2", ",", 
          RowBox[{"4", " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}], 
     RowBox[{
      FractionBox["1", "384"], " ", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "126"}], "-", 
        RowBox[{"Gamma", "[", 
         RowBox[{"3", ",", 
          RowBox[{"4", " ", 
           RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}]}
   },
   AutoDelete->False,
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.5891068896631527`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"-", 
  RowBox[{"Gamma", "[", 
   RowBox[{"1", ",", "0", ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.58910790733436*^9, 3.5891079198570766`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "n"}]], "Output",
 CellChangeTimes->{{3.5891079130456867`*^9, 3.589107920337104*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   RowBox[{"Gamma", "[", 
    RowBox[{"1", ",", "0", ",", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "-", 
         RowBox[{"N", "[", 
          RowBox[{"ZetaZero", "[", "1", "]"}], "]"}]}], ")"}]}], 
      RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], "-", 
  RowBox[{"Gamma", "[", 
   RowBox[{"1", ",", "0", ",", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"(", 
       RowBox[{"1", "-", 
        RowBox[{"N", "[", 
         RowBox[{"ZetaZero", "[", 
          RowBox[{"-", "1"}], "]"}], "]"}]}], ")"}]}], 
     RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5891079317277555`*^9, 3.58910796118344*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"aa", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"-", "2.`"}], "+", 
   SuperscriptBox["n", 
    RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
     RowBox[{"14.134725141734695`", " ", "\[ImaginaryI]"}]}]], "+", 
   SuperscriptBox["n", 
    RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
     RowBox[{"14.134725141734695`", " ", "\[ImaginaryI]"}]}]]}]}]], "Input",
 CellChangeTimes->{{3.5891079741651826`*^9, 3.589107977823392*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"Fa3", "[", 
       RowBox[{"j", ",", 
        RowBox[{"aa", "=", "2"}], ",", 
        RowBox[{"bb", "=", "0"}]}], "]"}], "/", "j"}], ",", 
     RowBox[{"Re", "[", 
      RowBox[{
       RowBox[{"Fa3", "[", 
        RowBox[{"j", ",", "aa", ",", 
         RowBox[{"ZetaZero", "[", 
          RowBox[{"cc", "=", "1"}], "]"}]}], "]"}], "+", 
       RowBox[{"Fa3", "[", 
        RowBox[{"j", ",", "aa", ",", 
         RowBox[{"ZetaZero", "[", 
          RowBox[{"-", "cc"}], "]"}]}], "]"}]}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "10000"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5891079798495073`*^9, 3.5891082283597217`*^9}, {
  3.589108332982706*^9, 3.589108346788495*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
S0J27ThKoV1+e55HOo1ix5N5xscpxB7Ubw3KoLFu6O3iW1kUVMa3GMZn0Wgs
arKZmEuhODkrPCuXRpt7+uu5+RQsFJyEJSdoLP0v7D+lAgpPUuTHiU8xepTZ
GTUnKWyZIHJ8Xkij5cy+2qWnKQwd2p3dcZ7GtKv8w3vOUDg20eTtSBGNIN3Q
/xILKcxJbZ+rVkojwK1iyPssBYFiYahhGQ3dEd0bvxnsnMausrxKY7ShY/bm
cxQ+KU2V8bhOY7Z2hVMug6OP3LcPukljUmWUVRaDlZUTjsdV0yg9cEaOy+Dz
6SvfZNYw+bbpK+xi+FZM7tcvEdMosD+pZ8PgxqOXgkW1NKBhnLmN0eM/ZXPl
szqmHubnDrMZvT+O6Yx8uUfD9JLJjqmMn7SpL2xGGmg0q1/5lsn4nX38yFHV
RzSCvxulvj9B4ZaKzat5T2msTDdw+5FHwTFzZJblCxqs/AjnVzkUbs94Hp79
ioaB2fslzky8jUtLpF/f0KicpjY5OYPC6aXxGtbvaNjt7emLT6cwmXgEFnyg
oa7/stc8lcJ+x/mCvjYawz3lMyqTKfQ2jSo6dND4wv2S1nuAqZ/u0vKfPTQG
DCpir8RQsN67X8aln0an0UVDkygKlfKe7sWDNGSM6oLCwink6Mj8YA3T4Akb
R1Yy9Tn+4ku7sjEmHq5/8Wv9mXyfeNmYIEtQ3Z7Qp8jUd9mcyzOb5QlS9+bI
trlQCOjKuZc0nqCgvvJphAOFGdf4YaYTCJ4JL3y/s5bCUQsvSYoSgcF4g5yK
pRR2ustuXa5K8PulsXWpBgXD6d8mf1QjcDV/n+msTKH1bVNVugbBajtXlSp5
Cq7byiZ+nk7wMmtA5Vk/D0v47CtZswiyi+cmmDXy0GWz1stKj+CRFu/8YC0P
F5QWjnXpE8Q93d29r4oH9Tw5t7V/EUxjXUp5eY6HwStXBnqNmfvDUcdJBA/l
EfmnT5kQvItXrLsYyMPWlYm29qYEbu73zVk8HprqOPmFZgRdXY5xI3/zUN0y
brXzKoJk49CCnEk8hJ3rafttQaBYazHu8igX8wOb04ssCbRrIz8m9zL9ur/8
/TAInAfYxZnPuYidyE28bEeQObCxYTSXC6sV1xomeBJIyqHsosaF06pVJWVe
BEGnS9MXy3HBtaw76MqskZYHWMvf9zLzw/o18nkElzfIXj/10BslLjJV8zYR
XIiw/bsoyRuqQa4XbHcSrOJ3eGh0cjAr+A2/K4yJr+e4d/QLDoxDA3yP7iLY
dMoy3pxwYBcZrdW0myAhcMr97FwOYvlnj22JJbhmcmvcGDj4nN+7L+kwwaiq
8eJ7R9joPxnjbZhG0Kp9SjV4NxsyhfIrGo8QxG897tDqw4Z20fR+tQyCfwzn
ZVqZsOFcgaALuQSGHnbZrxq9UF2fwZJcIOCK/MLPyHohbch0oYyYYMJ6g/Mz
HFlozd30KoUmGPQqyVxvysJys+yEKbUEp0aVrTw1mPPgny9n1hE4Od3MkX/v
geVvRfGWDQTCqssNT8I88JFe/ySmiWByer+b01F3mB8MiBjsIbAu+6pqdd0V
7VPyBV2zaiHrfuvQBw8HVPHPbpuWWotM+6t7bfLmIc/6mPWy7lo0DO9unPJ7
JSnlbbDxd5bg20kto6VhziS6+ePv8a4SPNBzTPOscia27OjyMjcJPihtzLEd
dSYf3S9o/mJJwBt5+CsnzYVor//deZQngZGuqdl/bq4kzbzo6O0gCXz+fPb0
2eJGQjRGXmkmSiA/YiIftseDrM7KPCJKkmDxFuGc/DwPoqhi+PfmZAmMbYve
navyIMWTPC6VH5ZAuDA20PunB3k3rjTWJkOCkbCIZo/dLOLSz9KLOC2BoQ93
t0uwJ1n8uGz7oyoJXOWWiMzXMPtIe+dXtkCCNIWqEH8Om/iO/BXyQSjBxbH1
WsG72CR1wbmdAyJGz74bX2YXM/tKSk6kdp0ETfe2aqpN4pBcZqJtfSLBszRV
3V9Pmf27wiVztEOC+OgmWzkbLlGtP6J2qEuClXnKc9V4XDK/tT5b5ZsEClHi
TNlwLvGavC5vzn8SdHP6bked4pKr281PrR+UIOGabA3dxyWbDPSKc2WleDO4
hl+dwyP3s/sFJtpSBLt1ra6QUMRJqXf0s44UOTeSDTyaKPIkodv69AwpPGWm
fbrbSZHm0I6HSnpShE1JSzeY6kO67N996JgnRUtu5P+ucn2I8kj9xAvLpBi3
zsfqT7sPyYy458xdIYXwygzTaz99yLSuuiyVlVKEb959btkEXzLzFT2Dv5o5
dzKuqTD0JaYVNxf7WEtx/lPB0x2BvsR9yzlvTTcpHgduevK+xZc0tZw588hd
CpcAixvZnb6E637q00GWFHIjqipaP33JZqu8kAE242dVlkKGih+J1EpPeOor
heH+w1HL1vmRX8dS7x7aKEVs7oM7Aa5+JHb8ISVsksJt59iCzZQfOfj9QE75
Fil8OFYqDyP8SO7D6NK0HVKIXbt0WWf9iPa6qJ61oVKclnEaG7rkR84II8yG
dkrx3L2lJOymH7l4MVQUFMG8X3dy0f16P1KdEPDUJkaKLtk3i+b1+pHVv/yn
jexj/J+8HGL924/UhvrxKuOk8IiO19GU3UgaeNzP+glSmOlrXaqauJE4P2Mb
vTkgxXrtiEcflTeSZ/aeO48nSfFNQi0cVNlIvGj3SvtkKSZ276jr0dhIWpa5
/h5LYfhf+h9/rLWR/B+y+f/N
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{1, 10000}, {-128.806587878305, 114.52479855818865`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.589107988055977*^9, 3.5891080217259026`*^9}, {
  3.589108085742564*^9, 3.5891082294047813`*^9}, {3.5891083342057753`*^9, 
  3.5891083477725515`*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5891085946046696`*^9, 3.5891086045312376`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5891086013370547`*^9, 3.589108602779137*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"-", 
   RowBox[{"Gamma", "[", 
    RowBox[{"0", ",", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "100", "]"}]}]}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5891088777998676`*^9, 3.5891089121448317`*^9}}],

Cell[BoxData[
 RowBox[{"30.126141584079644`", "\[VeryThinSpace]", "+", 
  RowBox[{"3.141592653589793`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.589108884242236*^9, 3.5891089124388485`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"LogIntegral", "[", "100", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5891089135039096`*^9, 3.589108921393361*^9}}],

Cell[BoxData["30.126141584079644`"], "Output",
 CellChangeTimes->{{3.589108917991166*^9, 3.589108921709379*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"-", 
    RowBox[{"Gamma", "[", 
     RowBox[{"0", ",", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "-", 
          RowBox[{"ZetaZero", "[", "1", "]"}]}], ")"}]}], 
       RowBox[{"Log", "[", "100", "]"}]}]}], "]"}]}], "]"}], "-", " ", 
  RowBox[{"Pi", " ", "I"}]}]], "Input",
 CellChangeTimes->{{3.5891089750974326`*^9, 3.5891089807607565`*^9}, {
  3.5891090420172606`*^9, 3.589109045088436*^9}}],

Cell[BoxData[
 RowBox[{"0.11643673635452509`", "\[VeryThinSpace]", "-", 
  RowBox[{"3.2417081406024013`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.5891089818058167`*^9, 3.589109045392453*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"LogIntegral", "[", 
   RowBox[{"100", "^", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"ZetaZero", "[", "1", "]"}]}], ")"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5891089855280294`*^9, 3.5891090008969083`*^9}}],

Cell[BoxData[
 RowBox[{"1.3542123161064004`", "\[VeryThinSpace]", "-", 
  RowBox[{"6.314356640425608`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.589108997862735*^9, 3.589109001171924*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"ExpIntegralEi", "[", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"ZetaZero", "[", "1", "]"}]}], ")"}], 
    RowBox[{"Log", "[", "100", "]"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.589109011016487*^9, 3.5891090293775373`*^9}}],

Cell[BoxData[
 RowBox[{"0.11643673635452509`", "\[VeryThinSpace]", "-", 
  RowBox[{"3.2417081406024013`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.5891090297355576`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Fa3", "[", 
         RowBox[{"n", ",", "1", ",", "0"}], "]"}], "-", "1"}], ")"}], "/", 
      "1"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Fa3", "[", 
         RowBox[{"n", ",", "2", ",", "0"}], "]"}], "-", "1"}], ")"}], "/", 
      "2"}], ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"Fa3", "[", 
         RowBox[{"n", ",", "3", ",", "0"}], "]"}], "-", "1"}], ")"}], "/", 
      "3"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "500"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5891091701945915`*^9, 3.589109260279744*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1:eJwtzn1Q0wUcx3EEEiGLYDzaGfIoT5OH6REG7QNyCqgEtJNARNCBDHl+GIOx
3+/qgLQ03UEDgTy4EPQiETBJSSdlEAzJoOMwPY8z3EgCU3DIURBftj/e9/r3
7XgkJzbV0MDAYP9qZOS1i9+aGfzDz6y63Px05ZnSjCeZUue/4P99ztzHf9O0
crB9j/NPT+b5mY2510u2q5V7L6lrpapF/u8JqQ0WI+NKtyjLULFqHZIfuzgK
u4f4biHRXI3idez7pDFhmLvAr+KoP55U2MJt65DRANccg//6ev+pcIVqTUdU
3/biDIl26OWB03nxlKGAD6s1g2EbVp4TUBkGuzV3oWfsfMpjVYTecJiEzMZI
u6NgtuZ+FHlUV4Stj0UxWRmD09Oi8Y+aBTpdBCixT/AUWsehjPzyAPzqlRMe
PfHwJ9+Lx80TfIWal4hbZNdB5Pi86vVtTEI+uSUJWivOpbrGZCyQyclwCO/O
rf0jBZvJuhRwXRUZc9uO6pw9gl+T5A7WMqHOYCEODtsLOq+m4hBZmIohzcMb
beuPYZjsS4N7ALfJKTQdnqRhOjJ8v7/+skYEERknAr/y8OkzmgyEkq0Z+M+i
eqJ5S6bOieNo2mOUZluYpXN7Fny6VjJe68iGH5mXjRipndcNTY7O1hy0ab97
M60hV2dZLi5EtvS3BeahhbTPg3yuy95pMg9V5J089A9+MFD6eT76yOP5eBHU
+a58awHmSZMCvGXsHzJ2rwCW5JUCOKdJTO9nF8KFjCoEq93nozQtgoz8qxDD
D96fHe0owhApL4Jl4kJmS5RY5zYxIvzulre+EiOSHBejqEmUmFZTjHyyuBjT
/Gr5Bp4EMyRHAgHv4eH7DySII3sk6Ox9OnOspAQdZHwJjC7YWLu6lMKYNC7F
V9funftZVYoG8ptSeB+NeeScLoUHGS7FZeGznisWZWgnn0vhuk4Qv9ReBify
TBnUqt0Cj70yaEgvGeqmD0xVzMlQS47KsKuFG9R4lkEYmctgQ6Blz6EqBmZk
AYMhlTbwbYVeMQPBc2WAol6vlIEwKJZ3qkVvJYPyEbGn5AcGn5INDPqWlXbR
UwwGyF8YfCZvrnljmsEJUsUgyuWkjWqGQSR5l8FYRKzV7jm9oww01ZPmQcsM
pshHq39epibuVizMyPnVr5szFU9sWKhILYOz0SPGX9uzkJOLDOzE9YbvOLA6
Vxh49HKXOZ4s3EkzFrMfWsp+89a7kUWnWrv0hQ+Lq6Q5i50bby+a7tBrzWL5
fLOkP4DFEmnL4ke/kwvlO1ncIjexqLyTJQ4NZlFBbmYRGRf7coXPIoJc/fgf
rS8zsg==
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVxX08lAcAB/AbwkXlnROp08nLEVkTk+cnZHknQ1Jq3mIh5f3ljkKR93t2
8pprXrLMW0VFO5q0OYpIhVKIRqy89Tq2/fH9fLf8EOriJ0ShUPz+8/82TZd/
XUt5S+SNflhdXR3lrzWMfj15cp6gN2/0LCwf5XfVWav//mqRcDv7c4jjpef8
dKbi4Yse74mq55F7OiWf8W2rJy/ECT4SvXVLo+yFIb6kRlO/u9kXwvHgxkUx
nyf87ksp679uWCHentNdvOX3iN+Z/ctW8TwKrsVElNqJPORrOMjsiRR8hbnT
d9bYZ3TzUyVjvSdEhNE2d7rXw6eDP9n1Mt7FTAT6vToSrQbN/Errhma9BlEk
Sps0lk/XEqKitEfF02KoHwn9wdnwDuHfkTi/disVlm4mib7MHkLD3El3iiuB
k3eZVVcshojU1Wab73sl0Vg9diTf6AUxeVvt2O/U9bjWeXngn4BxYn9JVJ+j
mRS+pqdlRMpNE7LK1pLMBhlcPEJvtzBfJDiyk0kTXEUMitg1MKyE0DFfkFNk
qIQ3odFm5oeEsdhnf9GlVwmJvOON+2NE4JpzvbWNqoypcQ33T62ikFuX8r44
XgUvp8LvPwmVgI1wXpN2w2YoDpRTyJsy6PqizxznMqD+rMxz7K4qRrg0yuAM
AzvcH6XxcjZhVl9o4A9oIPqP+TfVXmqQ8uuPq53WwKsoj2Pm8Zvh1hMhiDHT
BPXRsE6QGh0vS24FSU1qw8HVXkUniYF4tUsDpcr62Hb98YOgSibINh3Z7sCd
GFH9M8uM9g1kGy9nCLkSKH33jG3BsICiZXKoUaolEkUd9ZaGbdEyWHp0TLAP
xdq0qyc+u0DMfM45rtkBnX/xC1jv3BGhRaZYirrg3pLls8fph5A5E/jEo9wV
hU7XCutLjiKG5qntK+8OU6lZnoWHLwyK+C+0Wg7gr+dq0iFHAnD7HMGdNPRC
bKnKpz7LIIRu/9CuX3YYHXrr/TdrBmNZTra6sOwIdCqk56WZJ6D2XfOJC0NH
4eU4Qu+qDYMugxu0oOcDCe81flIep/DgcK6afIIveKueDIfVcBy8T3NtvOYH
5QdnzQeyItE9NXKrRjQACwYp5QpW0dA00uXR9xxDP09Z9+xYDIL0b9xcyg+E
w7bAu9SqOBCp3pnZU0FQP9PvUxmQgH+kyRflm49jVqvGaWgdGzxrYX/F8GBY
7UguvRmciO1XV4PWNITg4xW96rd7k+Acp6RzayoUBZXWkmGqp1GzfH29f/EJ
GF3N2N0rdgYVNpX3aozDoLJoYkedOIPchas0+kQYeBk6l+0GknGvy/HP2PMn
UfcjzeZGewrmTRt35W47BdUJug+7LBVSIjvMB3tPISJEfwOLcxbq/tHUpyHh
aDL65VJB1Dmwl+2286kRUGaf6fL2SMP9YbO5/oYIvPwkoZ1mnw4Zr/fHKx0i
odoSsP+44XnsM+hJrvoQCb8SW9ZT3QxE8AK9/POjwFW3pfcoZWKGIHPFDaOR
NF4hrkXJgqvhiPfT4Wj8ZME03fUlC43t07MBMTG4YE+tj32dDeEKBXnG1lgI
Zo23dYXnoKSpt+CuIBadd8T6UhdywPRxfq5+LA70pJLMb4JyUev7d0u9dDx+
3FJ50W8mF4yvXA98rotHdtUNy3DfPEwK9rpq2SZgTUXKlfPDeSiccXudspCA
bOXf1u48xIFFpa5pWQ4LVkuKYSWDHIgby7Qc4rAgz1MNb33CQbdg2XgjlwUF
2ipreIgD13d8I24RC4olLjW0UQ58TV0MMypZ+GKl6ced4iD5YaR2dCsL9ze8
c8j9wEHnCl/J6TULyfUKKxnKJNJzy/PXzbBwe+O3n2tUSDhsTVMQzLJAUhmU
nk0kBve5yO1dYEGmZu+WdeokpsiJDaYrLPC6f23L1CEhrkMV05Rjo3c87FSO
KYnu27MprxTYqFMpflNvRiLH6aHIzzQ2EsYSg/tAQimySGiTGhv5B6NSZaxI
aLXrrshqs6H3SUT+J3sSc/tlEvqYbDzOfiu47kiicXL5c9Z2NhQtctMHnUmY
SLZ9pO5kg2b/9yYlNxIrpeXR94zYiNp3ZXGXB4k7Bmnvk03YuFFLe3jAk0Rq
R3Dknt1sTDwwbo71ImHj7rK0SrCxmyJRXnSYxL8nzeTC
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{1, 500}, {-0.9999898163265306, 2348.67806945965}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.589109185915491*^9, 3.5891092072627115`*^9}, {
  3.5891092377864575`*^9, 3.5891092609877844`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    FractionBox[
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "a"}], 
      RowBox[{"(", 
       RowBox[{"Gamma", "[", 
        RowBox[{"a", ",", "0", ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"1", "-", "s"}], ")"}]}], " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " ", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "-", "s"}], ")"}], 
       RowBox[{"-", "a"}]]}], 
     RowBox[{" ", 
      RowBox[{"Gamma", "[", 
       RowBox[{"a", "+", "1"}], "]"}]}]], "-", 
    RowBox[{"1", "/", "a"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", "0"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.589115022176306*^9, 3.5891150229083476`*^9}, {
  3.5891150646897373`*^9, 3.5891151421931705`*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\[ImaginaryI]", " ", "\[Pi]"}], "-", 
   RowBox[{"Gamma", "[", 
    RowBox[{"0", ",", 
     RowBox[{
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "1"}], "+", "s"}], ")"}], " ", 
      RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], "-", 
   RowBox[{"Log", "[", 
    RowBox[{"1", "-", "s"}], "]"}]}], "}"}]], "Output",
 CellChangeTimes->{{3.5891150772494555`*^9, 3.589115145192342*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Gamma", "[", 
   RowBox[{"3", ",", "0", ",", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "100", "]"}]}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.58911537664058*^9, 3.589115383042946*^9}, 
   3.589115467698788*^9, {3.589115505107928*^9, 3.589115537769796*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1397.7252069937413`"}], "+", 
  RowBox[{"3.428337988861503`*^-13", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.5891155133423986`*^9, 3.589115538685848*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"3", "-", "1"}], ")"}], 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"3", "-", "1"}], ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "100", "]"}]}]}], "]"}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "100", "]"}]}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"3", "-", "1"}], ")"}]}], " ", 
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "100", "]"}]}], ")"}]}], ")"}]}]}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5891154683128233`*^9, 3.589115468327824*^9}, {
  3.589115519800768*^9, 3.589115580810258*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1397.7252069937413`"}], "-", 
  RowBox[{"8.83012025730357`*^-14", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.589115581060272*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"fz", "[", 
   RowBox[{"n_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"s", "-", "1"}], ")"}], 
    RowBox[{"Gamma", "[", 
     RowBox[{
      RowBox[{"s", "-", "1"}], ",", "0", ",", "n"}], "]"}]}], "-", 
   RowBox[{
    RowBox[{
     RowBox[{"(", "n", ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"s", "-", "1"}], ")"}]}], " ", 
    RowBox[{"E", "^", 
     RowBox[{"(", 
      RowBox[{"-", "n"}], ")"}]}]}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"fz1", "[", 
   RowBox[{"n_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{
     RowBox[{"(", "n", ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"s", "-", "1"}], ")"}]}]}], " ", 
   RowBox[{"E", "^", 
    RowBox[{"(", 
     RowBox[{"-", "n"}], ")"}]}]}]}]}], "Input",
 CellChangeTimes->{{3.5891155878016577`*^9, 3.589115614452182*^9}, {
  3.589117262399439*^9, 3.589117267912754*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"fz", "[", 
   RowBox[{
    RowBox[{"-", 
     RowBox[{"Log", "[", "100", "]"}]}], ",", "3"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5891154079423704`*^9, 3.5891154280945225`*^9}, 
   3.589115469465889*^9, {3.589115615800259*^9, 3.589115623018672*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1397.7252069937413`"}], "-", 
  RowBox[{"8.83012025730357`*^-14", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.5891156203105173`*^9, 3.5891156233546915`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{"fz", "[", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Log", "[", "n", "]"}]}], ",", "a"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"a", "\[Rule]", "1"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.589115627581933*^9, 3.589115661240858*^9}, {
  3.589117233982814*^9, 3.589117358261922*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"1", "-", "n"}], "}"}]], "Output",
 CellChangeTimes->{{3.5891156331852536`*^9, 3.589115661465871*^9}, {
  3.589117235243886*^9, 3.589117358486935*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.58911728601379*^9, 3.5891172905760508`*^9}, {
  3.5891213768967752`*^9, 3.5891213944087763`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.589121395566843*^9, 3.589121395587844*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.589115470120927*^9, 3.5891154701359277`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5891154408132505`*^9, 3.58911547087397*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5891154716010113`*^9, 3.589115471610012*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5891254893919964`*^9, 3.589125501435685*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Sum", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"k", " ", 
        RowBox[{"Log", "[", 
         RowBox[{"k", "+", "1"}], "]"}]}], "+", 
       RowBox[{"k", " ", 
        RowBox[{"Log", "[", "k", "]"}]}]}], ")"}], "/", "k"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "20000"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5891255021697273`*^9, 3.5891255021767273`*^9}, {
  3.5891323815912075`*^9, 3.5891324996259584`*^9}, {3.589132570385006*^9, 
  3.5891325982666006`*^9}, {3.5891326296333947`*^9, 3.589132673376897*^9}}],

Cell[BoxData["0.5771906659430607`"], "Output",
 CellChangeTimes->{{3.5891324303859987`*^9, 3.5891324999139752`*^9}, {
  3.589132575454296*^9, 3.589132600751743*^9}, {3.5891326374238405`*^9, 
  3.589132675763033*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Limit", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"1", "/", "n"}], " ", 
    RowBox[{"Sum", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"Ceiling", "[", 
        RowBox[{"n", "/", "j"}], "]"}], "-", 
       RowBox[{"n", "/", "j"}]}], ",", 
      RowBox[{"{", 
       RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}]}], ",", 
   RowBox[{"n", "\[Rule]", "Infinity"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5891325043272276`*^9, 3.5891325120116673`*^9}, 
   3.5891326015927906`*^9, 3.5891326966832294`*^9, {3.5891327385526247`*^9, 
   3.589132802763297*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.589133112760028*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.589132603271887*^9, 3.589132603283888*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fa3a", "[", 
   RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"a", "\[Equal]", "0"}], ",", 
    RowBox[{"Limit", "[", 
     RowBox[{
      RowBox[{"Fa3", "[", 
       RowBox[{"n", ",", "b", ",", "s"}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"b", "\[Rule]", "0"}], "}"}]}], "]"}], ",", 
    RowBox[{"Fa3", "[", 
     RowBox[{"n", ",", "a", ",", "s"}], "]"}]}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"D2E2a", "[", 
    RowBox[{"n_", ",", "k_", ",", "b_", ",", "s_"}], "]"}], ":=", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", "j"}], " ", 
      RowBox[{"b", "^", 
       RowBox[{"(", 
        RowBox[{"j", 
         RowBox[{"(", 
          RowBox[{"1", "-", "s"}], ")"}]}], ")"}]}], " ", 
      RowBox[{"Binomial", "[", 
       RowBox[{"k", ",", "j"}], "]"}], " ", 
      RowBox[{"Sum", "[", " ", 
       RowBox[{
        RowBox[{
         RowBox[{"Binomial", "[", 
          RowBox[{"j", ",", "m"}], "]"}], " ", 
         RowBox[{"If", "[", 
          RowBox[{
           RowBox[{
            RowBox[{"n", "/", 
             RowBox[{"b", "^", "j"}]}], "<", "1"}], ",", "0", ",", 
           RowBox[{"Fa3a", "[", 
            RowBox[{
             RowBox[{"n", "/", 
              RowBox[{"b", "^", "j"}]}], ",", 
             RowBox[{"k", "-", "m"}], ",", "s"}], "]"}]}], "]"}]}], ",", 
        RowBox[{"{", 
         RowBox[{"m", ",", "0", ",", "j"}], "}"}]}], "]"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "0", ",", "k"}], "}"}]}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"N", "[", 
  RowBox[{"D2E2a", "[", 
   RowBox[{"50", ",", "3", ",", "3", ",", "0"}], "]"}], "]"}]}], "Input",
 CellChangeTimes->{{3.589311608206588*^9, 3.5893116224044*^9}, 
   3.5893116739883504`*^9, {3.589311763092447*^9, 3.58931180964911*^9}, {
   3.5893119885613427`*^9, 3.589312035646036*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"-", "1.0000000000002842`"}], "-", 
   RowBox[{"9.815125156276138`*^-16", " ", "\[ImaginaryI]"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.589311997061829*^9, 3.5893120359880557`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DiscretePlot", "[", " ", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"D2E2a", "[", 
     RowBox[{"j", ",", "3", ",", "2", ",", "0"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "3", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.58931162607761*^9, 3.5893116564003444`*^9}, {
  3.5893118148724084`*^9, 3.5893119706393175`*^9}, {3.589312004021227*^9, 
  3.589312024252384*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Map", "::", "level"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Level specification \
\[NoBreak]\\!\\({System`DiscretePlotDump`n}\\)\[NoBreak] is not of the form \
n, {n}, or {m, n}. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/level\\\", ButtonNote -> \
\\\"Map::level\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025470454*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Map", "::", "level"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Level specification \
\[NoBreak]\\!\\({System`DiscretePlotDump`n}\\)\[NoBreak] is not of the form \
n, {n}, or {m, n}. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\
\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/level\\\", ButtonNote -> \
\\\"Map::level\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254714537`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "tperm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Permutation \[NoBreak]\\!\\({2, 1}\\)\[NoBreak] is longer \
than the dimensions \[NoBreak]\\!\\({2}\\)\[NoBreak] of the array. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Transpose/tperm\\\", \
ButtonNote -> \\\"Transpose::tperm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025472454*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "tperm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Permutation \[NoBreak]\\!\\({2, 1}\\)\[NoBreak] is longer \
than the dimensions \[NoBreak]\\!\\({2}\\)\[NoBreak] of the array. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Transpose/tperm\\\", \
ButtonNote -> \\\"Transpose::tperm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025473454*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Map", "::", "level"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Level specification \
\[NoBreak]\\!\\(Transpose[\\(\\(\\(\\({\\(\\({\\(\\({3}\\)\\), \
\\(\\({4}\\)\\), \\(\\({5}\\)\\), \\(\\({6}\\)\\), \\(\\({7}\\)\\), \\(\\({8}\
\\)\\), \\(\\({9}\\)\\), \\(\\({10}\\)\\), \\(\\({11}\\)\\), \
\\(\\({12}\\)\\), \\(\\({13}\\)\\), \\(\\({14}\\)\\), \\(\\({15}\\)\\), \
\\(\\({16}\\)\\), \\(\\({17}\\)\\), \\(\\({18}\\)\\), \\(\\({19}\\)\\), \
\\(\\({20}\\)\\), \\(\\({21}\\)\\), \\(\\({22}\\)\\), \\(\\({23}\\)\\), \
\\(\\({24}\\)\\), \\(\\({25}\\)\\), \\(\\({26}\\)\\), \\(\\({27}\\)\\), \
\\(\\({28}\\)\\), \\(\\({29}\\)\\), \\(\\({30}\\)\\), \\(\\({31}\\)\\), \
\\(\\({32}\\)\\), \\(\\({33}\\)\\), \\(\\({34}\\)\\), \\(\\({35}\\)\\), \
\\(\\({36}\\)\\), \\(\\({37}\\)\\), \\(\\({38}\\)\\), \\(\\({39}\\)\\), \
\\(\\({40}\\)\\), \\(\\({41}\\)\\), \\(\\({42}\\)\\), \\(\\({43}\\)\\), \
\\(\\({44}\\)\\), \\(\\({45}\\)\\), \\(\\({46}\\)\\), \\(\\({47}\\)\\), \
\\(\\({48}\\)\\), \\(\\({49}\\)\\), \\(\\({50}\\)\\), \\(\\({51}\\)\\), \
\\(\\({52}\\)\\), \\(\\(\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \\(\
\\({System`DiscretePlotDump`n}\\)\\)}\\)\\), \\(\\({2, 1}\\)\\)\\)\\)]\\)\
\[NoBreak] is not of the form n, {n}, or {m, n}. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/level\\\", ButtonNote -> \
\\\"Map::level\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025474454*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Map :: \
level\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254754543`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "tperm"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Permutation \[NoBreak]\\!\\({2, 1}\\)\[NoBreak] is longer \
than the dimensions \[NoBreak]\\!\\({2}\\)\[NoBreak] of the array. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Transpose/tperm\\\", \
ButtonNote -> \\\"Transpose::tperm\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254764543`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Transpose \
:: tperm\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025477454*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "list"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"List expected at position \[NoBreak]\\!\\(2\\)\[NoBreak] \
in \[NoBreak]\\!\\(Transpose[\\(\\(True, True\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/list\\\", \
ButtonNote -> \\\"Transpose::list\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254794545`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "list"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"List expected at position \[NoBreak]\\!\\(2\\)\[NoBreak] \
in \[NoBreak]\\!\\(Transpose[\\(\\(True, True\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/list\\\", \
ButtonNote -> \\\"Transpose::list\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254804544`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MapThread", "::", "mptd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Object \
\[NoBreak]\\!\\(Map[\\(\\(\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\), \
\\(\\({True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
\\(\\(\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\)\\)\\)]\\)\[NoBreak] at position \
{2, \[NoBreak]\\!\\(1\\)\[NoBreak]} in \[NoBreak]\\!\\(MapThread[\\(\\(And, \
\\(\\({\\(\\(Map[\\(\\(\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\), \
\\(\\({True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
\\(\\(\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\)\\)\\)]\\)\\), \
\\(\\(Map[\\(\\(\\(\\(\\(\\(Charting`realNumericQ[\\(\\(If[\\(\\(\\(\\(\\(\\(\
SameQ[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) && \\(\\(Unequal[\
\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\), \
\\(\\(Table[\\(\\(Indeterminate, \\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\)}\\)\\)\\)\\)]\\)\\), \\(\\(N[\\(\\(\\(\\(Slot[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\), \
\\(\\(System`DiscretePlotDump`modelData$150676[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\)\\)\\)\\)]\\)\\)]\\)\\) &\\)\\), \
\\(\\({True, True, True, True, True, False, \\(\\(\[LeftSkeleton] 39 \
\[RightSkeleton]\\)\\), False, False, False, False, False, \\(\\(\
\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\({False}\\)\\)\\)\\)]\\)\\)}\\)\\), 2\\)\\)]\\)\[NoBreak] has only \
\[NoBreak]\\!\\(0\\)\[NoBreak] of required \[NoBreak]\\!\\(2\\)\[NoBreak] \
dimensions. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/MapThread/mptd\\\", ButtonNote -> \
\\\"MapThread::mptd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254814544`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MapThread", "::", "mptd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Object \
\[NoBreak]\\!\\(Map[\\(\\(\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\), \
\\(\\({True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
\\(\\(\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\)\\)\\)]\\)\[NoBreak] at position \
{2, \[NoBreak]\\!\\(1\\)\[NoBreak]} in \[NoBreak]\\!\\(MapThread[\\(\\(And, \
\\(\\({\\(\\(Map[\\(\\(\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\), \
\\(\\({True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
\\(\\(\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\)\\)\\)]\\)\\), \
\\(\\(Map[\\(\\(\\(\\(\\(\\(Charting`realNumericQ[\\(\\(If[\\(\\(\\(\\(\\(\\(\
SameQ[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) && \\(\\(Unequal[\
\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\), \
\\(\\(Table[\\(\\(Indeterminate, \\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\)}\\)\\)\\)\\)]\\)\\), \\(\\(N[\\(\\(\\(\\(Slot[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\), \
\\(\\(System`DiscretePlotDump`modelData$150676[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\)\\)\\)\\)]\\)\\)]\\)\\) &\\)\\), \
\\(\\({True, True, True, True, True, False, \\(\\(\[LeftSkeleton] 39 \
\[RightSkeleton]\\)\\), False, False, False, False, False, \\(\\(\
\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\({False}\\)\\)\\)\\)]\\)\\)}\\)\\), 2\\)\\)]\\)\[NoBreak] has only \
\[NoBreak]\\!\\(0\\)\[NoBreak] of required \[NoBreak]\\!\\(2\\)\[NoBreak] \
dimensions. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/MapThread/mptd\\\", ButtonNote -> \
\\\"MapThread::mptd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254834547`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MapThread", "::", "mptd"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Object \
\[NoBreak]\\!\\(Map[\\(\\(\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\), \
\\(\\({True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
\\(\\(\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\)\\)\\)]\\)\[NoBreak] at position \
{2, \[NoBreak]\\!\\(1\\)\[NoBreak]} in \[NoBreak]\\!\\(MapThread[\\(\\(And, \
\\(\\({\\(\\(Map[\\(\\(\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\), \
\\(\\({True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
\\(\\(\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\)\\)\\)]\\)\\), \
\\(\\(Map[\\(\\(\\(\\(\\(\\(Charting`realNumericQ[\\(\\(If[\\(\\(\\(\\(\\(\\(\
SameQ[\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\) && \\(\\(Unequal[\
\\(\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\)\\)\\), \
\\(\\(Table[\\(\\(Indeterminate, \\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\)}\\)\\)\\)\\)]\\)\\), \\(\\(N[\\(\\(\\(\\(Slot[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\), \
\\(\\(System`DiscretePlotDump`modelData$150676[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\)\\)\\)\\)]\\)\\)]\\)\\) &\\)\\), \
\\(\\({True, True, True, True, True, False, \\(\\(\[LeftSkeleton] 39 \
\[RightSkeleton]\\)\\), False, False, False, False, False, \\(\\(\
\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\({False}\\)\\)\\)\\)]\\)\\)}\\)\\), 2\\)\\)]\\)\[NoBreak] has only \
\[NoBreak]\\!\\(0\\)\[NoBreak] of required \[NoBreak]\\!\\(2\\)\[NoBreak] \
dimensions. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/MapThread/mptd\\\", ButtonNote -> \
\\\"MapThread::mptd\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254854546`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(MapThread \
:: mptd\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025487455*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Pick", "::", "incomp"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Expressions \
\[NoBreak]\\!\\({\\(Map[\\(\\(\\(\\(\\(\\(If[\\(\\(\\(\\(\\(\\(\\(\\(Head[\\(\
\\(Slot[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)]\\)\\) === List\
\\)\\) && \\(\\(\\(\\(Length[\\(\\(Slot[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)]\\)\\) \[NotEqual] \
System`DiscretePlotDump`max\\)\\)\\)\\), \\(\\(Table[\\(\\(Indeterminate, \\(\
\\({System`DiscretePlotDump`max}\\)\\)\\)\\)]\\)\\), \\(\\(N[\\(\\(#1, \
\\(\\(System`DiscretePlotDump`modelData$150676[\\\"WorkingPrecision\\\"]\\)\\)\
\\)\\)]\\)\\)\\)\\)]\\)\\) &\\)\\), \\(\\({\\(\\(-0.22522221730470038`\\)\\), \
\\(\\(-1.58427141664316`\\)\\), \\(\\(-0.1477777636969515`\\)\\), \
1.7960980550090797`, 4.192967718113533`, \\(\\({7.000000000000008`}\\)\\), \
\\(\\({\\(-0.9999999999999964`\\)}\\)\\), \
\\(\\({\\(-0.9999999999999822`\\)}\\)\\), \\(\\(\[LeftSkeleton] 35 \
\[RightSkeleton]\\)\\), \\(\\({\\(-1.000000000000341`\\)}\\)\\), \
\\(\\({\\(-0.9999999999997158`\\)}\\)\\), \\(\\({\\(-1.`\\)}\\)\\), \
\\(\\({\\(-1.0000000000001137`\\)}\\)\\), \
\\(\\({\\(-0.9999999999997726`\\)}\\)\\), \
\\(\\({\\(-1.0000000000004547`\\)}\\)\\), \
\\(\\({\\(-0.9999999999998863`\\)}\\)\\), \\(\\(\[LeftSkeleton] 48 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({System`DiscretePlotDump`n}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] and \
\[NoBreak]\\!\\({\\(Map[\\(\\(\\(\\(\\(\\(Charting`realNumericQ[\\(\\(If[\\(\\\
(\\(\\(\\(\\(\\(\\(Head[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\) \
=== List\\)\\) && \\(\\(\\(\\(Length[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\)\\)]\\)\\) \[NotEqual] System`DiscretePlotDump`max\\)\\)\\)\\), \
\\(\\(Table[\\(\\(Indeterminate, \\(\\({System`DiscretePlotDump`max}\\)\\)\\)\
\\)]\\)\\), \\(\\(N[\\(\\(#1, \\(\\(System`DiscretePlotDump`modelData$150676[\
\\\"WorkingPrecision\\\"]\\)\\)\\)\\)]\\)\\)\\)\\)]\\)\\)]\\)\\) &\\)\\), \\(\
\\({True, True, True, True, True, False, False, False, False, False, False, \
False, False, False, False, False, False, False, False, False, False, False, \
False, False, False, False, False, False, False, False, False, False, False, \
False, False, False, False, False, False, False, False, False, False, False, \
False, False, False, False, False, False, \\(\\(\[LeftSkeleton] 48 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({False}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
have incompatible shapes. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Pick\
\\\", ButtonNote -> \\\"Pick::incomp\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025487455*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Pick", "::", "incomp"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Expressions \
\[NoBreak]\\!\\({\\(Map[\\(\\(\\(\\(\\(\\(If[\\(\\(\\(\\(\\(\\(\\(\\(Head[\\(\
\\(Slot[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)]\\)\\) === List\
\\)\\) && \\(\\(\\(\\(Length[\\(\\(Slot[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)]\\)\\) \[NotEqual] \
System`DiscretePlotDump`max\\)\\)\\)\\), \\(\\(Table[\\(\\(Indeterminate, \\(\
\\({System`DiscretePlotDump`max}\\)\\)\\)\\)]\\)\\), \\(\\(N[\\(\\(#1, \
\\(\\(System`DiscretePlotDump`modelData$150676[\\\"WorkingPrecision\\\"]\\)\\)\
\\)\\)]\\)\\)\\)\\)]\\)\\) &\\)\\), \\(\\({\\(\\(-0.22522221730470038`\\)\\), \
\\(\\(-1.58427141664316`\\)\\), \\(\\(-0.1477777636969515`\\)\\), \
1.7960980550090797`, 4.192967718113533`, \\(\\({7.000000000000008`}\\)\\), \
\\(\\({\\(-0.9999999999999964`\\)}\\)\\), \
\\(\\({\\(-0.9999999999999822`\\)}\\)\\), \\(\\(\[LeftSkeleton] 35 \
\[RightSkeleton]\\)\\), \\(\\({\\(-1.000000000000341`\\)}\\)\\), \
\\(\\({\\(-0.9999999999997158`\\)}\\)\\), \\(\\({\\(-1.`\\)}\\)\\), \
\\(\\({\\(-1.0000000000001137`\\)}\\)\\), \
\\(\\({\\(-0.9999999999997726`\\)}\\)\\), \
\\(\\({\\(-1.0000000000004547`\\)}\\)\\), \
\\(\\({\\(-0.9999999999998863`\\)}\\)\\), \\(\\(\[LeftSkeleton] 48 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({System`DiscretePlotDump`n}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] and \
\[NoBreak]\\!\\({\\(Map[\\(\\(\\(\\(\\(\\(Charting`realNumericQ[\\(\\(If[\\(\\\
(\\(\\(\\(\\(\\(\\(Head[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\) \
=== List\\)\\) && \\(\\(\\(\\(Length[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\)\\)]\\)\\) \[NotEqual] System`DiscretePlotDump`max\\)\\)\\)\\), \
\\(\\(Table[\\(\\(Indeterminate, \\(\\({System`DiscretePlotDump`max}\\)\\)\\)\
\\)]\\)\\), \\(\\(N[\\(\\(#1, \\(\\(System`DiscretePlotDump`modelData$150676[\
\\\"WorkingPrecision\\\"]\\)\\)\\)\\)]\\)\\)\\)\\)]\\)\\)]\\)\\) &\\)\\), \\(\
\\({True, True, True, True, True, False, False, False, False, False, False, \
False, False, False, False, False, False, False, False, False, False, False, \
False, False, False, False, False, False, False, False, False, False, False, \
False, False, False, False, False, False, False, False, False, False, False, \
False, False, False, False, False, False, \\(\\(\[LeftSkeleton] 48 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({False}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
have incompatible shapes. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Pick\
\\\", ButtonNote -> \\\"Pick::incomp\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025489455*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Pick", "::", "incomp"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Expressions \
\[NoBreak]\\!\\({\\(Map[\\(\\(\\(\\(\\(\\(If[\\(\\(\\(\\(\\(\\(\\(\\(Head[\\(\
\\(Slot[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\)]\\)\\) === List\
\\)\\) && \\(\\(\\(\\(Length[\\(\\(Slot[\\(\\(\[LeftSkeleton] 1 \
\[RightSkeleton]\\)\\)]\\)\\)]\\)\\) \[NotEqual] \
System`DiscretePlotDump`max\\)\\)\\)\\), \\(\\(Table[\\(\\(Indeterminate, \\(\
\\({System`DiscretePlotDump`max}\\)\\)\\)\\)]\\)\\), \\(\\(N[\\(\\(#1, \
\\(\\(System`DiscretePlotDump`modelData$150676[\\\"WorkingPrecision\\\"]\\)\\)\
\\)\\)]\\)\\)\\)\\)]\\)\\) &\\)\\), \\(\\({\\(\\(-0.22522221730470038`\\)\\), \
\\(\\(-1.58427141664316`\\)\\), \\(\\(-0.1477777636969515`\\)\\), \
1.7960980550090797`, 4.192967718113533`, \\(\\({7.000000000000008`}\\)\\), \
\\(\\({\\(-0.9999999999999964`\\)}\\)\\), \
\\(\\({\\(-0.9999999999999822`\\)}\\)\\), \\(\\(\[LeftSkeleton] 35 \
\[RightSkeleton]\\)\\), \\(\\({\\(-1.000000000000341`\\)}\\)\\), \
\\(\\({\\(-0.9999999999997158`\\)}\\)\\), \\(\\({\\(-1.`\\)}\\)\\), \
\\(\\({\\(-1.0000000000001137`\\)}\\)\\), \
\\(\\({\\(-0.9999999999997726`\\)}\\)\\), \
\\(\\({\\(-1.0000000000004547`\\)}\\)\\), \
\\(\\({\\(-0.9999999999998863`\\)}\\)\\), \\(\\(\[LeftSkeleton] 48 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({System`DiscretePlotDump`n}\\)\\)\\)\\)]\
\\)}\\)\[NoBreak] and \
\[NoBreak]\\!\\({\\(Map[\\(\\(\\(\\(\\(\\(Charting`realNumericQ[\\(\\(If[\\(\\\
(\\(\\(\\(\\(\\(\\(Head[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\\)]\\)\\) \
=== List\\)\\) && \\(\\(\\(\\(Length[\\(\\(\[LeftSkeleton] 1 \[RightSkeleton]\
\\)\\)]\\)\\) \[NotEqual] System`DiscretePlotDump`max\\)\\)\\)\\), \
\\(\\(Table[\\(\\(Indeterminate, \\(\\({System`DiscretePlotDump`max}\\)\\)\\)\
\\)]\\)\\), \\(\\(N[\\(\\(#1, \\(\\(System`DiscretePlotDump`modelData$150676[\
\\\"WorkingPrecision\\\"]\\)\\)\\)\\)]\\)\\)\\)\\)]\\)\\)]\\)\\) &\\)\\), \\(\
\\({True, True, True, True, True, False, False, False, False, False, False, \
False, False, False, False, False, False, False, False, False, False, False, \
False, False, False, False, False, False, False, False, False, False, False, \
False, False, False, False, False, False, False, False, False, False, False, \
False, False, False, False, False, False, \\(\\(\[LeftSkeleton] 48 \
\[RightSkeleton]\\)\\)}\\)\\), \\(\\({False}\\)\\)\\)\\)]\\)}\\)\[NoBreak] \
have incompatible shapes. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, ButtonData:>\\\"paclet:ref/Pick\
\\\", ButtonNote -> \\\"Pick::incomp\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025491455*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Pick :: \
incomp\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025493455*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Set", "::", "shape"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Lists \[NoBreak]\\!\\({System`DiscretePlotDump`low, \
System`DiscretePlotDump`high}\\)\[NoBreak] and \
\[NoBreak]\\!\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)\[NoBreak] are not the \
same shape. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Set/shape\\\", ButtonNote -> \
\\\"Set::shape\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254944553`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "list"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"List expected at position \[NoBreak]\\!\\(2\\)\[NoBreak] \
in \[NoBreak]\\!\\(Transpose[\\(\\(\\(\\(\\(\\(If[\\(\\(\\(\\(\\(\\(\\(\\(\
Head[#1]\\)\\) === List\\)\\) && \\(\\(\\(\\(Length[#1]\\)\\) \[NotEqual] \
System`DiscretePlotDump`max\\)\\)\\)\\), \\(\\(Table[\\(\\(Indeterminate, \\(\
\\({System`DiscretePlotDump`max}\\)\\)\\)\\)]\\)\\), \\(\\(N[\\(\\(#1, \
\\(\\(System`DiscretePlotDump`modelData$150676[\\\"WorkingPrecision\\\"]\\)\\)\
\\)\\)]\\)\\)\\)\\)]\\)\\) &\\)\\), 1\\)\\)]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/list\\\", \
ButtonNote -> \\\"Transpose::list\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254954553`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Transpose \
:: list\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025496455*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of the one-dimensional list \
\[NoBreak]\\!\\({}\\)\[NoBreak] cannot be transposed. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254974556`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of the one-dimensional list \
\[NoBreak]\\!\\({}\\)\[NoBreak] cannot be transposed. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", ButtonNote -> \
\\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254984555`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Transpose", "::", "nmtx"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"The first two levels of the one-dimensional list \
\[NoBreak]\\!\\({\\(\\(Transpose[\\(\\({}\\)\\)]\\)\\), \
\\(\\(Transpose[\\(\\({}\\)\\)]\\)\\)}\\)\[NoBreak] cannot be transposed. \\!\
\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/Transpose/nmtx\\\", \
ButtonNote -> \\\"Transpose::nmtx\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254984555`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Transpose \
:: nmtx\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120254994555`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MapThread", "::", "mptc"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Incompatible dimensions of objects at positions {2, \
\[NoBreak]\\!\\(1\\)\[NoBreak]} and {2, \[NoBreak]\\!\\(2\\)\[NoBreak]} of \
\[NoBreak]\\!\\(MapThread[\\(\\(And, \
\\(\\({\\(\\({\\(\\(Map[\\(\\(\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\), \
\\(\\({True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
\\(\\(\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\)\\)\\)]\\)\\), \
\\(\\(Map[\\(\\(\\(\\(\\(\\(Charting`realNumericQ[\\(\\(If[\\(\\(\\(\\(And[\\(\
\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \\(\\(Table[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \
\\(\\(N[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\)\\)]\\)\\) &\\)\\), \\(\\({True, True, \
True, True, True, False, False, False, False, False, False, False, False, \\(\
\\(\[LeftSkeleton] 25 \[RightSkeleton]\\)\\), False, False, False, False, \
False, False, False, False, False, False, False, False, \\(\\(\[LeftSkeleton] \
48 \[RightSkeleton]\\)\\)}\\)\\), \\(\\({False}\\)\\)\\)\\)]\\)\\)}\\)\\), \
\\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\)}\\)\\)\\)\\)]\\)\
\[NoBreak]; dimensions are \[NoBreak]\\!\\({2}\\)\[NoBreak] and \[NoBreak]\\!\
\\({98}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/MapThread/mptc\\\", ButtonNote -> \
\\\"MapThread::mptc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025500456*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"MapThread", "::", "mptc"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Incompatible dimensions of objects at positions {2, \
\[NoBreak]\\!\\(1\\)\[NoBreak]} and {2, \[NoBreak]\\!\\(2\\)\[NoBreak]} of \
\[NoBreak]\\!\\(MapThread[\\(\\(And, \
\\(\\({\\(\\({\\(\\(Map[\\(\\(\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\), \
\\(\\({True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
True, True, True, True, True, True, True, True, True, True, True, True, True, \
\\(\\(\[LeftSkeleton] 48 \[RightSkeleton]\\)\\)}\\)\\), \
\\(\\(Transpose[\\(\\(True, True\\)\\)]\\)\\)\\)\\)]\\)\\), \
\\(\\(Map[\\(\\(\\(\\(\\(\\(Charting`realNumericQ[\\(\\(If[\\(\\(\\(\\(And[\\(\
\\(\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \\(\\(Table[\\(\\(\
\[LeftSkeleton] 2 \[RightSkeleton]\\)\\)]\\)\\), \
\\(\\(N[\\(\\(\[LeftSkeleton] 2 \
\[RightSkeleton]\\)\\)]\\)\\)\\)\\)]\\)\\)]\\)\\) &\\)\\), \\(\\({True, True, \
True, True, True, False, False, False, False, False, False, False, False, \\(\
\\(\[LeftSkeleton] 25 \[RightSkeleton]\\)\\), False, False, False, False, \
False, False, False, False, False, False, False, False, \\(\\(\[LeftSkeleton] \
48 \[RightSkeleton]\\)\\)}\\)\\), \\(\\({False}\\)\\)\\)\\)]\\)\\)}\\)\\), \
\\(\\({\\(\[LeftSkeleton] 1 \[RightSkeleton]\\)}\\)\\)}\\)\\)\\)\\)]\\)\
\[NoBreak]; dimensions are \[NoBreak]\\!\\({2}\\)\[NoBreak] and \[NoBreak]\\!\
\\({98}\\)\[NoBreak]. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/MapThread/mptc\\\", ButtonNote -> \
\\\"MapThread::mptc\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120255024557`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Split", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \[NoBreak]\\!\\(Split[And]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/normal\\\", \
ButtonNote -> \\\"Split::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025503456*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Split", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \[NoBreak]\\!\\(Split[0]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/normal\\\", \
ButtonNote -> \\\"Split::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120255044556`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"First", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \[NoBreak]\\!\\(First[And]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/normal\\\", \
ButtonNote -> \\\"First::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025505456*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"First", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \[NoBreak]\\!\\(First[And]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/normal\\\", \
ButtonNote -> \\\"First::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025506456*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Split", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \[NoBreak]\\!\\(Split[2]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/normal\\\", \
ButtonNote -> \\\"Split::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025507456*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(Split :: \
normal\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025508456*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"First", "::", "normal"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Nonatomic expression expected at position \
\[NoBreak]\\!\\(1\\)\[NoBreak] in \[NoBreak]\\!\\(First[2]\\)\[NoBreak]. \
\\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/normal\\\", \
ButtonNote -> \\\"First::normal\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.5893120255094557`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"General", "::", "stop"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Further output of \[NoBreak]\\!\\(\\*StyleBox[\\(First :: \
normal\\), \\\"MessageName\\\"]\\)\[NoBreak] will be suppressed during this \
calculation. \\!\\(\\*ButtonBox[\\\"\[RightSkeleton]\\\", \
ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/stop\\\", ButtonNote -> \
\\\"General::stop\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{
  3.5893119718633876`*^9, {3.5893120045662584`*^9, 3.589312025510456*^9}}],

Cell[BoxData[
 GraphicsBox[{
   {RGBColor[0.24720000000000014`, 0.24, 0.6], {
     {Opacity[0.2], LineBox[Transpose[{Transpose[{}], Transpose[{}]}],
       VertexColors->None]}, 
     {Opacity[0.2], LineBox[Transpose[{Transpose[{}], Transpose[{}]}],
       VertexColors->None]}}, {
     {Opacity[0.2], LineBox[Transpose[{Pick[CompressedData["
1:eJxdkk1LVHEUxo8WohIx4CxcuBglMkKk7MXX8sl8S1Ov4zgvOxXciODGD/Bf
+CX8Fu0TvESCCzfBLFy2cCFhZCBWMmrH7k3OeS4Ml9885znnOWemfWUjv1ov
Iiv6uXknTyPW66pH2erBbsIZ/NrqrHVV/qScRe5zy8flb59SbsXm3lr0Zac2
nHAbvp9UCtt7GSScQ1P6fcId+Hp98/xI/Q+w5Pghcv/epyk/Apz+mPQu4m7E
rv4JpM7qTwFX34Pg9GcQ53+OuN7qLxCurP4y3eu/3gu5tHofze+H3LE8QPWD
ENd/iPRX1O811Q9THl33p9GD8l2rv4FcWF3Z7TsCObf6iK+Xt5DfVlc+s/qo
5zBK+cZ8/kAs49R/nPJPQBoMhwmfVyb9vDBJ+72j/sqNVp+C1Kyu3Gz1afJP
+3p5T37l+9Y/Q/eZofvMkn/Wz5M58s+RP4JkDSPy+4fI3y+OaL95f2/M0zzl
quGY6iXv+yPv8wTlQ+vPk3+B8i/43yco37P5qV4KlF/51OYv+HvGyrG97yKk
1fqVc3a+csbOX6T7FyHHph+KPm9Q3rfzi/T/K3kdJX+vUPL1ccnvJ2WfD2Xy
K3+w88t0/8rtPn8BWi/a1Q==
          "], MapThread[
          And, {{Map[
             Transpose[True, True], {
              True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True}, Transpose[
              True, True]], Map[
             Charting`realNumericQ[
              If[And[Head[#] === List, Length[#] != 
                 System`DiscretePlotDump`max], Table[
                Indeterminate, {System`DiscretePlotDump`max}], 
                N[#, System`DiscretePlotDump`modelData$150676[
                 "WorkingPrecision"]]]]& , {
              True, True, True, True, True, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False}, {False}]}, {
            True, True, True, False, False, False, True, True, True, True, 
             True, True, True, True, True, True, True, True, True, True, True,
              True, True, True, True, True, True, True, True, True, True, 
             True, True, True, True, True, True, True, True, True, True, True,
              True, True, True, True, True, True, True, True, True, True, 
             True, True, True, True, True, True, True, True, True, True, True,
              True, True, True, True, True, True, True, True, True, True, 
             True, True, True, True, True, True, True, True, True, True, True,
              True, True, True, True, True, True, True, True, True, True, 
             True, True, True, True}}]], 
         Pick[{{3., 0}, {4., 0}, {5., 0}, {6., 0}, {7., 0}, {8., 0}, {
           9., 0}, {10., 0}, {11., 0}, {12., 0}, {13., 0}, {14., 0}, {
           15., 0}, {16., 0}, {17., 0}, {18., 0}, {19., 0}, {20., 0}, {
           21., 0}, {22., 0}, {23., 0}, {24., 0}, {25., 0}, {26., 0}, {
           27., 0}, {28., 0}, {29., 0}, {30., 0}, {31., 0}, {32., 0}, {
           33., 0}, {34., 0}, {35., 0}, {36., 0}, {37., 0}, {38., 0}, {
           39., 0}, {40., 0}, {41., 0}, {42., 0}, {43., 0}, {44., 0}, {
           45., 0}, {46., 0}, {47., 0}, {48., 0}, {49., 0}, {50., 0}, {
           51., 0}, {52., 0}, {53., 0}, {54., 0}, {55., 0}, {56., 0}, {
           57., 0}, {58., 0}, {59., 0}, {60., 0}, {61., 0}, {62., 0}, {
           63., 0}, {64., 0}, {65., 0}, {66., 0}, {67., 0}, {68., 0}, {
           69., 0}, {70., 0}, {71., 0}, {72., 0}, {73., 0}, {74., 0}, {
           75., 0}, {76., 0}, {77., 0}, {78., 0}, {79., 0}, {80., 0}, {
           81., 0}, {82., 0}, {83., 0}, {84., 0}, {85., 0}, {86., 0}, {
           87., 0}, {88., 0}, {89., 0}, {90., 0}, {91., 0}, {92., 0}, {
           93., 0}, {94., 0}, {95., 0}, {96., 0}, {97., 0}, {98., 0}, {
           99., 0}, {100., 0}}, MapThread[
          And, {{Map[
             Transpose[True, True], {
              True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True}, Transpose[
              True, True]], Map[
             Charting`realNumericQ[
              If[And[Head[#] === List, Length[#] != 
                 System`DiscretePlotDump`max], Table[
                Indeterminate, {System`DiscretePlotDump`max}], 
                N[#, System`DiscretePlotDump`modelData$150676[
                 "WorkingPrecision"]]]]& , {
              True, True, True, True, True, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False}, {False}]}, {
            True, True, True, False, False, False, True, True, True, True, 
             True, True, True, True, True, True, True, True, True, True, True,
              True, True, True, True, True, True, True, True, True, True, 
             True, True, True, True, True, True, True, True, True, True, True,
              True, True, True, True, True, True, True, True, True, True, 
             True, True, True, True, True, True, True, True, True, True, True,
              True, True, True, True, True, True, True, True, True, True, 
             True, True, True, True, True, True, True, True, True, True, True,
              True, True, True, True, True, True, True, True, True, True, 
             True, True, True, True}}]]}],
       VertexColors->None]}, 
     {Opacity[0.2], LineBox[Transpose[{Pick[CompressedData["
1:eJxdkk1LVHEUxo8WohIx4CxcuBglMkKk7MXX8sl8S1Ov4zgvOxXciODGD/Bf
+CX8Fu0TvESCCzfBLFy2cCFhZCBWMmrH7k3OeS4Ml9885znnOWemfWUjv1ov
Iiv6uXknTyPW66pH2erBbsIZ/NrqrHVV/qScRe5zy8flb59SbsXm3lr0Zac2
nHAbvp9UCtt7GSScQ1P6fcId+Hp98/xI/Q+w5Pghcv/epyk/Apz+mPQu4m7E
rv4JpM7qTwFX34Pg9GcQ53+OuN7qLxCurP4y3eu/3gu5tHofze+H3LE8QPWD
ENd/iPRX1O811Q9THl33p9GD8l2rv4FcWF3Z7TsCObf6iK+Xt5DfVlc+s/qo
5zBK+cZ8/kAs49R/nPJPQBoMhwmfVyb9vDBJ+72j/sqNVp+C1Kyu3Gz1afJP
+3p5T37l+9Y/Q/eZofvMkn/Wz5M58s+RP4JkDSPy+4fI3y+OaL95f2/M0zzl
quGY6iXv+yPv8wTlQ+vPk3+B8i/43yco37P5qV4KlF/51OYv+HvGyrG97yKk
1fqVc3a+csbOX6T7FyHHph+KPm9Q3rfzi/T/K3kdJX+vUPL1ccnvJ2WfD2Xy
K3+w88t0/8rtPn8BWi/a1Q==
          "], MapThread[
          And, {{Map[
             Transpose[True, True], {
              True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True}, Transpose[
              True, True]], Map[
             Charting`realNumericQ[
              If[And[Head[#] === List, Length[#] != 
                 System`DiscretePlotDump`max], Table[
                Indeterminate, {System`DiscretePlotDump`max}], 
                N[#, System`DiscretePlotDump`modelData$150676[
                 "WorkingPrecision"]]]]& , {
              True, True, True, True, True, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False}, {False}]}, {
            False, False, False, True, True, True, False, False, False, False,
              False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False}}]], 
         Pick[{{3., 0}, {4., 0}, {5., 0}, {6., 0}, {7., 0}, {8., 0}, {
           9., 0}, {10., 0}, {11., 0}, {12., 0}, {13., 0}, {14., 0}, {
           15., 0}, {16., 0}, {17., 0}, {18., 0}, {19., 0}, {20., 0}, {
           21., 0}, {22., 0}, {23., 0}, {24., 0}, {25., 0}, {26., 0}, {
           27., 0}, {28., 0}, {29., 0}, {30., 0}, {31., 0}, {32., 0}, {
           33., 0}, {34., 0}, {35., 0}, {36., 0}, {37., 0}, {38., 0}, {
           39., 0}, {40., 0}, {41., 0}, {42., 0}, {43., 0}, {44., 0}, {
           45., 0}, {46., 0}, {47., 0}, {48., 0}, {49., 0}, {50., 0}, {
           51., 0}, {52., 0}, {53., 0}, {54., 0}, {55., 0}, {56., 0}, {
           57., 0}, {58., 0}, {59., 0}, {60., 0}, {61., 0}, {62., 0}, {
           63., 0}, {64., 0}, {65., 0}, {66., 0}, {67., 0}, {68., 0}, {
           69., 0}, {70., 0}, {71., 0}, {72., 0}, {73., 0}, {74., 0}, {
           75., 0}, {76., 0}, {77., 0}, {78., 0}, {79., 0}, {80., 0}, {
           81., 0}, {82., 0}, {83., 0}, {84., 0}, {85., 0}, {86., 0}, {
           87., 0}, {88., 0}, {89., 0}, {90., 0}, {91., 0}, {92., 0}, {
           93., 0}, {94., 0}, {95., 0}, {96., 0}, {97., 0}, {98., 0}, {
           99., 0}, {100., 0}}, MapThread[
          And, {{Map[
             Transpose[True, True], {
              True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True, True, True, 
               True, True, True, True, True, True, True, True}, Transpose[
              True, True]], Map[
             Charting`realNumericQ[
              If[And[Head[#] === List, Length[#] != 
                 System`DiscretePlotDump`max], Table[
                Indeterminate, {System`DiscretePlotDump`max}], 
                N[#, System`DiscretePlotDump`modelData$150676[
                 "WorkingPrecision"]]]]& , {
              True, True, True, True, True, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False, False, False,
                False, False, False, False, False, False, False}, {False}]}, {
            False, False, False, True, True, True, False, False, False, False,
              False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False, False, False, 
             False, False, False, False, False, False, False}}]]}],
       VertexColors->None]}}, {
     {Opacity[0.2], LineBox[Transpose[{Transpose[{}], Transpose[{}]}],
       VertexColors->None]}, 
     {Opacity[0.2], LineBox[Transpose[{Transpose[{}], Transpose[{}]}],
       VertexColors->None]}}}, {
    {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, 
     System`DiscretePlotDump`drawMarkers[DiscretePlot, {None, Automatic}, 
      RGBColor[0.24720000000000014`, 0.24, 0.6], Automatic, False], {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, 
     PointBox[Pick[CompressedData["
1:eJxdkk1LVHEUxo8WohIx4CxcuBglMkKk7MXX8sl8S1Ov4zgvOxXciODGD/Bf
+CX8Fu0TvESCCzfBLFy2cCFhZCBWMmrH7k3OeS4Ml9885znnOWemfWUjv1ov
Iiv6uXknTyPW66pH2erBbsIZ/NrqrHVV/qScRe5zy8flb59SbsXm3lr0Zac2
nHAbvp9UCtt7GSScQ1P6fcId+Hp98/xI/Q+w5Pghcv/epyk/Apz+mPQu4m7E
rv4JpM7qTwFX34Pg9GcQ53+OuN7qLxCurP4y3eu/3gu5tHofze+H3LE8QPWD
ENd/iPRX1O811Q9THl33p9GD8l2rv4FcWF3Z7TsCObf6iK+Xt5DfVlc+s/qo
5zBK+cZ8/kAs49R/nPJPQBoMhwmfVyb9vDBJ+72j/sqNVp+C1Kyu3Gz1afJP
+3p5T37l+9Y/Q/eZofvMkn/Wz5M58s+RP4JkDSPy+4fI3y+OaL95f2/M0zzl
quGY6iXv+yPv8wTlQ+vPk3+B8i/43yco37P5qV4KlF/51OYv+HvGyrG97yKk
1fqVc3a+csbOX6T7FyHHph+KPm9Q3rfzi/T/K3kdJX+vUPL1ccnvJ2WfD2Xy
K3+w88t0/8rtPn8BWi/a1Q==
       "], {
       Map[Transpose[True, True], {
         True, True, True, True, True, True, True, True, True, True, True, 
          True, True, True, True, True, True, True, True, True, True, True, 
          True, True, True, True, True, True, True, True, True, True, True, 
          True, True, True, True, True, True, True, True, True, True, True, 
          True, True, True, True, True, True, True, True, True, True, True, 
          True, True, True, True, True, True, True, True, True, True, True, 
          True, True, True, True, True, True, True, True, True, True, True, 
          True, True, True, True, True, True, True, True, True, True, True, 
          True, True, True, True, True, True, True, True, True, True}, 
         Transpose[True, True]], Map[
        Charting`realNumericQ[
         If[And[Head[#] === List, Length[#] != System`DiscretePlotDump`max], 
           Table[Indeterminate, {System`DiscretePlotDump`max}], 
           N[#, System`DiscretePlotDump`modelData$150676[
            "WorkingPrecision"]]]]& , {
         True, True, True, True, True, False, False, False, False, False, 
          False, False, False, False, False, False, False, False, False, 
          False, False, False, False, False, False, False, False, False, 
          False, False, False, False, False, False, False, False, False, 
          False, False, False, False, False, False, False, False, False, 
          False, False, False, False, False, False, False, False, False, 
          False, False, False, False, False, False, False, False, False, 
          False, False, False, False, False, False, False, False, False, 
          False, False, False, False, False, False, False, False, False, 
          False, False, False, False, False, False, False, False, False, 
          False, False, False, False, False, False, False}, {False}]}]], {}}, 
    {RGBColor[0.24720000000000014`, 0.24, 0.6], {}, 
     System`DiscretePlotDump`drawMarkers[DiscretePlot, {None, Automatic}, 
      RGBColor[0.24720000000000014`, 0.24, 0.6], Automatic, False], {}}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{3, 0},
  Method->{"MessagesHead" -> DiscretePlot},
  PlotRange->{{3, 100}, {-1, 1}},
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.02]}}]], "Output",
 CellChangeTimes->{{3.5893116347541065`*^9, 3.5893116752334213`*^9}, {
  3.589311811940241*^9, 3.5893119719283915`*^9}, {3.5893120046262617`*^9, 
  3.589312025528457*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Fa3", "[", 
  RowBox[{"100", ",", "0", ",", 
   RowBox[{"-", "1"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.589311686890088*^9, 3.5893116935504694`*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.5893116938754873`*^9}],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{3.5893116938764877`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", "a"}], 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Gamma", "[", 
       RowBox[{"a", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"1", "-", "s"}], ")"}]}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "s"}], ")"}], 
      RowBox[{"-", "a"}]]}], 
    RowBox[{"Gamma", "[", "a", "]"}]]}], "/.", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"a", "\[Rule]", "0"}], ",", 
    RowBox[{"s", "\[Rule]", 
     RowBox[{"-", "1"}]}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.5893117063952036`*^9, 3.589311723998211*^9}}],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Infinity", "::", "indet"}], "MessageName"], 
  RowBox[{
  ":", " "}], "\<\"Indeterminate expression \[NoBreak]\\!\\(0\\\\ \
ComplexInfinity\\)\[NoBreak] encountered. \\!\\(\\*ButtonBox[\\\"\
\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", ButtonFrame->None, \
ButtonData:>\\\"paclet:ref/message/General/indet\\\", ButtonNote -> \
\\\"Infinity::indet\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.589311724231224*^9}],

Cell[BoxData["Indeterminate"], "Output",
 CellChangeTimes->{{3.589311717447836*^9, 3.589311724232224*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Gamma", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.589311739744111*^9, 3.5893117409181786`*^9}}],

Cell[BoxData["ComplexInfinity"], "Output",
 CellChangeTimes->{3.589311741176193*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Re", "[", 
    RowBox[{"Fa3", "[", 
     RowBox[{"n", ",", "2.75", ",", "0"}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "100"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.589312156474947*^9, 3.5893122219256907`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
CvV08MV56Y5Jmw38cJ/3S3fa5APQ579VE8UXBLvodyuvCcZ83tfJ8bmj8Fj8
quzBEFhGls+q5TisRYQLhZ+GTfb0zUrEwo7dqs96kmBft/QrMenw7L0Xfw9e
g0/8mHdXzoarU9Zzb82B6VREWtfnwvp9mmd+38bzxJ2yVhq5Q/FhonXL4bE3
d9Hf8OxsFnEffRuvaxZ3C5Fnri1bdeUBLGgx5Of7EL6bvqFbpxJ+JBx4Z7oa
bixtC7n5HF5n80UyoRE2X/j3IbQZTrnGkeL2Cvft3iFjaN4Kcw/pLaq/Rv9A
9P5i0XY4R/yoG1snPPIqnnPpLSwRkPtqrBvP68dGiuzqQV5a0aHwtA/nzduN
jxb2w2p/6a5nfIBPZXPvPTeI+ac68isDh5Cv/LK7ynGYYj/iPTv7zvVie6ku
2zXQWOMN++d0p5X47qXOS9C98bjlh3zYuVnxSgCcXVe/4nwQxf6EwxaiIzQY
5jhdkeN9DPvefHwQ6BiKPF77rrZpGHKD7Bxm7XDsp6O5NiB3Cn3i4JXCrZFw
aM3F8I1nML+dP8aI4SzmJ0+d5l44h/zeQNjXsfPI3bWCH72PxT6BrMPnWy/A
7/962NQmoJ+230m4NBG5BWE3e+sSzMRrWX/lMvqN4cbJ56/g/Kj3es7H09DX
0tgh65OB/sJVlSXHq8jL/si1ml5f9n0cJK9r30Au8UTIV/4mPMzNpy50C84O
27SG4/ay79PL0sNwB/fhUFuTv5CP/W8y6EPG71EcQMQvLOr1F2DewG6eva0I
pquaGqotxj6C82tpaemy7xP66XRuGfZvf9dnnlqBfFL5LX/MI7i34rGDWS38
QjE7jaNx2fuaS1b8/XLZ+yk719HfBvuzR+S0vVn2foJDA+s6lr2fjkDth2+X
vZ/tPsy3u8mODCAcLrsNpPbg+Tlm9hfG9KH/xmJfeFj/st9vqbmR74dl7yNI
56vZ0LLnl1M6v/0LzHKoYmvOFJyfrVTL8gu+WGTjKfUbDiYdW2+4iPvYN6eW
u/5Drv2uwjGCxoJqkZEu+qt0FtT+utn5exUrLKjPN027yaJ9FfrvmJUXvjGi
X827L3v1WjhXMsRAmAn9ONW0SW1mOMCg8oojK/o21t0aoWw4T8P159DljegL
Bm668GAT+owRyvIvudCfjN/XM7IZ/c7MkEg6PuSP89NE+QQwn11R2aoqiH50
Q/dRayHkvu0/eQJFYIuPmxrixdBXnlT2yZdA7rFfJfecOpz6SqXfxRgO77U9
e8oU8y6joZKZ5hQHEobz6e3lFujLrKg6/sYKZt/QI/DNBv7Nv/CC0Q7P91Ga
y1/IAX6ursqhvR/7C3bbEQ4HkSfvO+4W4ox9oe4Zay+7Ij9wpKq0yB3WPd1j
1+wJSyQu0IwcwjzLda58Wl/k8/dUzXj9cL7YC3bVjQHI7YemBJmCMB+/1Lxu
ZTDyms1584tHl/3+lE9/nA2BhawcmyeOL/v9BCiXfT4Bx8RvyHp/En6c/+18
ZwT8raEx8NVp7BMYvOXQELXse/89pUc6h/wsl/22svPIKxQVuQpi4dG9LPS5
F+DNfuMTVxMw/3lgX8qJK3CRWYO6w/Vl38/nhrDlDcxviAljNroJ6+ZaL+y6
hX5IreyQ2m343vu1LfJ38L7f/xqpkLgLr9/4NFvwPqwtdz2OuxD7g0xCgzc8
QJ57yPLAmhK465yMId1D9FfnrJb/XYZco/rz5ukK3Mevt2bl2CM4ez5zavAx
3L7hWE8PCfNXoz5FVjXAbrOmYhmvYGn3J22hnfD8W9EQ2/fLfl/TdM7mA7DD
+oE9hh/hixJVCtqf4Fr9FD6Vz8t+Xy7+jLIjyIUi9kyLjsI2V4Xf84/BsZU0
zzdNLPu9bGJpWzmJfdwh/O9mptAf6pIZHPyx7O9RSWusbYbSDySOpprMEHPI
teYdF+//pDiIYLDxXZm5gPx1+Yn1MX9wfsbGC5uO/UXucjRTwG1p2d/r27vi
FrSW1HxGoUpemx4+O9uty8MAc5TN2/xaA+8vDbzhxQ3nFk98eScOKwWs/V0m
Db/YJrHukhyclKi6MWK7JfV5bacM+Q4rwlvMbEUdlCn9IGKsyFN2tyryh+tD
VJXVsS/cL3qXsCas13rFiG0H+utlblvR7sS+7oSy/VO7kGd/q/fo18W8l0mH
/0t9WK7wU2iVIeZ/r5s+fWcP/NSX9sIVY/jCK5aUKFPMW0kJXA80x3m88dvy
DlqgPzKu9cDECv0HRqaP1G3QD72/v07cFvnOtYebN9nDa3zCO1Y6Uvr//T01
X3g/sx/7r0pcHR48CLvF3Ztsc8Z+qbGqn4Qr9s3tbqIpcEdefffd6kxPuLRy
/XjJIezLe6b7qskH85kdYYWDh9FPGCy+uOAPR06N+LMGYT74L89e8WDYa62l
/M5j6DtyxbLZhSI3F62ZDQhDrqs49zYmHOer6EhWZp9CX3Kvc/qjSPT5DqYd
f30G/Q2HW+xHz6K/6gS9Bs159H/HqPJyxiKfTPX/t+0C8k+5tz8YJCDvKu2r
PZiIvKmWNSfkEkxqNYhKvIx+8fuTbneuUPIgInfsoV5NGvL0X19FujMwH79K
gHHqKvIIdpuvq7LgIMH4Zr5sPJ+H7NP7SjnITY1l/DzyYEWvTNnUe3CBiOO+
5G+4T+HY4dTOdVZUFxVFvOWQgiebAxbWyFB8hJD54sy7tA25H73lzhk5smmO
EEX8uu5ftqM/qa4Y26eIvoytSGGb8rL54E1v6lWXnZ/EOFepTnEgMVmwwFmg
uez8pjGN7B2w33CfU8pOuIi25WyMDu4zyVudH6637Hy1B68CDJadb5P93W03
+g+CLrHbGcHfL55RMTHBftn7Rxx3muF+AS/cIhX3Uvr/fe8h61xxS+z/vqTf
yGsNy/KoTLDuw74AFXGWVXbIi624FX7bIy9+NlDf7LLMSrcsr3rDjk50umxH
YMY4Z4ULJ+AjVsdl757E/Qb4Lkm9iIB3f80XGz6NftnDWiH6s3j+OMPvPDti
YKd+/o0n4uGXd5RZMy5iXinIjKkyCb6p4bn6bTK8jiFi5UwKnjfkTSotaxry
T1eL/spkwCYezxeMr+K8R7IDc97XkbvZa458ug0zn73WZV8Ee3TbV+6pgasl
uNLVXsPic7Iptu2U/cFESo1h0rFOnLcU6xSf0kXpBxPeVqExpe8w/5Yv6ezr
XvS1v96JnHyPffcf1oSv+4A+x6nuUIlB7DttOBVsOARPbGAI9BjGvn39fIfP
fkH+9I7SoZyvyKWDTN1rx7E/XcPDeeAbzqdnOLV/cQr2e3PFjnsa82E757c/
obOmOrrEZr0jGxxTkyMesNGauj+2ZVL37CaKg4m4PjWndC70479GnyjYjP7F
n+2ptbyUPJhIXMlf2smP+SQ2n5bRLZhP3lI5urgV+RVNM35hMTjd7ou1iRSc
6bk90FkG+68ejYg/Kov8WtTLO7HyyLMubaq/rgBn33AdKFHCfW8WPlh4poL5
nCd/2HvV0M9tMpCd1MB987ovG9HtQP/O8AcPjp2U/CiRPyN5RkIH8/doQ69r
6aFfwNzwyMIALuRl6fTYjf1Fko5TYUbYV6yavybRBC41mBW+ZQY/tNbeWbkX
55W5xju+tIQrAt+FfLCGH0UIXZ7ZB1clBBQx2OM+j6+SmjY7Yj/pLuPwtgPI
qyutaHSdcN+aZ9mbbV3Qr+2YUPJ1Q//poIpFpAfyhqmzh1O8kD/7+zom3xv3
eb6WN5fki34j16Ga137oN4mW934OgJsVaed/BWH+lY4JK9NRzLfszZDaEoI+
t192HOtx2CvuzijtiWXvK69IfzocXlFfnvvpFPZZfCDRdURiPvtPvVP9GXhy
08vqh2fR11Bo58mNho/cnkxxvwjf41jLJJoK65txNTFkwp/Oi54bvQ7L5soM
vbuB807VKu5sugm/eq9xo+oWft9cCzp/797G83hsNHLIvIO8TM6iKu4u9tOZ
2m06cR8293Y66lMIZ0V7djg8gCdy/OSMS2C1mqOJGg8p+48SMX3h36TKcX7X
zygj3krcV4j9wl2mKuRBsskM/x5jX41xhvskCV53KLt+oBp9+3N3trTVYl/+
zaKImqfozxPl/Q8aYJlt7daBr2D37MkW+U6Ypmcxlu0dfI11rf5sHzwmvSH3
cz/en8oeLrq3H5BHewg4PRuEO8+IVpcP4X0I3pDhyRtGHvBEMSz1C1zdrfEu
+iu8dlZHKWQcz2fLYpTi+Q15npTF9L4pio8Rs4Z25oY/kO9ydypSmYGfbLv4
2WIOVvj9hPvwT7ig4av5+QXcVzhx0/mbf+AsOz3iyV/0OYSOzLxdwvmJk9ni
32ltqDljVevBNSvg3yYSr7QY4fFP51SOrIPdCh/6Jay3oe57HzKYe4cFtt7F
3Fe3Af3WdZqs79mRG3R7G8xzwLU300+ycKGv4vv8ocRmuERp9qsuL5zz0szm
+BY4xen+00Jh+Ficy1UOGdiujCs4QgluP2VwL0MF3rP76MeHarhPPdstjlYN
WGPgtfGoFlyW/+8M3U5Y+ohUFY8O9uVp2k8p6SHnY4wR3msAs1wfunTOCKaV
3/GvygwOW/RV6NyLfdPPM70nLWGfS43ZjDbof3aY7xK0pTiE2C8ixKRpj37X
9706+xxh0ycRxwMPwC/OFT644IR9j7hX89S6wfceuMXMesEJPZud9wfCAfQd
qs+Pw3WJTo3SGfAGnkmbK4/g7tmutguPcf61lhrDMyTYOS+/LrQazyMScUnN
v5biUGJ8X9hD96fYVyzrKuXYgL7aJwW+3Y3Ilx7zpu1ohhsur2JReoXzYn2n
YqRaMW+q945262v02fjqwrja4Xfzd2eYO9HPakv2XdUFu+afGF7shuP9nhYU
f4HLFFYHu/2EkzZNKzSt2kf14d+9c9Ic8HsfM5uPvPCe/vqKZGGYluPfiI84
/MhUZZOeNMzuY/1Abhvsfz7IgE8Obr6V+GHNdliktiDkpwLFx4gz75uYPysh
7/81cue1CqyycYU2oYZ+ityWd3c1kH830QpI1YKNvR0Yo7TRz48OzfbfhZz+
1hUVR104iH1Nxnpj+OO5Uwu1ljDJy/OxsCucYWR+Ii5o2f2+7YoX+UVxKDGQ
pT29dhGOMtey/bEE24hrrv1Ma0u1GJ1GdRe9LXXfn161wKaVyFsfqgqRGCg+
TtyMV+kuWo082F057uZa2EBLSTOFCfu4Nyl+j2ZGXtsob+PLBruHyZL2boKL
+yVjePjhRW1Rqy8icBuXCEOvGJwzLfT4lQTuF/xy6+EaKdggV1CgVAZ97pNb
OnJl4Qlrgeg0edy3RoZfNU4B88kMfBPhSnBNylqefGt4YsuCUUcwLDNQc/PQ
Y9g/M/rn0hL8fw14nj4=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{1, 100}, {-1.4210854715202004`*^-12, 0.}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5893121676725874`*^9, 3.589312222149703*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.589312374640425*^9, 3.589312424586282*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.589312396806693*^9, 3.589312422227147*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.5893124233052087`*^9, 3.5893124233132095`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Fa3", "[", 
   RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    RowBox[{"(", 
     RowBox[{"-", "1"}], ")"}], "^", "a"}], 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Gamma", "[", 
       RowBox[{"a", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"1", "-", "s"}], ")"}]}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "s"}], ")"}], 
      RowBox[{"-", "a"}]]}], 
    RowBox[{"Gamma", "[", "a", "]"}]]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fa3b", "[", 
   RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"Abs", "[", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Gamma", "[", 
       RowBox[{"a", ",", "0", ",", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"1", "-", "s"}], ")"}]}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "-", "s"}], ")"}], 
      RowBox[{"-", "a"}]]}], 
    RowBox[{"Gamma", "[", "a", "]"}]], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Fa3c", "[", 
   RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Gamma", "[", 
      RowBox[{"a", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", "s"}], ")"}]}], " ", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "s"}], ")"}], 
     RowBox[{"-", "a"}]]}], 
   RowBox[{"Gamma", "[", "a", "]"}]]}]}], "Input",
 CellChangeTimes->{{3.5893184668508797`*^9, 3.5893184736972713`*^9}, {
  3.5893189781671257`*^9, 3.589318982370366*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Fa3", "[", 
   RowBox[{"100", ",", "2.25", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.589318475935399*^9, 3.5893185156396704`*^9}}],

Cell[BoxData[
 RowBox[{"1.7053025658242404`*^-13", "+", 
  RowBox[{"445.72142185441305`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.5893184854549437`*^9, 3.589318515926687*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Fa3b", "[", 
   RowBox[{"100", ",", "3", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5893184941114388`*^9, 3.5893185284794044`*^9}}],

Cell[BoxData["698.8626034968706`"], "Output",
 CellChangeTimes->{{3.5893184944054556`*^9, 3.5893185287194185`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Fa3b", "[", 
        RowBox[{"100", ",", "n", ",", "aa"}], "]"}], "-", "1"}], ")"}], "/", 
     "n"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"-", "1"}], ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.589318533941717*^9, 3.5893185590231514`*^9}, {
  3.5893186050637856`*^9, 3.589318743533705*^9}, {3.5893188492387514`*^9, 
  3.589318952164638*^9}, {3.589318986013574*^9, 3.5893189861085796`*^9}, {
  3.5893198473148375`*^9, 3.589319865138857*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
RJw9a2Zpn4W6CvxYRUQOgv1mjFqx1XNUMqwc4w8+Asr3XovxmKWj3wf0GF88
1gJe81rO4ehU9Pq8p9ybZi2ovcY3+OT6YzRgNffk6m8tQHLPvbL1TULj5rev
ntmvDWJfKoKF3O6hHJlyjzfsteEBp/DD7LzbKCGjOa8mWhsywj8UHpn3RS8d
js1q/6kNh7qZs/1XblG1x60v4sp0oEdbLWdCJZtqmh0dsiYFUDOtN3ftXA61
XHE39pkKkJ1oqcj/6BWVYDZl0O0IcGXGu1xnu5Aa2abLtjsJIL715KjpWBn1
bGN0zwirLqgHxv/MKqihLsUErxxf0AXsfESEnGQTtTG+FhK7jwLbt2vtCw69
VNVBb92uSSN42TDMken6g2rvKM3oTbWAjvRh20yDOerKML7tZsQpuNb+7SMv
wzL1jYyOeZWII5w4U695iH+demSXjP+4jgtkBezaMg35Q611OtyfR3KDqmdO
HMYp/6is0othBm/cYTIv+ladFSOIlLrxbzN4wJlt/e6bjoxwvZSF4wTOA/rN
dsSOnWOE/H6aXKqAB7TN+5d2X2aElFXPMRLZA4qVnEbGHjPCkuN938VjHnC1
TOkA2zdGIImUfnZL9ADC296vx2hMkOs59SlD/CKotO472BvJDGVFp18YkTyh
95+3NdNdZkD9tb4EynlC4AHUVzmJGfhSqT1pqp5Qk3om724WM1THXdzzDTzB
0CddwuADM0TJ37nD7+QJpwWJ+DdsLGBBvtpvkuQJUc7So4/usMDa8lfNsb+e
sD/x8t8PCSzAfKNE1oCFBh+bPoiuPmEB9dja0HQcDfhUzp+yeMUCBzd/6x7d
RYNU5petHG10yxyZ0FSmQUmOzOurBFaYawk98MOFBsPLctGO8aywz5KjQvQd
DaI49occeswK5mktF0XraaC8j+y9K4MVyhY31vhaaBBpImHVU8oKbpV+8dO9
NJBNFxQ1/cwKlxv9gw/8pEHQ8b+5h/eygenf5EltES/gz+loEcljA2EZBSdB
xAtq3rW93ShjA5+m7gs4Py8439Nc0FfDBoPZDoy/A72g6t/7hIQONthpaBio
CvcCl1MV9pzLbNAikrzwJdELCpjSZ35rssO+08oHQyq9wNjpEmd/Izug9bra
jltewGvjevVuJzscYS5jUdzxgn5zyxnoZ4djv8XCfjMhcAFUWnJn2MEQF3Mn
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

     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 12}, {-11.376793782189614`, 238.9492024681969}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5893185459484043`*^9, 3.589318559326169*^9}, {
  3.5893186063118563`*^9, 3.5893187438017206`*^9}, {3.589318850564827*^9, 
  3.5893189524966574`*^9}, {3.589318986344593*^9, 3.5893189958181353`*^9}, {
  3.589319838235318*^9, 3.58931986536487*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"(", 
     RowBox[{"Re", "[", 
      RowBox[{"Fa3c", "[", 
       RowBox[{"100", ",", "n", ",", 
        RowBox[{"aa", "=", "0"}]}], "]"}], "]"}], ")"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"-", "1"}], ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5893190021334963`*^9, 3.589319056427602*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 12}, {-945.5403930157906, 929.7590563549765}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.589319050770278*^9, 3.5893190566666155`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"Fa3c", "[", 
   RowBox[{"100", ",", "2", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5893190043736243`*^9, 3.5893190153482523`*^9}}],

Cell[BoxData[
 RowBox[{"361.5170185988092`", "\[VeryThinSpace]", "-", 
  RowBox[{"4.415060128651785`*^-14", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{3.5893190156022663`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"(", 
     RowBox[{"Re", "[", 
      RowBox[{"Fa3", "[", 
       RowBox[{"100", ",", "n", ",", 
        RowBox[{"aa", "=", "0"}]}], "]"}], "]"}], ")"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"-", "1"}], ",", "12"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{3.5893190698673706`*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
2Hbm5UByFj1YIpQuPruxjO2/OlBDHNKFiZ4Lc6smy9js+VcNuhm60JtUNW3p
uIw1ElwMmx7pQoup0uSg/zK2usH09N5RXagSbxzVerWMKeI1GGHiNhQtqg19
y1jGZOh9iH0vb0NmYVvf+dJlTCuoNqLw0m1IdtPpyWtexnRmfGJSZ27Bc4Xe
DtHBZWwvtPtqfOgtcPs+3MJGtoLFGj4dzy+7CdV3I2302FawPyFBlIlaN4Fh
5iJbmvAKtmKde91gQgfiaJK1TyqsYENSN91ctrRhJOb6utuNFSyi1phy0FUb
joj8e1lrvILN3HSlkNrSgiJMv++mzwr27r3nufLxG/DvO6N78vMVzD2yIpBB
6wZc1i8T+J22gnE8mbN7VKYJHS58xi41K9g9SkGC/L46LOX1/k6gWsWs59+8
i01WhTMQFDzOsYqRdTjLR0ldgWetZ44eO7yKnbJMiMv7qgzMsy9tKpRWsY0Z
oTOE7Esg8d/N9eGAVUw2yOVclq08mL/8SXGYfg0je1jIQNtPhrL+80635l3D
oowe/fgTzY3W8k8oF4mvYQ1ncwTUbUWQz4/IYJWra9hcN+/gjLs0SqVTZ7MK
XcOaAy6xJZL+l32uTQI5zOuYDUQ0GTzXRAfpXfFNgXVsgdzA7e/rG8jylbgx
SK5j8gLn7F++00KbX4LSf6qvY0J2yVJUxTqIY1756FrkOiZ+9o6FRacu0rhX
I3eWuIHlsb6hKrpnhNJzWnxHRTYwInaBZWPMCO3sd7UGn9rAyt2mnfTMjFF6
6rRZn+4G9m39wxdaYxO0M8oc7ZaygQnYOq45XjRDGjLcAyJ5GxhNxvSIYo4Z
SvcRPtJSvYGpZpw3lhEwRxoiJyv4pzawuWC7m9uL5ijdTPdPxbFNrL/4clab
9X20U2Asa3FxE+MwPsalXXsfaVA/9GTR3MTkovpUaLktUfpNx6Yi402MjY5K
46e5Jdp558F5z2ETo+piqI/NtUQaGwFGtP6bWF+2c//ZTRKvHPUp5+UmRjln
oPf27AOk8TtNgax0E6tfLJszynuA0s9khWU0b2JzvAOjvlMP0E5gYY/m4CZW
0kxkZuC2Qhq9lYe2F0h594bsAUUrlC7WYP2GbAtLzqj8PvnACu24/CxWJW5h
0cd/XWALI/GNfZQrIlvYeGzje5WPJJ53Qj3h1BZm65oQ4lJF4h/MxyuqbGGt
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
aLjjc+FRLrUeAzfJyl5+qPjaozSTR8XL8GaJlp0gFGCUGGUKKKCULC0iNyQE
qY/28utfUsApU7lJ1h4HloVpcz8rKPBhvcBEmIYIBosr1ZJvKXBs+gg96SH1
XStjlRz8jgJ7oW0yt6RJgK/EiR9EVP09xXf4GJCBczNu27ieAivJR7Y/UL8D
jOpz7RkNFGAXOUJQo+L8q77MW/wTBQYnSOFJysLwg45b43IbBWyiCRw6z4Sh
5+QVlg8dFBDcHPXYPiwCjcmjI/RdFMgL0Yp/6SUCVZ91Ss72UKC39P7bs80i
8IIt/+r9Xgp8qhIqGOYThSwzJqOxrxRg3K94wtRDFNL+88OKDlDgWYx1z8sy
UYge7P3j/50CmeOTPfMrohAooFL3bpgC872RPMwyYnDBIevWgR8U0H9mX8l+
QQysn+5zOj1OATyHLt3ePTE4NeUqe2+S6q9I+V4fEgMNkVba0SkKyPcdVXk4
KQYyXpJfKLMU2P+u9e85WnEgltx+6jdPgY4rIXtMvOLAtbwW8PYXBbLbtRta
xMSBUcFGl/YPVU/h/3pvK4nDVnDtUcNlCthJJ8xdVheHxWrCzzsrFJhtkBiN
oK5/7CS8GVqjQO7HtIJKqv0XWIgj/aMAxvWmhYy4ODTFGJn7bFHryf7NuEmN
V9VUTq7coUBn/fdZ3AFxKDyIWd/bo/aDirxE9bQY/A/1Sy9L
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 12}, {-964.5638309405348, 945.1821366799865}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{3.5893190703153963`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Fa3b", "[", 
      RowBox[{"n", ",", "2", ",", "aa"}], "]"}], ",", 
     RowBox[{"Fa3b", "[", 
      RowBox[{"n", ",", "2.5", ",", "aa"}], "]"}], ",", 
     RowBox[{"Fa3b", "[", 
      RowBox[{"n", ",", "3", ",", "aa"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", 
     RowBox[{"-", "1"}], ",", "120"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5893199574131355`*^9, 3.589320002573718*^9}, {
  3.589320102578438*^9, 3.5893201153111663`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1:eJwVlnc41Y0bxo9IEpll5LUKZVNKyPPYlJCV9S0z4mQlIso6JWmQFCXq5X0R
MkopHJtQTkaiyIjsY71G1q/fH/d1//25rvv6XLeYs4+52xYSiZT/J/9vt2mt
tt+bdOqXt1OWy584sck/PHe5dZpa8/P7xwFrTlRcqri+mDZFfbSfO5FewYFr
m+rqczBBFaIQYmbD7JjIdThj7NoIdVbj3PM5LVaMPm85WbDZTS0LYLCJUWZE
M//P6blpXdSax83+AxZbUOiKiVUWdFIN+B+1K15iwOI4w4q0azSqiuwzhWNe
m7AufWv4MLRQ0azrxJF/1iFRg2Iif62B6sQu1r3SvQrXqXOotvGe+nJX+EG9
XcvwenCE+8DVIqp0hTbpIeMiNOwo+aCw9oz6nGmGKyx9HsaDX3w+WqgGIgHH
uoQ86XDVPXialykDSIaGNhupv+DePcPMPZHFEJEgrnpTZwicL1i2y24ph3on
nTkZpn4QlCggiWjVgN+5xOWzvT0QyVPyUIqhEeS4BFhynn6BCYYyecWqFlCj
x26qc7WD9HK/85NKGrxfOBytykGDM3SX/HTRdmhz82uuXWuChJGRlYzwTsh6
O3Z318N6qO89r5fd3wWVOoapyrRqWO2YvJeHPbCUvhR8TpwKii0+3wvTv8Nr
p744s7ul4FozJ1VC+gEnliKnuhtfgXHvu6NEQT/oHXigXPC6AEZsQs+e7R+A
udp/XbLCcyC84xjFiXMIKq838sXlZoCg2WaOC/6E+WcBg09S0+BVcyXNzXcY
Pur1vtyW9BBMDCIX3dNHYFHzRlsORzyMVusIedJ+ATWW+jij9AZEaW7VJpPG
INx4vUPI9BoIv6t391YcB/9Ci5HmIxfhrUrMbV/HCXjl+90nXNUNzAuNiv3v
TUJQWoPFfK0FTMru6A6onILfdPaEKpoaXM9q2QicmYaoL14fPDg5gZPbIEGD
cwZYOC1jPOn3NXtbpTKPZc1AvOxpKVNXQci5zfJWE2fheBXnjzk5hKATY03w
dRb8u8IU+5csQXd7Uy/6zoGBVqR2fr4rcDXkzGixzIOy7Vcho2g/6Iu+xajz
ZxdotWhyaCIEXmiTd+uqLoD+aAPrpmUUXCadPKBHW4D+ju2OguRY0K+Q09D3
+A9mX4REiDrHA0/oTlMD0iIwt943JSsnQWyOcixX5iLcD8qQ1ZN6Alu6reu+
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
     "]]}, 
   {Hue[0.1421359549995791, 0.6, 0.6], LineBox[CompressedData["
1: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
p4DfpwoyDsY9W93dJaFdlgNbTg0Z/we7c+Mc
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{-1, 120}, {0., 919.7055937992511}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{{3.5893199636424913`*^9, 3.589320002992742*^9}, {
  3.58932010296246*^9, 3.5893201155791817`*^9}}]
}, Open  ]]
},
WindowSize->{1152, 867},
WindowMargins->{{18, Automatic}, {Automatic, 40}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[557, 20, 644, 22, 50, "Input"],
Cell[CellGroupData[{
Cell[1226, 46, 212, 4, 31, "Input"],
Cell[1441, 52, 138, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1616, 60, 157, 3, 31, "Input"],
Cell[1776, 65, 141, 3, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1954, 73, 178, 4, 31, "Input"],
Cell[2135, 79, 206, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2378, 91, 174, 4, 31, "Input"],
Cell[2555, 97, 206, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2798, 109, 176, 4, 31, "Input"],
Cell[2977, 115, 232, 7, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3246, 127, 201, 5, 31, "Input"],
Cell[3450, 134, 233, 8, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3720, 147, 181, 4, 31, "Input"],
Cell[3904, 153, 173, 6, 37, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4114, 164, 155, 3, 31, "Input"],
Cell[4272, 169, 185, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4494, 179, 178, 4, 31, "Input"],
Cell[4675, 185, 260, 8, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4972, 198, 504, 13, 31, "Input"],
Cell[5479, 213, 537, 11, 40, "Message"],
Cell[6019, 226, 567, 11, 20, "Message"],
Cell[6589, 239, 541, 11, 41, "Message"],
Cell[7133, 252, 567, 11, 20, "Message"],
Cell[7703, 265, 541, 11, 41, "Message"],
Cell[8247, 278, 620, 12, 20, "Message"],
Cell[8870, 292, 567, 11, 20, "Message"],
Cell[9440, 305, 624, 12, 20, "Message"],
Cell[10067, 319, 14149, 450, 337, "Output"]
}, Open  ]],
Cell[24231, 772, 96, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[24352, 777, 318, 8, 31, "Input"],
Cell[24673, 787, 377, 12, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25087, 804, 315, 9, 31, "Input"],
Cell[25405, 815, 177, 5, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[25619, 825, 680, 20, 31, "Input"],
Cell[26302, 847, 481, 9, 20, "Message"],
Cell[26786, 858, 481, 9, 20, "Message"],
Cell[27270, 869, 2906, 99, 195, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30213, 973, 629, 19, 31, "Input"],
Cell[30845, 994, 9135, 310, 247, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[40017, 1309, 230, 6, 31, "Input"],
Cell[40250, 1317, 136, 3, 30, "Output"]
}, Open  ]],
Cell[40401, 1323, 711, 22, 31, "Input"],
Cell[41115, 1347, 460, 11, 33, "Input"],
Cell[CellGroupData[{
Cell[41600, 1362, 821, 23, 31, "Input"],
Cell[42424, 1387, 31075, 516, 223, "Output"]
}, Open  ]],
Cell[73514, 1906, 96, 1, 31, "Input"],
Cell[73613, 1909, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[73732, 1914, 257, 7, 31, "Input"],
Cell[73992, 1923, 208, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74237, 1931, 162, 3, 31, "Input"],
Cell[74402, 1936, 112, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[74551, 1942, 490, 14, 31, "Input"],
Cell[75044, 1958, 208, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75289, 1966, 278, 7, 31, "Input"],
Cell[75570, 1975, 206, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[75813, 1983, 305, 8, 31, "Input"],
Cell[76121, 1993, 186, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[76344, 2001, 760, 25, 31, "Input"],
Cell[77107, 2028, 6968, 122, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[84112, 2155, 894, 28, 50, "Input"],
Cell[85009, 2185, 444, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85490, 2203, 312, 7, 31, "Input"],
Cell[85805, 2212, 211, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86053, 2221, 779, 26, 31, "Input"],
Cell[86835, 2249, 184, 4, 30, "Output"]
}, Open  ]],
Cell[87034, 2256, 938, 32, 52, "Input"],
Cell[CellGroupData[{
Cell[87997, 2292, 304, 7, 31, "Input"],
Cell[88304, 2301, 212, 4, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88553, 2310, 361, 10, 31, "Input"],
Cell[88917, 2322, 190, 4, 30, "Output"]
}, Open  ]],
Cell[89122, 2329, 146, 2, 31, "Input"],
Cell[89271, 2333, 92, 1, 31, "Input"],
Cell[89366, 2336, 94, 1, 31, "Input"],
Cell[89463, 2339, 93, 1, 31, "Input"],
Cell[89559, 2342, 94, 1, 31, "Input"],
Cell[89656, 2345, 94, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[89775, 2350, 641, 16, 31, "Input"],
Cell[90419, 2368, 216, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90672, 2376, 587, 16, 31, "Input"],
Cell[91262, 2394, 77, 1, 30, "Output"]
}, Open  ]],
Cell[91354, 2398, 92, 1, 31, "Input"],
Cell[CellGroupData[{
Cell[91471, 2403, 2034, 58, 92, "Input"],
Cell[93508, 2463, 239, 6, 33, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93784, 2474, 433, 10, 31, "Input"],
Cell[94220, 2486, 546, 12, 20, "Message"],
Cell[94769, 2500, 548, 12, 20, "Message"],
Cell[95320, 2514, 568, 11, 20, "Message"],
Cell[95891, 2527, 568, 11, 20, "Message"],
Cell[96462, 2540, 1599, 26, 48, "Message"],
Cell[98064, 2568, 582, 12, 20, "Message"],
Cell[98649, 2582, 570, 11, 20, "Message"],
Cell[99222, 2595, 586, 12, 20, "Message"],
Cell[99811, 2609, 564, 11, 20, "Message"],
Cell[100378, 2622, 564, 11, 20, "Message"],
Cell[100945, 2635, 2470, 39, 104, "Message"],
Cell[103418, 2676, 2470, 39, 104, "Message"],
Cell[105891, 2717, 2470, 39, 104, "Message"],
Cell[108364, 2758, 585, 12, 20, "Message"],
Cell[108952, 2772, 2744, 43, 146, "Message"],
Cell[111699, 2817, 2744, 43, 146, "Message"],
Cell[114446, 2862, 2744, 43, 146, "Message"],
Cell[117193, 2907, 582, 12, 20, "Message"],
Cell[117778, 2921, 618, 13, 20, "Message"],
Cell[118399, 2936, 940, 16, 48, "Message"],
Cell[119342, 2954, 585, 12, 20, "Message"],
Cell[119930, 2968, 545, 11, 20, "Message"],
Cell[120478, 2981, 545, 11, 20, "Message"],
Cell[121026, 2994, 623, 12, 20, "Message"],
Cell[121652, 3008, 587, 12, 20, "Message"],
Cell[122242, 3022, 1925, 31, 76, "Message"],
Cell[124170, 3055, 1927, 31, 76, "Message"],
Cell[126100, 3088, 553, 11, 20, "Message"],
Cell[126656, 3101, 553, 11, 20, "Message"],
Cell[127212, 3114, 553, 11, 20, "Message"],
Cell[127768, 3127, 553, 11, 20, "Message"],
Cell[128324, 3140, 551, 11, 20, "Message"],
Cell[128878, 3153, 583, 12, 20, "Message"],
Cell[129464, 3167, 553, 11, 20, "Message"],
Cell[130020, 3180, 583, 12, 20, "Message"],
Cell[130606, 3194, 19132, 294, 231, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[149775, 3493, 178, 4, 31, "Input"],
Cell[149956, 3499, 477, 10, 20, "Message"],
Cell[150436, 3511, 84, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[150557, 3517, 775, 26, 50, "Input"],
Cell[151335, 3545, 475, 10, 20, "Message"],
Cell[151813, 3557, 106, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[151956, 3563, 126, 2, 31, "Input"],
Cell[152085, 3567, 84, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[152206, 3573, 310, 8, 31, "Input"],
Cell[152519, 3583, 14412, 242, 205, "Output"]
}, Open  ]],
Cell[166946, 3828, 92, 1, 31, "Input"],
Cell[167041, 3831, 92, 1, 31, "Input"],
Cell[167136, 3834, 96, 1, 31, InheritFromParent],
Cell[167235, 3837, 1898, 61, 128, "Input"],
Cell[CellGroupData[{
Cell[169158, 3902, 191, 4, 31, "Input"],
Cell[169352, 3908, 194, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169583, 3916, 191, 4, 31, "Input"],
Cell[169777, 3922, 115, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[169929, 3928, 616, 16, 31, "Input"],
Cell[170548, 3946, 9783, 166, 239, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[180368, 4117, 415, 12, 31, "Input"],
Cell[180786, 4131, 30922, 512, 238, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211745, 4648, 191, 4, 31, "Input"],
Cell[211939, 4654, 188, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[212164, 4662, 390, 12, 31, "Input"],
Cell[212557, 4676, 40166, 664, 243, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[252760, 5345, 558, 15, 31, "Input"],
Cell[253321, 5362, 11801, 201, 243, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
