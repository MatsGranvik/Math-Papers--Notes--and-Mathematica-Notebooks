(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 8.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[    117185,       3028]
NotebookOptionsPosition[    111122,       2822]
NotebookOutlinePosition[    111468,       2837]
CellTagsIndexPosition[    111425,       2834]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Integrate", "[", " ", 
   RowBox[{"j", ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.588897517653866*^9, 3.5888975338027897`*^9}, {
  3.588897623305909*^9, 3.588897625306023*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], "+", 
  FractionBox[
   SuperscriptBox["n", "2"], "2"]}]], "Output",
 CellChangeTimes->{{3.5888975278484488`*^9, 3.5888975343888226`*^9}, 
   3.588897625642042*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{"1", ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"n", "/", "j"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.588897536223928*^9, 3.588897549472686*^9}, {
  3.5888976008726254`*^9, 3.588897602763734*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{"1", "-", "n", "+", 
    RowBox[{"n", " ", 
     RowBox[{"Log", "[", "n", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.5888975514167967`*^9, 3.5888976037857924`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"j", " ", "k"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"n", "/", "j"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.588897558018174*^9, 3.5888975650835786`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "4"], "-", 
    FractionBox[
     SuperscriptBox["n", "2"], "4"], "+", 
    RowBox[{
     FractionBox["1", "2"], " ", 
     SuperscriptBox["n", "2"], " ", 
     RowBox[{"Log", "[", "n", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.58889755986128*^9, 3.5888975660816355`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"j", " ", "k", " ", "l"}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"n", "/", "j"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "1", ",", 
      RowBox[{"n", "/", 
       RowBox[{"(", 
        RowBox[{"j", " ", "k"}], " ", ")"}]}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5888975772192726`*^9, 3.588897609027092*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "8"]}], "+", 
    FractionBox[
     SuperscriptBox["n", "2"], "8"], "-", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox["n", "2"], " ", 
     RowBox[{"Log", "[", "n", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "4"], " ", 
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{{3.588897601674671*^9, 3.5888976183206234`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"j", " ", "k", " ", "l", " ", "m"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"n", "/", "j"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", 
       RowBox[{"n", "/", 
        RowBox[{"(", 
         RowBox[{"j", " ", "k"}], " ", ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", 
       RowBox[{"n", "/", 
        RowBox[{"(", 
         RowBox[{"j", " ", "k", " ", "l"}], " ", ")"}]}]}], "}"}]}], "]"}], 
   "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5888976621191287`*^9, 3.5888976733717723`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "16"], "-", 
    FractionBox[
     SuperscriptBox["n", "2"], "16"], "+", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     SuperscriptBox["n", "2"], " ", 
     RowBox[{"Log", "[", "n", "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "8"], " ", 
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "2"]}], "+", 
    RowBox[{
     FractionBox["1", "12"], " ", 
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "3"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.5888976936869345`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{"j", " ", "k", " ", "l", " ", "m", " ", "o"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"n", "/", "j"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", 
       RowBox[{"n", "/", 
        RowBox[{"(", 
         RowBox[{"j", " ", "k"}], " ", ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", 
       RowBox[{"n", "/", 
        RowBox[{"(", 
         RowBox[{"j", " ", "k", " ", "l"}], " ", ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"o", ",", "1", ",", 
       RowBox[{"n", "/", 
        RowBox[{"(", 
         RowBox[{"j", " ", "k", " ", "l", " ", "m"}], " ", ")"}]}]}], "}"}]}],
     "]"}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.588897746832974*^9, 3.5888977823320045`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "32"]}], "+", 
    FractionBox[
     SuperscriptBox["n", "2"], "32"], "-", 
    RowBox[{
     FractionBox["1", "16"], " ", 
     SuperscriptBox["n", "2"], " ", 
     RowBox[{"Log", "[", "n", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "16"], " ", 
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "2"]}], "-", 
    RowBox[{
     FractionBox["1", "24"], " ", 
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "3"]}], "+", 
    RowBox[{
     FractionBox["1", "48"], " ", 
     SuperscriptBox["n", "2"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "4"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.5888978618195505`*^9}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], "+", 
  FractionBox[
   SuperscriptBox["n", "2"], "2"]}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["1", "4"], "-", 
  FractionBox[
   SuperscriptBox["n", "2"], "4"], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", 
   SuperscriptBox["n", "2"], " ", 
   RowBox[{"Log", "[", "n", "]"}]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "8"]}], "+", 
  FractionBox[
   SuperscriptBox["n", "2"], "8"], "-", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["n", "2"], " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "4"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  FractionBox["1", "16"], "-", 
  FractionBox[
   SuperscriptBox["n", "2"], "16"], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SuperscriptBox["n", "2"], " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "3"]}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "32"]}], "+", 
  FractionBox[
   SuperscriptBox["n", "2"], "32"], "-", 
  RowBox[{
   FractionBox["1", "16"], " ", 
   SuperscriptBox["n", "2"], " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "16"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}], "-", 
  RowBox[{
   FractionBox["1", "24"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "3"]}], "+", 
  RowBox[{
   FractionBox["1", "48"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "4"]}]}]}], "Input",
 CellChangeTimes->{{3.58889775760359*^9, 3.5888977654760404`*^9}, {
  3.588897894775436*^9, 3.5888978951454573`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.588897749631134*^9, 3.5888977496541357`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", "j_", "]"}], " ", ":=", " ", 
  RowBox[{
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"j", "+", "1"}], ")"}]}], 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "/", "2"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"j", "+", "1"}], ")"}]}]}], "+", " ", 
   RowBox[{"Sum", "[", " ", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"n", "^", "2"}], " ", "/", 
       RowBox[{"k", "!"}]}], 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"Log", "[", "n", "]"}], ")"}], "^", "k"}], " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"j", "-", "k"}], ")"}]}], " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"j", "-", "k", "+", "1"}], ")"}]}]}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"k", ",", "0", ",", "j"}], "}"}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.58889843771949*^9, 3.588898569921052*^9}, {
  3.588898659311165*^9, 3.5888986664115705`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", "0", "]"}]], "Input",
 CellChangeTimes->{{3.588898470836385*^9, 3.5888984716194296`*^9}, {
  3.5888985742032967`*^9, 3.5888985920593185`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "2"]}], "+", 
  FractionBox[
   SuperscriptBox["n", "2"], "2"]}]], "Output",
 CellChangeTimes->{{3.5888984718394423`*^9, 3.588898528000654*^9}, {
  3.5888985622086105`*^9, 3.5888985922933316`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f2", "[", "k_", "]"}], " ", ":=", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"k", "+", "1"}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "2"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"k", "+", "1"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{
        RowBox[{"n", "^", "2"}], "/", "2"}], " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", " ", "/", 
           RowBox[{"j", "!"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", 
             RowBox[{"Log", "[", "n", "]"}]}], ")"}], "^", "j"}], "  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", "2"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"k", "-", "j"}], ")"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "k"}], "}"}]}], "]"}]}]}], ")"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.588898671683872*^9, 3.5888986942111607`*^9}, {
  3.588898735594528*^9, 3.588898765677249*^9}, {3.58889880696461*^9, 
  3.588898811068845*^9}, {3.588982711146117*^9, 3.588982742172892*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f2", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.5888986730349493`*^9, 3.588898774585758*^9}, {
  3.5888988964077263`*^9, 3.5888988983038344`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "16"], "-", 
  FractionBox[
   SuperscriptBox["n", "2"], "16"], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SuperscriptBox["n", "2"], " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{{3.58889867514307*^9, 3.5888988119208937`*^9}, {
   3.5888988967637463`*^9, 3.5888988994759016`*^9}, 3.588982545158623*^9, 
   3.5889827472241807`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"Expand", "[", 
   RowBox[{"Integrate", "[", " ", 
    RowBox[{
     RowBox[{"j", "^", "2"}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "n"}], "}"}]}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.588982905941259*^9, 3.5889829098704834`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "3"]}], "+", 
  FractionBox[
   SuperscriptBox["n", "3"], "3"]}]], "Output",
 CellChangeTimes->{3.588982910278507*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"j", "^", "2"}], " ", 
     RowBox[{"k", "^", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"n", "/", "j"}]}], "}"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.5889829210391226`*^9, 3.588982925513378*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "9"], "-", 
    FractionBox[
     SuperscriptBox["n", "3"], "9"], "+", 
    RowBox[{
     FractionBox["1", "3"], " ", 
     SuperscriptBox["n", "3"], " ", 
     RowBox[{"Log", "[", "n", "]"}]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.588982927259478*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"j", "^", "2"}], " ", 
     RowBox[{"k", "^", "2"}], " ", 
     RowBox[{"l", "^", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"n", "/", "j"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "1", ",", 
      RowBox[{"n", "/", 
       RowBox[{"(", 
        RowBox[{"j", " ", "k"}], " ", ")"}]}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.588982960839399*^9, 3.5889829652966537`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"-", 
     FractionBox["1", "27"]}], "+", 
    FractionBox[
     SuperscriptBox["n", "3"], "27"], "-", 
    RowBox[{
     FractionBox["1", "9"], " ", 
     SuperscriptBox["n", "3"], " ", 
     RowBox[{"Log", "[", "n", "]"}]}], "+", 
    RowBox[{
     FractionBox["1", "6"], " ", 
     SuperscriptBox["n", "3"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "2"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.5889829742791677`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Expand", "[", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"j", "^", "2"}], " ", 
     RowBox[{"k", "^", "2"}], " ", 
     RowBox[{"l", "^", "2"}], " ", 
     RowBox[{"m", "^", "2"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", 
      RowBox[{"n", "/", "j"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"l", ",", "1", ",", 
      RowBox[{"n", "/", 
       RowBox[{"(", 
        RowBox[{"j", " ", "k"}], " ", ")"}]}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"m", ",", "1", ",", 
      RowBox[{"n", "/", 
       RowBox[{"(", 
        RowBox[{"j", " ", "k", " ", "l"}], " ", ")"}]}]}], "}"}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.5889829743131695`*^9, 3.5889829774573493`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   RowBox[{
    FractionBox["1", "81"], "-", 
    FractionBox[
     SuperscriptBox["n", "3"], "81"], "+", 
    RowBox[{
     FractionBox["1", "27"], " ", 
     SuperscriptBox["n", "3"], " ", 
     RowBox[{"Log", "[", "n", "]"}]}], "-", 
    RowBox[{
     FractionBox["1", "18"], " ", 
     SuperscriptBox["n", "3"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "2"]}], "+", 
    RowBox[{
     FractionBox["1", "18"], " ", 
     SuperscriptBox["n", "3"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], "3"]}]}], ",", 
   RowBox[{
    RowBox[{
     RowBox[{"Re", "[", "n", "]"}], "\[GreaterEqual]", "0"}], "||", 
    RowBox[{"n", "\[NotElement]", "Reals"}]}]}], "]"}]], "Output",
 CellChangeTimes->{3.58898300351484*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Expand", "[", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"j", "^", "2"}], " ", 
      RowBox[{"k", "^", "2"}], " ", 
      RowBox[{"l", "^", "2"}], " ", 
      RowBox[{"m", "^", "2"}], " ", 
      RowBox[{"o", "^", "2"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"j", ",", "1", ",", "n"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"k", ",", "1", ",", 
       RowBox[{"n", "/", "j"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"l", ",", "1", ",", 
       RowBox[{"n", "/", 
        RowBox[{"(", 
         RowBox[{"j", " ", "k"}], " ", ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"m", ",", "1", ",", 
       RowBox[{"n", "/", 
        RowBox[{"(", 
         RowBox[{"j", " ", "k", " ", "l"}], " ", ")"}]}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"o", ",", "1", ",", 
       RowBox[{"n", "/", 
        RowBox[{"(", 
         RowBox[{"j", " ", "k", " ", "l", " ", "m"}], " ", ")"}]}]}], "}"}]}],
     "]"}], "]"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5889829884549785`*^9, 3.588982992719222*^9}}],

Cell[BoxData["$Aborted"], "Output",
 CellChangeTimes->{3.5889831511802855`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "3"]}], "+", 
  FractionBox[
   SuperscriptBox["n", "3"], "3"]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "9"], "-", 
  FractionBox[
   SuperscriptBox["n", "3"], "9"], "+", 
  RowBox[{
   FractionBox["1", "3"], " ", 
   SuperscriptBox["n", "3"], " ", 
   RowBox[{"Log", "[", "n", "]"}]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", "27"]}], "+", 
  FractionBox[
   SuperscriptBox["n", "3"], "27"], "-", 
  RowBox[{
   FractionBox["1", "9"], " ", 
   SuperscriptBox["n", "3"], " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", 
   SuperscriptBox["n", "3"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "81"], "-", 
  FractionBox[
   SuperscriptBox["n", "3"], "81"], "+", 
  RowBox[{
   FractionBox["1", "27"], " ", 
   SuperscriptBox["n", "3"], " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "18"], " ", 
   SuperscriptBox["n", "3"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "18"], " ", 
   SuperscriptBox["n", "3"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "3"]}]}]], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"f3", "[", "k_", "]"}], " ", ":=", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"k", "+", "1"}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", "3"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"k", "+", "1"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{
        RowBox[{"n", "^", "3"}], "/", "3"}], " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", " ", "/", 
           RowBox[{"j", "!"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", 
             RowBox[{"Log", "[", "n", "]"}]}], ")"}], "^", "j"}], "  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", "3"}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"k", "-", "j"}], ")"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "k"}], "}"}]}], "]"}]}]}], ")"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5889830518636055`*^9, 3.588983083927439*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f3", "[", "3", "]"}]], "Input",
 CellChangeTimes->{{3.5889831116470246`*^9, 3.5889831151272235`*^9}, {
  3.5889831563105793`*^9, 3.5889831674222145`*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "81"], "-", 
  FractionBox[
   SuperscriptBox["n", "3"], "81"], "+", 
  RowBox[{
   FractionBox["1", "27"], " ", 
   SuperscriptBox["n", "3"], " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "18"], " ", 
   SuperscriptBox["n", "3"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "18"], " ", 
   SuperscriptBox["n", "3"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{{3.5889831585877094`*^9, 3.588983167763234*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"fs", "[", 
   RowBox[{"n_", ",", "k_", ",", "s_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Expand", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"(", 
      RowBox[{"-", "1"}], ")"}], "^", 
     RowBox[{"(", 
      RowBox[{"k", "+", "1"}], ")"}]}], 
    RowBox[{"(", 
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"1", "/", 
         RowBox[{"(", 
          RowBox[{"1", "-", "s"}], ")"}]}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"k", "+", "1"}], ")"}]}], "-", 
      RowBox[{
       RowBox[{
        RowBox[{"n", "^", 
         RowBox[{"(", 
          RowBox[{"1", "-", "s"}], ")"}]}], "/", 
        RowBox[{"(", 
         RowBox[{"1", "-", "s"}], ")"}]}], " ", 
       RowBox[{"Sum", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"1", " ", "/", 
           RowBox[{"j", "!"}]}], 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"-", 
             RowBox[{"Log", "[", "n", "]"}]}], ")"}], "^", "j"}], "  ", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"1", "/", 
             RowBox[{"(", 
              RowBox[{"1", "-", "s"}], ")"}]}], ")"}], "^", 
           RowBox[{"(", 
            RowBox[{"k", "-", "j"}], ")"}]}]}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"j", ",", "0", ",", "k"}], "}"}]}], "]"}]}]}], ")"}]}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.5889831762607203`*^9, 3.5889831984889917`*^9}, {
  3.588983333288702*^9, 3.588983333978741*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs", "[", 
  RowBox[{"n", ",", "3", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.5889832009481325`*^9, 3.58898323272495*^9}, 
   3.5889832791636057`*^9, {3.5889833583801365`*^9, 3.588983358581148*^9}, {
   3.588983551205166*^9, 3.5889835516951942`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", "n", "+", 
  RowBox[{"n", " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{{3.588983205643401*^9, 3.5889832329809647`*^9}, 
   3.588983302233926*^9, 3.588983358823162*^9, 3.588983552023213*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ps", "[", 
   RowBox[{"n_", ",", "s_"}], "]"}], ":=", " ", 
  RowBox[{"Sum", "[", " ", 
   RowBox[{
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"(", 
        RowBox[{"-", "1"}], ")"}], "^", 
       RowBox[{"(", 
        RowBox[{"k", "+", "1"}], ")"}]}], "/", "k"}], " ", 
     RowBox[{"N", "[", 
      RowBox[{"fs", "[", 
       RowBox[{"n", ",", "k", ",", "s"}], "]"}], "]"}]}], ",", 
    RowBox[{"{", 
     RowBox[{"k", ",", "1", ",", "100"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.5889833133165593`*^9, 3.588983327085347*^9}, {
  3.588983360480257*^9, 3.5889833878178205`*^9}, {3.588983459701932*^9, 
  3.5889834648072243`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"fs", "[", 
   RowBox[{"n", ",", "4", ",", 
    RowBox[{"ZetaZero", "[", "1", "]"}]}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5889834131152678`*^9, 3.5889834387477336`*^9}, {
  3.589020919524915*^9, 3.589020942230214*^9}, {3.589020987071779*^9, 
  3.589021026765049*^9}, {3.589021363427305*^9, 3.589021366172462*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", 
   FractionBox["1", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"ZetaZero", "[", "1", "]"}]}], ")"}], "5"]]}], "+", 
  FractionBox[
   SuperscriptBox["n", 
    RowBox[{"1", "-", 
     RowBox[{"ZetaZero", "[", "1", "]"}]}]], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"ZetaZero", "[", "1", "]"}]}], ")"}], "5"]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["n", 
     RowBox[{"1", "-", 
      RowBox[{"ZetaZero", "[", "1", "]"}]}]], " ", 
    RowBox[{"Log", "[", "n", "]"}]}], 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"ZetaZero", "[", "1", "]"}]}], ")"}], "4"]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["n", 
     RowBox[{"1", "-", 
      RowBox[{"ZetaZero", "[", "1", "]"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "n", "]"}], "2"]}], 
   RowBox[{"2", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"ZetaZero", "[", "1", "]"}]}], ")"}], "3"]}]], "-", 
  FractionBox[
   RowBox[{
    SuperscriptBox["n", 
     RowBox[{"1", "-", 
      RowBox[{"ZetaZero", "[", "1", "]"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "n", "]"}], "3"]}], 
   RowBox[{"6", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"ZetaZero", "[", "1", "]"}]}], ")"}], "2"]}]], "+", 
  FractionBox[
   RowBox[{
    SuperscriptBox["n", 
     RowBox[{"1", "-", 
      RowBox[{"ZetaZero", "[", "1", "]"}]}]], " ", 
    SuperscriptBox[
     RowBox[{"Log", "[", "n", "]"}], "4"]}], 
   RowBox[{"24", " ", 
    RowBox[{"(", 
     RowBox[{"1", "-", 
      RowBox[{"ZetaZero", "[", "1", "]"}]}], ")"}]}]]}]], "Output",
 CellChangeTimes->{3.5890213664934807`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ee", "[", "n_", "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "0.0049864938890432945`"}], "+", 
     RowBox[{"0.00035322521742155925`", " ", "\[ImaginaryI]"}]}], ")"}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.0049864938890432945`", "\[VeryThinSpace]", "-", 
      RowBox[{"0.00035322521742155925`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["n", 
     RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
      RowBox[{"14.134725141734695`", " ", "\[ImaginaryI]"}]}]]}], "+", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{"0.0024994944168615697`", "\[VeryThinSpace]", "+", 
      RowBox[{"0.07065933315127745`", " ", "\[ImaginaryI]"}]}], ")"}], " ", 
    SuperscriptBox["n", 
     RowBox[{"0.5`", "\[VeryThinSpace]", "-", 
      RowBox[{"14.134725141734695`", " ", "\[ImaginaryI]"}]}]], " ", 
    RowBox[{"Log", "[", "n", "]"}]}]}]}]], "Input",
 CellChangeTimes->{{3.589021039393771*^9, 3.589021042598955*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ps", "[", 
  RowBox[{"100", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.588983375478115*^9, 3.5889834080029755`*^9}, {
  3.5889835710443006`*^9, 3.588983586339175*^9}}],

Cell[BoxData["182.6007571275352`"], "Output",
 CellChangeTimes->{{3.588983378861308*^9, 3.58898340826499*^9}, {
  3.5889834618030524`*^9, 3.5889834668023386`*^9}, {3.588983572020356*^9, 
  3.5889835866721945`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"N", "[", 
   RowBox[{"ZetaZero", "[", "1", "]"}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.589021243979473*^9, 3.5890212522059436`*^9}}],

Cell[BoxData[
 RowBox[{"0.5`", "\[VeryThinSpace]", "+", 
  RowBox[{"14.134725141734695`", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.589021248572736*^9, 3.5890212525249615`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Re", "[", 
      RowBox[{"fs", "[", 
       RowBox[{"n", ",", 
        RowBox[{"cc", "=", "4"}], ",", 
        RowBox[{"dc", "=", 
         RowBox[{
          RowBox[{"1", "/", "2"}], "+", 
          RowBox[{"14.134725141734695`", " ", "I"}]}]}]}], "]"}], "]"}], ",", 
     RowBox[{"Im", "[", 
      RowBox[{"fs", "[", 
       RowBox[{"n", ",", "cc", ",", "dc"}], "]"}], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"n", ",", "1", ",", "600"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.589021047708247*^9, 3.589021282164657*^9}, {
  3.5890213191677732`*^9, 3.5890213414880505`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {Hue[0.67, 0.6, 0.6], LineBox[CompressedData["
1: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
dHhy5Mbc4nMS/m08NeK+jw7/A5N8Ook=
     "]]}, 
   {Hue[0.9060679774997897, 0.6, 0.6], LineBox[CompressedData["
1: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
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->True,
  AxesOrigin->{0, 0},
  PlotRange->{{1, 600}, {-98.98845804767238, 112.01380027244704`}},
  PlotRangeClipping->True,
  PlotRangePadding->{
    Scaled[0.02], 
    Scaled[0.02]}]], "Output",
 CellChangeTimes->{
  3.5890210617740517`*^9, 3.5890211000712423`*^9, {3.589021130336973*^9, 
   3.589021282616683*^9}, {3.589021320368842*^9, 3.589021341969078*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs", "[", 
  RowBox[{"n", ",", "4", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.5890213886587486`*^9, 3.589021403617604*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"-", "1"}], "+", "n", "-", 
  RowBox[{"n", " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "+", 
  RowBox[{
   FractionBox["1", "2"], " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}], "-", 
  RowBox[{
   FractionBox["1", "6"], " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "3"]}], "+", 
  RowBox[{
   FractionBox["1", "24"], " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "4"]}]}]], "Output",
 CellChangeTimes->{{3.5890213919339356`*^9, 3.5890214039196215`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"fs", "[", 
  RowBox[{"n", ",", "3", ",", "0"}], "]"}]], "Input",
 CellChangeTimes->{{3.5890217309523263`*^9, 3.5890217365666475`*^9}}],

Cell[BoxData[
 RowBox[{"1", "-", "n", "+", 
  RowBox[{"n", " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "2"], " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "6"], " ", "n", " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{3.5890217368686647`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"fs", "[", 
   RowBox[{"100", ",", "3", ",", "0"}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.589021551526064*^9, 3.5890215621706724`*^9}}],

Cell[BoxData["928.8802703379109`"], "Output",
 CellChangeTimes->{{3.589021558553466*^9, 3.589021562561695*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Gamma", "[", 
    RowBox[{"4", ",", "0", ",", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "100", "]"}]}]}], "]"}], "/", 
   RowBox[{"Gamma", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5890215673609695`*^9, 3.589021608535324*^9}}],

Cell[BoxData[
 RowBox[{"928.8802703379112`", "\[VeryThinSpace]", "-", 
  RowBox[{"3.4089768091839106`*^-13", " ", "\[ImaginaryI]"}]}]], "Output",
 CellChangeTimes->{{3.5890215850579815`*^9, 3.589021608829341*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"t", "^", 
       RowBox[{"(", 
        RowBox[{"4", "-", "1"}], ")"}]}], 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{"-", "t"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "100", "]"}]}]}], "}"}]}], "]"}], "/", 
   RowBox[{"Gamma", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5890216401371317`*^9, 3.5890216913780627`*^9}}],

Cell[BoxData["928.880270337911`"], "Output",
 CellChangeTimes->{{3.5890216670386705`*^9, 3.5890216917780857`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"fs", "[", 
    RowBox[{"n", ",", "3", ",", 
     RowBox[{"-", "1"}]}], "]"}], "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{{3.5890217433560357`*^9, 3.589021746814234*^9}}],

Cell[BoxData[
 RowBox[{
  FractionBox["1", "16"], "-", 
  FractionBox[
   SuperscriptBox["n", "2"], "16"], "+", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SuperscriptBox["n", "2"], " ", 
   RowBox[{"Log", "[", "n", "]"}]}], "-", 
  RowBox[{
   FractionBox["1", "8"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "2"]}], "+", 
  RowBox[{
   FractionBox["1", "12"], " ", 
   SuperscriptBox["n", "2"], " ", 
   SuperscriptBox[
    RowBox[{"Log", "[", "n", "]"}], "3"]}]}]], "Output",
 CellChangeTimes->{3.589021747210256*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"fs", "[", 
   RowBox[{"100", ",", "3", ",", 
    RowBox[{"-", "1"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.589021707360977*^9, 3.5890217078580055`*^9}}],

Cell[BoxData["60009.178371832204`"], "Output",
 CellChangeTimes->{3.5890217083870354`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"t", "^", 
       RowBox[{"(", 
        RowBox[{"4", "-", "1"}], ")"}]}], 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "2"}], "t"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "100", "]"}]}]}], "}"}]}], "]"}], "/", 
   RowBox[{"Gamma", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{3.589021767802434*^9}],

Cell[BoxData["60009.17837183219`"], "Output",
 CellChangeTimes->{3.589021768365466*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"fs", "[", 
   RowBox[{"100", ",", "3", ",", 
    RowBox[{"-", "2"}]}], "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.589021781040191*^9, 3.5890217859444714`*^9}}],

Cell[BoxData["4.405826191416594`*^6"], "Output",
 CellChangeTimes->{{3.5890217816232243`*^9, 3.58902178626649*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"t", "^", 
       RowBox[{"(", 
        RowBox[{"4", "-", "1"}], ")"}]}], 
      RowBox[{"E", "^", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "t"}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"t", ",", "0", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "100", "]"}]}]}], "}"}]}], "]"}], "/", 
   RowBox[{"Gamma", "[", "4", "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5890217916357975`*^9, 3.589021791719802*^9}}],

Cell[BoxData["4.405826191416594`*^6"], "Output",
 CellChangeTimes->{3.5890217927038584`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"a", "-", "1"}], ")"}]}], 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{"-", "t"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "}"}]}], "]"}], "/", 
  RowBox[{"Gamma", "[", "a", "]"}]}]], "Input",
 CellChangeTimes->{{3.5890218139720745`*^9, 3.5890218248246956`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"Gamma", "[", "a", "]"}], "-", 
     RowBox[{"Gamma", "[", 
      RowBox[{"a", ",", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], 
    RowBox[{"Gamma", "[", "a", "]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.5890218225405645`*^9, 3.5890218268888135`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"a", "-", "1"}], ")"}]}], 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "2"}], "t"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "}"}]}], "]"}], "/", 
  RowBox[{"Gamma", "[", "a", "]"}]}]], "Input",
 CellChangeTimes->{3.5890218403535833`*^9}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["2", 
      RowBox[{"-", "a"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", "a", "]"}], "-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"a", ",", 
         RowBox[{
          RowBox[{"-", "2"}], " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}], 
    RowBox[{"Gamma", "[", "a", "]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.589021841721662*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"a", "-", "1"}], ")"}]}], 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "3"}], "t"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "}"}]}], "]"}], "/", 
  RowBox[{"Gamma", "[", "a", "]"}]}]], "Input",
 CellChangeTimes->{{3.5890218637369213`*^9, 3.589021864151945*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     SuperscriptBox["3", 
      RowBox[{"-", "a"}]], " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", "a", "]"}], "-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"a", ",", 
         RowBox[{
          RowBox[{"-", "3"}], " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}]}], 
    RowBox[{"Gamma", "[", "a", "]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.589021865222006*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"a", "-", "1"}], ")"}]}], 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{"1", "t"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "}"}]}], "]"}], "/", 
  RowBox[{"Gamma", "[", "a", "]"}]}]], "Input",
 CellChangeTimes->{{3.589021876782667*^9, 3.5890218843951025`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", "a", "]"}], "-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"a", ",", 
         RowBox[{"Log", "[", "n", "]"}]}], "]"}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
     SuperscriptBox[
      RowBox[{"Log", "[", "n", "]"}], 
      RowBox[{"-", "a"}]]}], 
    RowBox[{"Gamma", "[", "a", "]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.589021879814841*^9, 3.5890218860942*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     RowBox[{"t", "^", 
      RowBox[{"(", 
       RowBox[{"a", "-", "1"}], ")"}]}], 
     RowBox[{"E", "^", 
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "s"}], " ", "t"}], ")"}]}]}], ",", 
    RowBox[{"{", 
     RowBox[{"t", ",", "0", ",", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "}"}]}], "]"}], "/", 
  RowBox[{"Gamma", "[", "a", "]"}]}]], "Input",
 CellChangeTimes->{{3.5890284427122173`*^9, 3.5890284429782324`*^9}}],

Cell[BoxData[
 RowBox[{"ConditionalExpression", "[", 
  RowBox[{
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", "a", "]"}], "-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"a", ",", 
         RowBox[{
          RowBox[{"-", "s"}], " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", "s"}], " ", 
        RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
      RowBox[{"-", "a"}]]}], 
    RowBox[{"Gamma", "[", "a", "]"}]], ",", 
   RowBox[{
    RowBox[{"Re", "[", "a", "]"}], ">", "0"}]}], "]"}]], "Output",
 CellChangeTimes->{3.5890284453803697`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "s"}], " ", 
      RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
    RowBox[{"-", "a"}]]}], "/.", 
  RowBox[{"s", "\[Rule]", 
   RowBox[{
    RowBox[{"-", "2"}], "+", "I"}]}]}]], "Input",
 CellChangeTimes->{{3.589030338029623*^9, 3.589030391018654*^9}}],

Cell[BoxData[
 RowBox[{
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"-", 
     RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"2", "-", "\[ImaginaryI]"}], ")"}], " ", 
     RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
   RowBox[{"-", "a"}]]}]], "Output",
 CellChangeTimes->{{3.5890303401407433`*^9, 3.5890303913316717`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  RowBox[{"-", 
   RowBox[{"N", "[", 
    RowBox[{"Integrate", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"t", "^", 
        RowBox[{"(", 
         RowBox[{"2", "-", "1"}], ")"}]}], 
       RowBox[{"E", "^", 
        RowBox[{"(", 
         RowBox[{"2", " ", "t"}], ")"}]}]}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", "0", ",", 
        RowBox[{"-", 
         RowBox[{"Log", "[", "100", "]"}]}]}], "}"}]}], "]"}], 
    "]"}]}]}]], "Input",
 CellChangeTimes->{{3.589032283125876*^9, 3.5890323119465246`*^9}, {
  3.5890327666125298`*^9, 3.5890328512093687`*^9}}],

Cell[BoxData[
 RowBox[{"-", "0.2497447414907006`"}]], "Output",
 CellChangeTimes->{{3.589032292716425*^9, 3.5890323141636515`*^9}, {
  3.589032767871602*^9, 3.5890328536835103`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Expand", "[", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Gamma", "[", "a", "]"}], "-", 
      RowBox[{"Gamma", "[", 
       RowBox[{"a", ",", 
        RowBox[{
         RowBox[{"-", "s"}], " ", 
         RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
     RowBox[{"-", "a"}]]}], 
   RowBox[{"Gamma", "[", "a", "]"}]], "]"}]], "Input",
 CellChangeTimes->{{3.5890330747831564`*^9, 3.58903308131553*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fa1", "[", 
   RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", 
        RowBox[{"(", 
         RowBox[{"1", "-", "s"}], ")"}]}], " ", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
     RowBox[{"-", "a"}]]}], "-", 
   FractionBox[
    RowBox[{
     RowBox[{"Gamma", "[", 
      RowBox[{"a", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", "s"}], ")"}]}], " ", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", "s"}], ")"}]}], " ", 
        RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
      RowBox[{"-", "a"}]]}], 
    RowBox[{"Gamma", "[", "a", "]"}]]}]}]], "Input",
 CellChangeTimes->{{3.5890331085650883`*^9, 3.5890331234729414`*^9}, {
  3.5890331931599274`*^9, 3.5890331940509777`*^9}, {3.5890338570889015`*^9, 
  3.5890338711097035`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Fa2", "[", 
    RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
   FractionBox[
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"Gamma", "[", "a", "]"}], "-", 
       RowBox[{"Gamma", "[", 
        RowBox[{"a", ",", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"1", "-", "s"}], ")"}]}], " ", 
          RowBox[{"Log", "[", "n", "]"}]}]}], "]"}]}], ")"}], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"-", 
        RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", "s"}], ")"}]}], " ", 
        RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
      RowBox[{"-", "a"}]]}], 
    RowBox[{"Gamma", "[", "a", "]"}]]}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.5890331288882513`*^9, 3.589033133291503*^9}, 
   3.589033198193215*^9, {3.589033843740138*^9, 3.589033851705594*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Fa3", "[", 
   RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Gamma", "[", 
      RowBox[{"a", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "-", "s"}], ")"}]}], " ", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", "s"}], ")"}], 
     RowBox[{"-", "a"}]]}], 
   RowBox[{"Gamma", "[", "a", "]"}]]}]], "Input",
 CellChangeTimes->{{3.5890331380957775`*^9, 3.589033143803104*^9}, 
   3.589033200188329*^9, 3.589033547169175*^9, {3.5890338174396343`*^9, 
   3.5890338379598074`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"{", 
   RowBox[{
    RowBox[{"Fa1", "[", 
     RowBox[{
      RowBox[{"a0", "=", "140"}], ",", 
      RowBox[{"a1", "=", "2"}], ",", 
      RowBox[{"a2", "=", "0"}]}], "]"}], ",", 
    RowBox[{"Fa2", "[", 
     RowBox[{"a0", ",", "a1", ",", "a2"}], "]"}], ",", 
    RowBox[{"Fa3", "[", 
     RowBox[{"a0", ",", "a1", ",", "a2"}], "]"}]}], "}"}], "]"}]], "Input",
 CellChangeTimes->{{3.589033147244301*^9, 3.589033249800167*^9}, {
  3.589033553424533*^9, 3.5890335617660103`*^9}, {3.5890337918051677`*^9, 
  3.589033800330655*^9}, {3.5890338780601015`*^9, 3.589033878356118*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"552.8299391653023`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.757967686724663`*^-14", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"552.8299391653023`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.757967686724663`*^-14", " ", "\[ImaginaryI]"}]}], ",", 
   RowBox[{"552.8299391653023`", "\[VeryThinSpace]", "-", 
    RowBox[{"6.757967686724663`*^-14", " ", "\[ImaginaryI]"}]}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.589033176221958*^9, 3.5890332500841827`*^9}, {
  3.5890335494113035`*^9, 3.589033562057027*^9}, {3.5890337932012477`*^9, 
  3.5890338005826693`*^9}, {3.5890338737668557`*^9, 3.5890338790351567`*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"FullSimplify", "[", 
  FractionBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{"Gamma", "[", 
      RowBox[{"a", ",", "0", ",", 
       RowBox[{
        RowBox[{"-", "s"}], " ", 
        RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], ")"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
     RowBox[{"-", "a"}]]}], 
   RowBox[{"Gamma", "[", "a", "]"}]], "]"}]], "Input",
 CellChangeTimes->{{3.589033263619957*^9, 3.589033269718306*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  FractionBox[
   RowBox[{
    RowBox[{"Gamma", "[", 
     RowBox[{"a", ",", "0", ",", 
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"Log", "[", "n", "]"}]}]}], "]"}], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
     RowBox[{"-", "a"}]]}], 
   RowBox[{"Gamma", "[", "a", "]"}]], "/.", 
  RowBox[{"s", "\[Rule]", "0"}]}]], "Input",
 CellChangeTimes->{{3.5890332723244553`*^9, 3.5890332770727262`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   SuperscriptBox["0", 
    RowBox[{"-", "a"}]], " ", 
   RowBox[{"Gamma", "[", 
    RowBox[{"a", ",", "0", ",", "0"}], "]"}], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"]}], 
  RowBox[{"Gamma", "[", "a", "]"}]]], "Output",
 CellChangeTimes->{3.589033277412746*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{" ", 
  RowBox[{"FullSimplify", "[", 
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"-", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{
       RowBox[{"-", "s"}], " ", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
     RowBox[{"-", "a"}]]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.589033353416093*^9, 3.589033358896407*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"e1", "[", 
   RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "s"}], " ", 
      RowBox[{"Log", "[", "n", "]"}]}], ")"}], 
    RowBox[{"-", "a"}]]}]}]], "Input",
 CellChangeTimes->{{3.589033379700597*^9, 3.5890333845428734`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e1", "[", 
  RowBox[{"23", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.589033385550931*^9, 3.589033389285145*^9}, {
  3.589033495862241*^9, 3.5890334959482455`*^9}}],

Cell[BoxData[
 FractionBox["1", "9"]], "Output",
 CellChangeTimes->{3.5890333895981627`*^9, 3.589033496214261*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"e2", "[", 
   RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"-", 
      RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"], " ", "/", 
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{
      RowBox[{"-", "s"}], " ", 
      RowBox[{"Log", "[", "n", "]"}]}], ")"}], "a"]}]}]], "Input",
 CellChangeTimes->{{3.589033394226427*^9, 3.589033405352064*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e2", "[", 
  RowBox[{"23", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.589033409573305*^9, 3.5890334096693106`*^9}, {
  3.5890334925900536`*^9, 3.5890334926610575`*^9}}],

Cell[BoxData[
 FractionBox["1", "9"]], "Output",
 CellChangeTimes->{3.589033409917325*^9, 3.589033492929073*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"e3", "[", 
   RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"Log", "[", "n", "]"}], ")"}], " ", "/", 
     RowBox[{"(", 
      RowBox[{"s", " ", 
       RowBox[{"Log", "[", "n", "]"}]}], ")"}]}], ")"}], "^", 
   "a"}]}]], "Input",
 CellChangeTimes->{{3.589033444732316*^9, 3.5890334844795895`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e3", "[", 
  RowBox[{"23", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.5890334715178485`*^9, 3.589033489364869*^9}}],

Cell[BoxData[
 FractionBox["1", "9"]], "Output",
 CellChangeTimes->{{3.5890334718368664`*^9, 3.589033489594882*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"e4", "[", 
   RowBox[{"n_", ",", "a_", ",", "s_"}], "]"}], ":=", 
  RowBox[{"s", "^", 
   RowBox[{"-", "a"}]}]}]], "Input",
 CellChangeTimes->{{3.589033505078768*^9, 3.589033528688118*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"e4", "[", 
  RowBox[{"23", ",", "2", ",", "3"}], "]"}]], "Input",
 CellChangeTimes->{{3.5890335189955635`*^9, 3.5890335196926036`*^9}}],

Cell[BoxData[
 FractionBox["1", "9"]], "Output",
 CellChangeTimes->{{3.5890335200176225`*^9, 3.589033530412217*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Sum", "[", " ", 
  RowBox[{
   RowBox[{
    RowBox[{"t", "^", 
     RowBox[{"(", 
      RowBox[{"j", "-", "1"}], ")"}]}], "/", 
    RowBox[{"(", 
     RowBox[{"j", "!"}], ")"}]}], ",", 
   RowBox[{"{", 
    RowBox[{"j", ",", "1", ",", "Infinity"}], "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.5890347738823395`*^9, 3.58903478806015*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "1"}], "+", 
   SuperscriptBox["\[ExponentialE]", "t"]}], "t"]], "Output",
 CellChangeTimes->{3.5890347884411716`*^9}]
}, Open  ]]
},
WindowSize->{1195, 867},
WindowMargins->{{Automatic, 50}, {Automatic, 70}},
FrontEndVersion->"8.0 for Microsoft Windows (64-bit) (February 23, 2011)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 302, 7, 31, "Input"],
Cell[884, 31, 232, 7, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1153, 43, 395, 10, 31, "Input"],
Cell[1551, 55, 395, 10, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1983, 70, 371, 10, 31, "Input"],
Cell[2357, 82, 528, 15, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2922, 102, 544, 16, 31, "Input"],
Cell[3469, 120, 707, 21, 76, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4213, 146, 781, 22, 72, "Input"],
Cell[4997, 170, 822, 25, 102, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[5856, 200, 975, 27, 72, "Input"],
Cell[6834, 229, 1003, 31, 102, "Output"]
}, Open  ]],
Cell[7852, 263, 2136, 71, 206, "Input"],
Cell[9991, 336, 94, 1, 31, "Input"],
Cell[10088, 339, 1140, 37, 31, "Input"],
Cell[CellGroupData[{
Cell[11253, 380, 175, 3, 31, "Input"],
Cell[11431, 385, 257, 7, 50, "Output"]
}, Open  ]],
Cell[11703, 395, 1291, 39, 31, "Input"],
Cell[CellGroupData[{
Cell[13019, 438, 176, 3, 31, "Input"],
Cell[13198, 443, 706, 21, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13941, 469, 365, 8, 92, "Input"],
Cell[14309, 479, 178, 6, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14524, 490, 423, 12, 31, "Input"],
Cell[14950, 504, 503, 15, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[15490, 524, 622, 19, 31, "Input"],
Cell[16115, 545, 685, 21, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[16837, 571, 830, 25, 31, "Input"],
Cell[17670, 598, 821, 25, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[18528, 628, 1110, 32, 52, "Input"],
Cell[19641, 662, 79, 1, 30, "Output"]
}, Open  ]],
Cell[19735, 666, 135, 5, 50, "Input"],
Cell[19873, 673, 237, 8, 50, "Input"],
Cell[20113, 683, 405, 14, 50, "Input"],
Cell[20521, 699, 536, 18, 50, "Input"],
Cell[21060, 719, 1148, 37, 31, "Input"],
Cell[CellGroupData[{
Cell[22233, 760, 178, 3, 31, "Input"],
Cell[22414, 765, 605, 19, 50, "Output"]
}, Open  ]],
Cell[23034, 787, 1485, 47, 31, "Input"],
Cell[CellGroupData[{
Cell[24544, 838, 283, 5, 31, "Input"],
Cell[24830, 845, 496, 13, 47, "Output"]
}, Open  ]],
Cell[25341, 861, 691, 20, 31, "Input"],
Cell[CellGroupData[{
Cell[26057, 885, 379, 8, 52, "Input"],
Cell[26439, 895, 1786, 61, 52, "Output"]
}, Open  ]],
Cell[28240, 959, 987, 23, 56, InheritFromParent],
Cell[CellGroupData[{
Cell[29252, 986, 199, 4, 31, "Input"],
Cell[29454, 992, 214, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[29705, 1000, 197, 5, 52, "Input"],
Cell[29905, 1007, 194, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[30136, 1015, 687, 19, 31, "Input"],
Cell[30826, 1036, 55835, 922, 229, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[86698, 1963, 156, 3, 31, "Input"],
Cell[86857, 1968, 569, 17, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[87463, 1990, 158, 3, 31, "Input"],
Cell[87624, 1995, 402, 12, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88063, 2012, 187, 4, 31, "Input"],
Cell[88253, 2018, 111, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88401, 2024, 303, 8, 31, "Input"],
Cell[88707, 2034, 213, 3, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[88957, 2042, 550, 17, 31, "Input"],
Cell[89510, 2061, 114, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[89661, 2067, 252, 6, 72, "Input"],
Cell[89916, 2075, 577, 19, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90530, 2099, 207, 5, 31, "Input"],
Cell[90740, 2106, 90, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[90867, 2112, 547, 18, 31, "Input"],
Cell[91417, 2132, 87, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91541, 2138, 207, 5, 31, "Input"],
Cell[91751, 2145, 115, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[91903, 2151, 573, 18, 31, "Input"],
Cell[92479, 2171, 92, 1, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[92608, 2177, 506, 16, 31, "Input"],
Cell[93117, 2195, 460, 13, 49, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[93614, 2213, 504, 17, 31, "Input"],
Cell[94121, 2232, 575, 18, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[94733, 2255, 528, 17, 31, "Input"],
Cell[95264, 2274, 575, 18, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[95876, 2297, 504, 16, 31, "Input"],
Cell[96383, 2315, 697, 21, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[97117, 2341, 535, 17, 31, "Input"],
Cell[97655, 2360, 815, 26, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[98507, 2391, 469, 16, 31, "Input"],
Cell[98979, 2409, 411, 13, 30, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99427, 2427, 695, 20, 112, "Input"],
Cell[100125, 2449, 182, 3, 30, "Output"]
}, Open  ]],
Cell[100322, 2455, 723, 23, 50, "Input"],
Cell[101048, 2480, 1306, 42, 50, InheritFromParent],
Cell[102357, 2524, 1039, 31, 71, "Input"],
Cell[103399, 2557, 711, 21, 50, "Input"],
Cell[CellGroupData[{
Cell[104135, 2582, 623, 15, 31, "Input"],
Cell[104761, 2599, 668, 12, 33, "Output"]
}, Open  ]],
Cell[105444, 2614, 671, 21, 50, "Input"],
Cell[CellGroupData[{
Cell[106140, 2639, 659, 21, 50, InheritFromParent],
Cell[106802, 2662, 373, 12, 50, "Output"]
}, Open  ]],
Cell[107190, 2677, 440, 14, 33, "Input"],
Cell[107633, 2693, 464, 15, 31, InheritFromParent],
Cell[CellGroupData[{
Cell[108122, 2712, 206, 4, 31, "Input"],
Cell[108331, 2718, 114, 2, 47, "Output"]
}, Open  ]],
Cell[108460, 2723, 447, 14, 33, "Input"],
Cell[CellGroupData[{
Cell[108932, 2741, 210, 4, 31, "Input"],
Cell[109145, 2747, 112, 2, 47, "Output"]
}, Open  ]],
Cell[109272, 2752, 413, 13, 31, "Input"],
Cell[CellGroupData[{
Cell[109710, 2769, 157, 3, 31, "Input"],
Cell[109870, 2774, 116, 2, 47, "Output"]
}, Open  ]],
Cell[110001, 2779, 224, 6, 31, "Input"],
Cell[CellGroupData[{
Cell[110250, 2789, 159, 3, 31, "Input"],
Cell[110412, 2794, 116, 2, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[110565, 2801, 365, 11, 31, "Input"],
Cell[110933, 2814, 173, 5, 49, "Output"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
